
13_ADC_Continuous_Conversion.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000041d8  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000384  08004368  08004368  00005368  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080046ec  080046ec  000061c8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  080046ec  080046ec  000056ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080046f4  080046f4  000061c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080046f4  080046f4  000056f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080046f8  080046f8  000056f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001c8  20000000  080046fc  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  000061c8  2**0
                  CONTENTS
 10 .bss          00000194  200001c8  200001c8  000061c8  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000035c  2000035c  000061c8  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000061c8  2**0
                  CONTENTS, READONLY
 13 .debug_info   000024a4  00000000  00000000  000061f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000008d5  00000000  00000000  0000869c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000250  00000000  00000000  00008f78  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000001a5  00000000  00000000  000091c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002e28  00000000  00000000  0000936d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00003088  00000000  00000000  0000c195  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000c978  00000000  00000000  0000f21d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0001bb95  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00001994  00000000  00000000  0001bbd8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000007a  00000000  00000000  0001d56c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001c8 	.word	0x200001c8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08004350 	.word	0x08004350

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001cc 	.word	0x200001cc
 80001cc:	08004350 	.word	0x08004350

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	@ 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <delay1>:
#define ADC_SQR1_L_Msk          (0xFUL << 0U)
#define ADC_SQR1_L              ADC_SQR1_L_Msk                // Sequence length


void delay1(void)
{
 8000ba8:	b480      	push	{r7}
 8000baa:	b083      	sub	sp, #12
 8000bac:	af00      	add	r7, sp, #0
	for (volatile int i = 0; i < 1000; i++); // Delay ~20us
 8000bae:	2300      	movs	r3, #0
 8000bb0:	607b      	str	r3, [r7, #4]
 8000bb2:	e002      	b.n	8000bba <delay1+0x12>
 8000bb4:	687b      	ldr	r3, [r7, #4]
 8000bb6:	3301      	adds	r3, #1
 8000bb8:	607b      	str	r3, [r7, #4]
 8000bba:	687b      	ldr	r3, [r7, #4]
 8000bbc:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8000bc0:	dbf8      	blt.n	8000bb4 <delay1+0xc>
}
 8000bc2:	bf00      	nop
 8000bc4:	bf00      	nop
 8000bc6:	370c      	adds	r7, #12
 8000bc8:	46bd      	mov	sp, r7
 8000bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bce:	4770      	bx	lr

08000bd0 <adc_init>:

void adc_init(void)
{
 8000bd0:	b580      	push	{r7, lr}
 8000bd2:	af00      	add	r7, sp, #0
    /*** 1. Enable clocks ***/
    GPIOA_PCLK_EN();
 8000bd4:	4b3e      	ldr	r3, [pc, #248]	@ (8000cd0 <adc_init+0x100>)
 8000bd6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000bd8:	4a3d      	ldr	r2, [pc, #244]	@ (8000cd0 <adc_init+0x100>)
 8000bda:	f043 0301 	orr.w	r3, r3, #1
 8000bde:	64d3      	str	r3, [r2, #76]	@ 0x4c
    RCC->AHB2ENR |= RCC_AHB2ENR_ADCEN;     // ADC clock
 8000be0:	4b3b      	ldr	r3, [pc, #236]	@ (8000cd0 <adc_init+0x100>)
 8000be2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000be4:	4a3a      	ldr	r2, [pc, #232]	@ (8000cd0 <adc_init+0x100>)
 8000be6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000bea:	64d3      	str	r3, [r2, #76]	@ 0x4c

    /*** 2. Configure GPIO ***/
    // ADC1_IN5 = PA0
    GPIOA->MODER |= (3U << (0 * 2));       // PA0 analog
 8000bec:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000bf0:	681b      	ldr	r3, [r3, #0]
 8000bf2:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 8000bf6:	f043 0303 	orr.w	r3, r3, #3
 8000bfa:	6013      	str	r3, [r2, #0]
    GPIOA->PUPDR &= ~(3U << (0 * 2));      // No pull
 8000bfc:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000c00:	68db      	ldr	r3, [r3, #12]
 8000c02:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 8000c06:	f023 0303 	bic.w	r3, r3, #3
 8000c0a:	60d3      	str	r3, [r2, #12]
    GPIOA->ASCR  |= (1U << 0);             // Connect analog switch
 8000c0c:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000c10:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000c12:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 8000c16:	f043 0301 	orr.w	r3, r3, #1
 8000c1a:	62d3      	str	r3, [r2, #44]	@ 0x2c

    /*** 3. Configure ADC clock source ***/
    ADCOM->CCR &= ~ADC_CCR_CKMODE;
 8000c1c:	4b2d      	ldr	r3, [pc, #180]	@ (8000cd4 <adc_init+0x104>)
 8000c1e:	689b      	ldr	r3, [r3, #8]
 8000c20:	4a2c      	ldr	r2, [pc, #176]	@ (8000cd4 <adc_init+0x104>)
 8000c22:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8000c26:	6093      	str	r3, [r2, #8]
    ADCOM->CCR |= ADC_CCR_CKMODE_DIV1; // HCLK / 1
 8000c28:	4b2a      	ldr	r3, [pc, #168]	@ (8000cd4 <adc_init+0x104>)
 8000c2a:	689b      	ldr	r3, [r3, #8]
 8000c2c:	4a29      	ldr	r2, [pc, #164]	@ (8000cd4 <adc_init+0x104>)
 8000c2e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000c32:	6093      	str	r3, [r2, #8]

    /*** 4. Power-up ADC ***/
    ADC1->CR &= ~ADC_CR_DEEPPWD;       // Exit deep power-down
 8000c34:	4b28      	ldr	r3, [pc, #160]	@ (8000cd8 <adc_init+0x108>)
 8000c36:	689b      	ldr	r3, [r3, #8]
 8000c38:	4a27      	ldr	r2, [pc, #156]	@ (8000cd8 <adc_init+0x108>)
 8000c3a:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 8000c3e:	6093      	str	r3, [r2, #8]
    ADC1->CR |= ADC_CR_ADVREGEN;       // Enable regulator
 8000c40:	4b25      	ldr	r3, [pc, #148]	@ (8000cd8 <adc_init+0x108>)
 8000c42:	689b      	ldr	r3, [r3, #8]
 8000c44:	4a24      	ldr	r2, [pc, #144]	@ (8000cd8 <adc_init+0x108>)
 8000c46:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000c4a:	6093      	str	r3, [r2, #8]
    delay1();
 8000c4c:	f7ff ffac 	bl	8000ba8 <delay1>

    /*** 5. Calibrate ***/
    ADC1->CR |= ADC_CR_ADCAL;
 8000c50:	4b21      	ldr	r3, [pc, #132]	@ (8000cd8 <adc_init+0x108>)
 8000c52:	689b      	ldr	r3, [r3, #8]
 8000c54:	4a20      	ldr	r2, [pc, #128]	@ (8000cd8 <adc_init+0x108>)
 8000c56:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000c5a:	6093      	str	r3, [r2, #8]
    while (ADC1->CR & ADC_CR_ADCAL);
 8000c5c:	bf00      	nop
 8000c5e:	4b1e      	ldr	r3, [pc, #120]	@ (8000cd8 <adc_init+0x108>)
 8000c60:	689b      	ldr	r3, [r3, #8]
 8000c62:	2b00      	cmp	r3, #0
 8000c64:	dbfb      	blt.n	8000c5e <adc_init+0x8e>

    /*** 6. Sampling time for channel 5 ***/
    ADC1->SMPR1 &= ~(0x7U << (5 * 3));
 8000c66:	4b1c      	ldr	r3, [pc, #112]	@ (8000cd8 <adc_init+0x108>)
 8000c68:	695b      	ldr	r3, [r3, #20]
 8000c6a:	4a1b      	ldr	r2, [pc, #108]	@ (8000cd8 <adc_init+0x108>)
 8000c6c:	f423 3360 	bic.w	r3, r3, #229376	@ 0x38000
 8000c70:	6153      	str	r3, [r2, #20]
    ADC1->SMPR1 |=  (0x2U << (5 * 3)); // 12.5 cycles
 8000c72:	4b19      	ldr	r3, [pc, #100]	@ (8000cd8 <adc_init+0x108>)
 8000c74:	695b      	ldr	r3, [r3, #20]
 8000c76:	4a18      	ldr	r2, [pc, #96]	@ (8000cd8 <adc_init+0x108>)
 8000c78:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000c7c:	6153      	str	r3, [r2, #20]

    /*** 7. Sequence length & channel ***/
    ADC1->SQR1 &= ~ADC_SQR1_L;                   // 1 conversion
 8000c7e:	4b16      	ldr	r3, [pc, #88]	@ (8000cd8 <adc_init+0x108>)
 8000c80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000c82:	4a15      	ldr	r2, [pc, #84]	@ (8000cd8 <adc_init+0x108>)
 8000c84:	f023 030f 	bic.w	r3, r3, #15
 8000c88:	62d3      	str	r3, [r2, #44]	@ 0x2c
    ADC1->SQR1 &= ~(0x1FU << 6U);  // Clear SQ1
 8000c8a:	4b13      	ldr	r3, [pc, #76]	@ (8000cd8 <adc_init+0x108>)
 8000c8c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000c8e:	4a12      	ldr	r2, [pc, #72]	@ (8000cd8 <adc_init+0x108>)
 8000c90:	f423 63f8 	bic.w	r3, r3, #1984	@ 0x7c0
 8000c94:	62d3      	str	r3, [r2, #44]	@ 0x2c
    ADC1->SQR1 |=  (5U << 6U);     // SQ1 = channel 5
 8000c96:	4b10      	ldr	r3, [pc, #64]	@ (8000cd8 <adc_init+0x108>)
 8000c98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000c9a:	4a0f      	ldr	r2, [pc, #60]	@ (8000cd8 <adc_init+0x108>)
 8000c9c:	f443 73a0 	orr.w	r3, r3, #320	@ 0x140
 8000ca0:	62d3      	str	r3, [r2, #44]	@ 0x2c

    /*** 8. Enable ADC ***/
    ADC1->ISR |= ADC_ISR_ADRDY;        // Clear ADRDY
 8000ca2:	4b0d      	ldr	r3, [pc, #52]	@ (8000cd8 <adc_init+0x108>)
 8000ca4:	681b      	ldr	r3, [r3, #0]
 8000ca6:	4a0c      	ldr	r2, [pc, #48]	@ (8000cd8 <adc_init+0x108>)
 8000ca8:	f043 0301 	orr.w	r3, r3, #1
 8000cac:	6013      	str	r3, [r2, #0]
    ADC1->CR  |= ADC_CR_ADEN;          // Enable ADC
 8000cae:	4b0a      	ldr	r3, [pc, #40]	@ (8000cd8 <adc_init+0x108>)
 8000cb0:	689b      	ldr	r3, [r3, #8]
 8000cb2:	4a09      	ldr	r2, [pc, #36]	@ (8000cd8 <adc_init+0x108>)
 8000cb4:	f043 0301 	orr.w	r3, r3, #1
 8000cb8:	6093      	str	r3, [r2, #8]
    while (!(ADC1->ISR & ADC_ISR_ADRDY));
 8000cba:	bf00      	nop
 8000cbc:	4b06      	ldr	r3, [pc, #24]	@ (8000cd8 <adc_init+0x108>)
 8000cbe:	681b      	ldr	r3, [r3, #0]
 8000cc0:	f003 0301 	and.w	r3, r3, #1
 8000cc4:	2b00      	cmp	r3, #0
 8000cc6:	d0f9      	beq.n	8000cbc <adc_init+0xec>
}
 8000cc8:	bf00      	nop
 8000cca:	bf00      	nop
 8000ccc:	bd80      	pop	{r7, pc}
 8000cce:	bf00      	nop
 8000cd0:	40021000 	.word	0x40021000
 8000cd4:	50040300 	.word	0x50040300
 8000cd8:	50040000 	.word	0x50040000

08000cdc <start_conversion>:

void start_conversion(void)
{
 8000cdc:	b480      	push	{r7}
 8000cde:	af00      	add	r7, sp, #0
    /* Enable continuous conversion mode */
    ADC1->CFGR |= (1<<13);
 8000ce0:	4b08      	ldr	r3, [pc, #32]	@ (8000d04 <start_conversion+0x28>)
 8000ce2:	68db      	ldr	r3, [r3, #12]
 8000ce4:	4a07      	ldr	r2, [pc, #28]	@ (8000d04 <start_conversion+0x28>)
 8000ce6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000cea:	60d3      	str	r3, [r2, #12]

    /* Start ADC conversion */
    ADC1->CR |= (1<<2);
 8000cec:	4b05      	ldr	r3, [pc, #20]	@ (8000d04 <start_conversion+0x28>)
 8000cee:	689b      	ldr	r3, [r3, #8]
 8000cf0:	4a04      	ldr	r2, [pc, #16]	@ (8000d04 <start_conversion+0x28>)
 8000cf2:	f043 0304 	orr.w	r3, r3, #4
 8000cf6:	6093      	str	r3, [r2, #8]
}
 8000cf8:	bf00      	nop
 8000cfa:	46bd      	mov	sp, r7
 8000cfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d00:	4770      	bx	lr
 8000d02:	bf00      	nop
 8000d04:	50040000 	.word	0x50040000

08000d08 <adc_read>:

uint16_t adc_read(void)
{
 8000d08:	b480      	push	{r7}
 8000d0a:	af00      	add	r7, sp, #0
    /* Wait until end of conversion */
    while(!(ADC1->ISR & (1<<2)));
 8000d0c:	bf00      	nop
 8000d0e:	4b07      	ldr	r3, [pc, #28]	@ (8000d2c <adc_read+0x24>)
 8000d10:	681b      	ldr	r3, [r3, #0]
 8000d12:	f003 0304 	and.w	r3, r3, #4
 8000d16:	2b00      	cmp	r3, #0
 8000d18:	d0f9      	beq.n	8000d0e <adc_read+0x6>

    /* Return converted value */
    return (ADC1->DR);
 8000d1a:	4b04      	ldr	r3, [pc, #16]	@ (8000d2c <adc_read+0x24>)
 8000d1c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8000d1e:	b29b      	uxth	r3, r3
}
 8000d20:	4618      	mov	r0, r3
 8000d22:	46bd      	mov	sp, r7
 8000d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d28:	4770      	bx	lr
 8000d2a:	bf00      	nop
 8000d2c:	50040000 	.word	0x50040000

08000d30 <GPIO_Init>:
}

/*Init and Deinit */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000d30:	b480      	push	{r7}
 8000d32:	b087      	sub	sp, #28
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000d38:	2300      	movs	r3, #0
 8000d3a:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000d3c:	687b      	ldr	r3, [r7, #4]
 8000d3e:	795b      	ldrb	r3, [r3, #5]
 8000d40:	2b03      	cmp	r3, #3
 8000d42:	d822      	bhi.n	8000d8a <GPIO_Init+0x5a>
	{
		temp=( pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000d44:	687b      	ldr	r3, [r7, #4]
 8000d46:	795b      	ldrb	r3, [r3, #5]
 8000d48:	461a      	mov	r2, r3
 8000d4a:	687b      	ldr	r3, [r7, #4]
 8000d4c:	791b      	ldrb	r3, [r3, #4]
 8000d4e:	005b      	lsls	r3, r3, #1
 8000d50:	fa02 f303 	lsl.w	r3, r2, r3
 8000d54:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000d56:	687b      	ldr	r3, [r7, #4]
 8000d58:	681b      	ldr	r3, [r3, #0]
 8000d5a:	681a      	ldr	r2, [r3, #0]
 8000d5c:	687b      	ldr	r3, [r7, #4]
 8000d5e:	791b      	ldrb	r3, [r3, #4]
 8000d60:	005b      	lsls	r3, r3, #1
 8000d62:	2103      	movs	r1, #3
 8000d64:	fa01 f303 	lsl.w	r3, r1, r3
 8000d68:	43db      	mvns	r3, r3
 8000d6a:	4619      	mov	r1, r3
 8000d6c:	687b      	ldr	r3, [r7, #4]
 8000d6e:	681b      	ldr	r3, [r3, #0]
 8000d70:	400a      	ands	r2, r1
 8000d72:	601a      	str	r2, [r3, #0]
		pGPIOHandle ->pGPIOx->MODER |= temp;
 8000d74:	687b      	ldr	r3, [r7, #4]
 8000d76:	681b      	ldr	r3, [r3, #0]
 8000d78:	6819      	ldr	r1, [r3, #0]
 8000d7a:	687b      	ldr	r3, [r7, #4]
 8000d7c:	681b      	ldr	r3, [r3, #0]
 8000d7e:	697a      	ldr	r2, [r7, #20]
 8000d80:	430a      	orrs	r2, r1
 8000d82:	601a      	str	r2, [r3, #0]
		temp=0;
 8000d84:	2300      	movs	r3, #0
 8000d86:	617b      	str	r3, [r7, #20]
 8000d88:	e0e1      	b.n	8000f4e <GPIO_Init+0x21e>
	}
	else{
		temp=( pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000d8a:	687b      	ldr	r3, [r7, #4]
 8000d8c:	795b      	ldrb	r3, [r3, #5]
 8000d8e:	461a      	mov	r2, r3
 8000d90:	687b      	ldr	r3, [r7, #4]
 8000d92:	791b      	ldrb	r3, [r3, #4]
 8000d94:	005b      	lsls	r3, r3, #1
 8000d96:	fa02 f303 	lsl.w	r3, r2, r3
 8000d9a:	617b      	str	r3, [r7, #20]
				pGPIOHandle->pGPIOx->MODER &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000d9c:	687b      	ldr	r3, [r7, #4]
 8000d9e:	681b      	ldr	r3, [r3, #0]
 8000da0:	681a      	ldr	r2, [r3, #0]
 8000da2:	687b      	ldr	r3, [r7, #4]
 8000da4:	791b      	ldrb	r3, [r3, #4]
 8000da6:	005b      	lsls	r3, r3, #1
 8000da8:	2103      	movs	r1, #3
 8000daa:	fa01 f303 	lsl.w	r3, r1, r3
 8000dae:	43db      	mvns	r3, r3
 8000db0:	4619      	mov	r1, r3
 8000db2:	687b      	ldr	r3, [r7, #4]
 8000db4:	681b      	ldr	r3, [r3, #0]
 8000db6:	400a      	ands	r2, r1
 8000db8:	601a      	str	r2, [r3, #0]
				pGPIOHandle ->pGPIOx->MODER |= temp;
 8000dba:	687b      	ldr	r3, [r7, #4]
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	6819      	ldr	r1, [r3, #0]
 8000dc0:	687b      	ldr	r3, [r7, #4]
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	697a      	ldr	r2, [r7, #20]
 8000dc6:	430a      	orrs	r2, r1
 8000dc8:	601a      	str	r2, [r3, #0]
				temp=0;
 8000dca:	2300      	movs	r3, #0
 8000dcc:	617b      	str	r3, [r7, #20]
		if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000dce:	687b      	ldr	r3, [r7, #4]
 8000dd0:	795b      	ldrb	r3, [r3, #5]
 8000dd2:	2b04      	cmp	r3, #4
 8000dd4:	d117      	bne.n	8000e06 <GPIO_Init+0xd6>
		{
			EXTI->FTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000dd6:	4b47      	ldr	r3, [pc, #284]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000dd8:	68db      	ldr	r3, [r3, #12]
 8000dda:	687a      	ldr	r2, [r7, #4]
 8000ddc:	7912      	ldrb	r2, [r2, #4]
 8000dde:	4611      	mov	r1, r2
 8000de0:	2201      	movs	r2, #1
 8000de2:	408a      	lsls	r2, r1
 8000de4:	4611      	mov	r1, r2
 8000de6:	4a43      	ldr	r2, [pc, #268]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000de8:	430b      	orrs	r3, r1
 8000dea:	60d3      	str	r3, [r2, #12]

			EXTI->RTSR1 &=~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000dec:	4b41      	ldr	r3, [pc, #260]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000dee:	689b      	ldr	r3, [r3, #8]
 8000df0:	687a      	ldr	r2, [r7, #4]
 8000df2:	7912      	ldrb	r2, [r2, #4]
 8000df4:	4611      	mov	r1, r2
 8000df6:	2201      	movs	r2, #1
 8000df8:	408a      	lsls	r2, r1
 8000dfa:	43d2      	mvns	r2, r2
 8000dfc:	4611      	mov	r1, r2
 8000dfe:	4a3d      	ldr	r2, [pc, #244]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000e00:	400b      	ands	r3, r1
 8000e02:	6093      	str	r3, [r2, #8]
 8000e04:	e035      	b.n	8000e72 <GPIO_Init+0x142>
		}
		else if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000e06:	687b      	ldr	r3, [r7, #4]
 8000e08:	795b      	ldrb	r3, [r3, #5]
 8000e0a:	2b05      	cmp	r3, #5
 8000e0c:	d117      	bne.n	8000e3e <GPIO_Init+0x10e>
		{
			EXTI->RTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000e0e:	4b39      	ldr	r3, [pc, #228]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000e10:	689b      	ldr	r3, [r3, #8]
 8000e12:	687a      	ldr	r2, [r7, #4]
 8000e14:	7912      	ldrb	r2, [r2, #4]
 8000e16:	4611      	mov	r1, r2
 8000e18:	2201      	movs	r2, #1
 8000e1a:	408a      	lsls	r2, r1
 8000e1c:	4611      	mov	r1, r2
 8000e1e:	4a35      	ldr	r2, [pc, #212]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000e20:	430b      	orrs	r3, r1
 8000e22:	6093      	str	r3, [r2, #8]

			EXTI->FTSR1 &=~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000e24:	4b33      	ldr	r3, [pc, #204]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000e26:	68db      	ldr	r3, [r3, #12]
 8000e28:	687a      	ldr	r2, [r7, #4]
 8000e2a:	7912      	ldrb	r2, [r2, #4]
 8000e2c:	4611      	mov	r1, r2
 8000e2e:	2201      	movs	r2, #1
 8000e30:	408a      	lsls	r2, r1
 8000e32:	43d2      	mvns	r2, r2
 8000e34:	4611      	mov	r1, r2
 8000e36:	4a2f      	ldr	r2, [pc, #188]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000e38:	400b      	ands	r3, r1
 8000e3a:	60d3      	str	r3, [r2, #12]
 8000e3c:	e019      	b.n	8000e72 <GPIO_Init+0x142>

		}
		else if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 8000e3e:	687b      	ldr	r3, [r7, #4]
 8000e40:	795b      	ldrb	r3, [r3, #5]
 8000e42:	2b06      	cmp	r3, #6
 8000e44:	d115      	bne.n	8000e72 <GPIO_Init+0x142>
		{
			EXTI->FTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000e46:	4b2b      	ldr	r3, [pc, #172]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000e48:	68db      	ldr	r3, [r3, #12]
 8000e4a:	687a      	ldr	r2, [r7, #4]
 8000e4c:	7912      	ldrb	r2, [r2, #4]
 8000e4e:	4611      	mov	r1, r2
 8000e50:	2201      	movs	r2, #1
 8000e52:	408a      	lsls	r2, r1
 8000e54:	4611      	mov	r1, r2
 8000e56:	4a27      	ldr	r2, [pc, #156]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000e58:	430b      	orrs	r3, r1
 8000e5a:	60d3      	str	r3, [r2, #12]

			EXTI->RTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000e5c:	4b25      	ldr	r3, [pc, #148]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000e5e:	689b      	ldr	r3, [r3, #8]
 8000e60:	687a      	ldr	r2, [r7, #4]
 8000e62:	7912      	ldrb	r2, [r2, #4]
 8000e64:	4611      	mov	r1, r2
 8000e66:	2201      	movs	r2, #1
 8000e68:	408a      	lsls	r2, r1
 8000e6a:	4611      	mov	r1, r2
 8000e6c:	4a21      	ldr	r2, [pc, #132]	@ (8000ef4 <GPIO_Init+0x1c4>)
 8000e6e:	430b      	orrs	r3, r1
 8000e70:	6093      	str	r3, [r2, #8]
		}
	 uint8_t temp1=pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber/4;
 8000e72:	687b      	ldr	r3, [r7, #4]
 8000e74:	791b      	ldrb	r3, [r3, #4]
 8000e76:	089b      	lsrs	r3, r3, #2
 8000e78:	74fb      	strb	r3, [r7, #19]
	 uint8_t temp2=pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber%4;
 8000e7a:	687b      	ldr	r3, [r7, #4]
 8000e7c:	791b      	ldrb	r3, [r3, #4]
 8000e7e:	f003 0303 	and.w	r3, r3, #3
 8000e82:	74bb      	strb	r3, [r7, #18]
	 uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000e84:	687b      	ldr	r3, [r7, #4]
 8000e86:	681b      	ldr	r3, [r3, #0]
 8000e88:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 8000e8c:	d042      	beq.n	8000f14 <GPIO_Init+0x1e4>
 8000e8e:	687b      	ldr	r3, [r7, #4]
 8000e90:	681b      	ldr	r3, [r3, #0]
 8000e92:	4a19      	ldr	r2, [pc, #100]	@ (8000ef8 <GPIO_Init+0x1c8>)
 8000e94:	4293      	cmp	r3, r2
 8000e96:	d02b      	beq.n	8000ef0 <GPIO_Init+0x1c0>
 8000e98:	687b      	ldr	r3, [r7, #4]
 8000e9a:	681b      	ldr	r3, [r3, #0]
 8000e9c:	4a17      	ldr	r2, [pc, #92]	@ (8000efc <GPIO_Init+0x1cc>)
 8000e9e:	4293      	cmp	r3, r2
 8000ea0:	d024      	beq.n	8000eec <GPIO_Init+0x1bc>
 8000ea2:	687b      	ldr	r3, [r7, #4]
 8000ea4:	681b      	ldr	r3, [r3, #0]
 8000ea6:	4a16      	ldr	r2, [pc, #88]	@ (8000f00 <GPIO_Init+0x1d0>)
 8000ea8:	4293      	cmp	r3, r2
 8000eaa:	d01d      	beq.n	8000ee8 <GPIO_Init+0x1b8>
 8000eac:	687b      	ldr	r3, [r7, #4]
 8000eae:	681b      	ldr	r3, [r3, #0]
 8000eb0:	4a14      	ldr	r2, [pc, #80]	@ (8000f04 <GPIO_Init+0x1d4>)
 8000eb2:	4293      	cmp	r3, r2
 8000eb4:	d016      	beq.n	8000ee4 <GPIO_Init+0x1b4>
 8000eb6:	687b      	ldr	r3, [r7, #4]
 8000eb8:	681b      	ldr	r3, [r3, #0]
 8000eba:	4a13      	ldr	r2, [pc, #76]	@ (8000f08 <GPIO_Init+0x1d8>)
 8000ebc:	4293      	cmp	r3, r2
 8000ebe:	d00f      	beq.n	8000ee0 <GPIO_Init+0x1b0>
 8000ec0:	687b      	ldr	r3, [r7, #4]
 8000ec2:	681b      	ldr	r3, [r3, #0]
 8000ec4:	4a11      	ldr	r2, [pc, #68]	@ (8000f0c <GPIO_Init+0x1dc>)
 8000ec6:	4293      	cmp	r3, r2
 8000ec8:	d008      	beq.n	8000edc <GPIO_Init+0x1ac>
 8000eca:	687b      	ldr	r3, [r7, #4]
 8000ecc:	681b      	ldr	r3, [r3, #0]
 8000ece:	4a10      	ldr	r2, [pc, #64]	@ (8000f10 <GPIO_Init+0x1e0>)
 8000ed0:	4293      	cmp	r3, r2
 8000ed2:	d101      	bne.n	8000ed8 <GPIO_Init+0x1a8>
 8000ed4:	2307      	movs	r3, #7
 8000ed6:	e01e      	b.n	8000f16 <GPIO_Init+0x1e6>
 8000ed8:	2300      	movs	r3, #0
 8000eda:	e01c      	b.n	8000f16 <GPIO_Init+0x1e6>
 8000edc:	2306      	movs	r3, #6
 8000ede:	e01a      	b.n	8000f16 <GPIO_Init+0x1e6>
 8000ee0:	2305      	movs	r3, #5
 8000ee2:	e018      	b.n	8000f16 <GPIO_Init+0x1e6>
 8000ee4:	2304      	movs	r3, #4
 8000ee6:	e016      	b.n	8000f16 <GPIO_Init+0x1e6>
 8000ee8:	2303      	movs	r3, #3
 8000eea:	e014      	b.n	8000f16 <GPIO_Init+0x1e6>
 8000eec:	2302      	movs	r3, #2
 8000eee:	e012      	b.n	8000f16 <GPIO_Init+0x1e6>
 8000ef0:	2301      	movs	r3, #1
 8000ef2:	e010      	b.n	8000f16 <GPIO_Init+0x1e6>
 8000ef4:	40010400 	.word	0x40010400
 8000ef8:	48000400 	.word	0x48000400
 8000efc:	48000800 	.word	0x48000800
 8000f00:	48000c00 	.word	0x48000c00
 8000f04:	48001000 	.word	0x48001000
 8000f08:	48001400 	.word	0x48001400
 8000f0c:	48001800 	.word	0x48001800
 8000f10:	48001c00 	.word	0x48001c00
 8000f14:	2300      	movs	r3, #0
 8000f16:	747b      	strb	r3, [r7, #17]
	 SYSCFG_PCLK_EN();
 8000f18:	4b5e      	ldr	r3, [pc, #376]	@ (8001094 <GPIO_Init+0x364>)
 8000f1a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000f1c:	4a5d      	ldr	r2, [pc, #372]	@ (8001094 <GPIO_Init+0x364>)
 8000f1e:	f043 0301 	orr.w	r3, r3, #1
 8000f22:	6613      	str	r3, [r2, #96]	@ 0x60
	 SYSCFG->EXTICR[temp1]=portcode << (temp2 * 4);
 8000f24:	7c7a      	ldrb	r2, [r7, #17]
 8000f26:	7cbb      	ldrb	r3, [r7, #18]
 8000f28:	009b      	lsls	r3, r3, #2
 8000f2a:	fa02 f103 	lsl.w	r1, r2, r3
 8000f2e:	4a5a      	ldr	r2, [pc, #360]	@ (8001098 <GPIO_Init+0x368>)
 8000f30:	7cfb      	ldrb	r3, [r7, #19]
 8000f32:	3302      	adds	r3, #2
 8000f34:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	 EXTI -> IMR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000f38:	4b58      	ldr	r3, [pc, #352]	@ (800109c <GPIO_Init+0x36c>)
 8000f3a:	681b      	ldr	r3, [r3, #0]
 8000f3c:	687a      	ldr	r2, [r7, #4]
 8000f3e:	7912      	ldrb	r2, [r2, #4]
 8000f40:	4611      	mov	r1, r2
 8000f42:	2201      	movs	r2, #1
 8000f44:	408a      	lsls	r2, r1
 8000f46:	4611      	mov	r1, r2
 8000f48:	4a54      	ldr	r2, [pc, #336]	@ (800109c <GPIO_Init+0x36c>)
 8000f4a:	430b      	orrs	r3, r1
 8000f4c:	6013      	str	r3, [r2, #0]
	}

	temp=0;
 8000f4e:	2300      	movs	r3, #0
 8000f50:	617b      	str	r3, [r7, #20]
	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000f52:	687b      	ldr	r3, [r7, #4]
 8000f54:	799b      	ldrb	r3, [r3, #6]
 8000f56:	461a      	mov	r2, r3
 8000f58:	687b      	ldr	r3, [r7, #4]
 8000f5a:	791b      	ldrb	r3, [r3, #4]
 8000f5c:	005b      	lsls	r3, r3, #1
 8000f5e:	fa02 f303 	lsl.w	r3, r2, r3
 8000f62:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->OSPEEDR &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000f64:	687b      	ldr	r3, [r7, #4]
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	689a      	ldr	r2, [r3, #8]
 8000f6a:	687b      	ldr	r3, [r7, #4]
 8000f6c:	791b      	ldrb	r3, [r3, #4]
 8000f6e:	005b      	lsls	r3, r3, #1
 8000f70:	2103      	movs	r1, #3
 8000f72:	fa01 f303 	lsl.w	r3, r1, r3
 8000f76:	43db      	mvns	r3, r3
 8000f78:	4619      	mov	r1, r3
 8000f7a:	687b      	ldr	r3, [r7, #4]
 8000f7c:	681b      	ldr	r3, [r3, #0]
 8000f7e:	400a      	ands	r2, r1
 8000f80:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000f82:	687b      	ldr	r3, [r7, #4]
 8000f84:	681b      	ldr	r3, [r3, #0]
 8000f86:	6899      	ldr	r1, [r3, #8]
 8000f88:	687b      	ldr	r3, [r7, #4]
 8000f8a:	681b      	ldr	r3, [r3, #0]
 8000f8c:	697a      	ldr	r2, [r7, #20]
 8000f8e:	430a      	orrs	r2, r1
 8000f90:	609a      	str	r2, [r3, #8]
	temp=0;
 8000f92:	2300      	movs	r3, #0
 8000f94:	617b      	str	r3, [r7, #20]

	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinPuPdControl<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000f96:	687b      	ldr	r3, [r7, #4]
 8000f98:	79db      	ldrb	r3, [r3, #7]
 8000f9a:	461a      	mov	r2, r3
 8000f9c:	687b      	ldr	r3, [r7, #4]
 8000f9e:	791b      	ldrb	r3, [r3, #4]
 8000fa0:	005b      	lsls	r3, r3, #1
 8000fa2:	fa02 f303 	lsl.w	r3, r2, r3
 8000fa6:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->PUPDR &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000fa8:	687b      	ldr	r3, [r7, #4]
 8000faa:	681b      	ldr	r3, [r3, #0]
 8000fac:	68da      	ldr	r2, [r3, #12]
 8000fae:	687b      	ldr	r3, [r7, #4]
 8000fb0:	791b      	ldrb	r3, [r3, #4]
 8000fb2:	005b      	lsls	r3, r3, #1
 8000fb4:	2103      	movs	r1, #3
 8000fb6:	fa01 f303 	lsl.w	r3, r1, r3
 8000fba:	43db      	mvns	r3, r3
 8000fbc:	4619      	mov	r1, r3
 8000fbe:	687b      	ldr	r3, [r7, #4]
 8000fc0:	681b      	ldr	r3, [r3, #0]
 8000fc2:	400a      	ands	r2, r1
 8000fc4:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	681b      	ldr	r3, [r3, #0]
 8000fca:	68d9      	ldr	r1, [r3, #12]
 8000fcc:	687b      	ldr	r3, [r7, #4]
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	697a      	ldr	r2, [r7, #20]
 8000fd2:	430a      	orrs	r2, r1
 8000fd4:	60da      	str	r2, [r3, #12]
	temp=0;
 8000fd6:	2300      	movs	r3, #0
 8000fd8:	617b      	str	r3, [r7, #20]

	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinOPType<<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000fda:	687b      	ldr	r3, [r7, #4]
 8000fdc:	7a1b      	ldrb	r3, [r3, #8]
 8000fde:	461a      	mov	r2, r3
 8000fe0:	687b      	ldr	r3, [r7, #4]
 8000fe2:	791b      	ldrb	r3, [r3, #4]
 8000fe4:	fa02 f303 	lsl.w	r3, r2, r3
 8000fe8:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->OTYPER &= ~(0X01 << ( pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000fea:	687b      	ldr	r3, [r7, #4]
 8000fec:	681b      	ldr	r3, [r3, #0]
 8000fee:	685a      	ldr	r2, [r3, #4]
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	791b      	ldrb	r3, [r3, #4]
 8000ff4:	4619      	mov	r1, r3
 8000ff6:	2301      	movs	r3, #1
 8000ff8:	408b      	lsls	r3, r1
 8000ffa:	43db      	mvns	r3, r3
 8000ffc:	4619      	mov	r1, r3
 8000ffe:	687b      	ldr	r3, [r7, #4]
 8001000:	681b      	ldr	r3, [r3, #0]
 8001002:	400a      	ands	r2, r1
 8001004:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8001006:	687b      	ldr	r3, [r7, #4]
 8001008:	681b      	ldr	r3, [r3, #0]
 800100a:	6859      	ldr	r1, [r3, #4]
 800100c:	687b      	ldr	r3, [r7, #4]
 800100e:	681b      	ldr	r3, [r3, #0]
 8001010:	697a      	ldr	r2, [r7, #20]
 8001012:	430a      	orrs	r2, r1
 8001014:	605a      	str	r2, [r3, #4]
	temp=0;
 8001016:	2300      	movs	r3, #0
 8001018:	617b      	str	r3, [r7, #20]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800101a:	687b      	ldr	r3, [r7, #4]
 800101c:	795b      	ldrb	r3, [r3, #5]
 800101e:	2b02      	cmp	r3, #2
 8001020:	d132      	bne.n	8001088 <GPIO_Init+0x358>
	{
		uint32_t temp1 ,temp2;
		temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 8001022:	687b      	ldr	r3, [r7, #4]
 8001024:	791b      	ldrb	r3, [r3, #4]
 8001026:	08db      	lsrs	r3, r3, #3
 8001028:	b2db      	uxtb	r3, r3
 800102a:	60fb      	str	r3, [r7, #12]
		temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 800102c:	687b      	ldr	r3, [r7, #4]
 800102e:	791b      	ldrb	r3, [r3, #4]
 8001030:	f003 0307 	and.w	r3, r3, #7
 8001034:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0X0f<< (4*temp2));
 8001036:	687b      	ldr	r3, [r7, #4]
 8001038:	681b      	ldr	r3, [r3, #0]
 800103a:	68fa      	ldr	r2, [r7, #12]
 800103c:	3208      	adds	r2, #8
 800103e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8001042:	68bb      	ldr	r3, [r7, #8]
 8001044:	009b      	lsls	r3, r3, #2
 8001046:	210f      	movs	r1, #15
 8001048:	fa01 f303 	lsl.w	r3, r1, r3
 800104c:	43db      	mvns	r3, r3
 800104e:	4619      	mov	r1, r3
 8001050:	687b      	ldr	r3, [r7, #4]
 8001052:	681b      	ldr	r3, [r3, #0]
 8001054:	4011      	ands	r1, r2
 8001056:	68fa      	ldr	r2, [r7, #12]
 8001058:	3208      	adds	r2, #8
 800105a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 800105e:	687b      	ldr	r3, [r7, #4]
 8001060:	681b      	ldr	r3, [r3, #0]
 8001062:	68fa      	ldr	r2, [r7, #12]
 8001064:	3208      	adds	r2, #8
 8001066:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800106a:	687b      	ldr	r3, [r7, #4]
 800106c:	7a5b      	ldrb	r3, [r3, #9]
 800106e:	4619      	mov	r1, r3
 8001070:	68bb      	ldr	r3, [r7, #8]
 8001072:	009b      	lsls	r3, r3, #2
 8001074:	fa01 f303 	lsl.w	r3, r1, r3
 8001078:	4619      	mov	r1, r3
 800107a:	687b      	ldr	r3, [r7, #4]
 800107c:	681b      	ldr	r3, [r3, #0]
 800107e:	4311      	orrs	r1, r2
 8001080:	68fa      	ldr	r2, [r7, #12]
 8001082:	3208      	adds	r2, #8
 8001084:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8001088:	bf00      	nop
 800108a:	371c      	adds	r7, #28
 800108c:	46bd      	mov	sp, r7
 800108e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001092:	4770      	bx	lr
 8001094:	40021000 	.word	0x40021000
 8001098:	40010000 	.word	0x40010000
 800109c:	40010400 	.word	0x40010400

080010a0 <USART_PeriClockControl>:
#include "USART_driver.h"
#include "RCC_driver.h"

void USART_PeriClockControl(USART_RegDef_t *pUSARTx, uint8_t EnorDi)
{
 80010a0:	b480      	push	{r7}
 80010a2:	b083      	sub	sp, #12
 80010a4:	af00      	add	r7, sp, #0
 80010a6:	6078      	str	r0, [r7, #4]
 80010a8:	460b      	mov	r3, r1
 80010aa:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 80010ac:	78fb      	ldrb	r3, [r7, #3]
 80010ae:	2b01      	cmp	r3, #1
 80010b0:	d136      	bne.n	8001120 <USART_PeriClockControl+0x80>
	{
		if(pUSARTx == USART1)
 80010b2:	687b      	ldr	r3, [r7, #4]
 80010b4:	4a38      	ldr	r2, [pc, #224]	@ (8001198 <USART_PeriClockControl+0xf8>)
 80010b6:	4293      	cmp	r3, r2
 80010b8:	d106      	bne.n	80010c8 <USART_PeriClockControl+0x28>
		{
			USART1_PCLK_EN();
 80010ba:	4b38      	ldr	r3, [pc, #224]	@ (800119c <USART_PeriClockControl+0xfc>)
 80010bc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80010be:	4a37      	ldr	r2, [pc, #220]	@ (800119c <USART_PeriClockControl+0xfc>)
 80010c0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80010c4:	6613      	str	r3, [r2, #96]	@ 0x60
		else if(pUSARTx == UART5)
		{
			UART5_PCLK_DI();
		}
	}
}
 80010c6:	e061      	b.n	800118c <USART_PeriClockControl+0xec>
		else if(pUSARTx == USART2)
 80010c8:	687b      	ldr	r3, [r7, #4]
 80010ca:	4a35      	ldr	r2, [pc, #212]	@ (80011a0 <USART_PeriClockControl+0x100>)
 80010cc:	4293      	cmp	r3, r2
 80010ce:	d106      	bne.n	80010de <USART_PeriClockControl+0x3e>
			USART2_PCLK_EN();
 80010d0:	4b32      	ldr	r3, [pc, #200]	@ (800119c <USART_PeriClockControl+0xfc>)
 80010d2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80010d4:	4a31      	ldr	r2, [pc, #196]	@ (800119c <USART_PeriClockControl+0xfc>)
 80010d6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80010da:	6593      	str	r3, [r2, #88]	@ 0x58
}
 80010dc:	e056      	b.n	800118c <USART_PeriClockControl+0xec>
		else if(pUSARTx == USART3)
 80010de:	687b      	ldr	r3, [r7, #4]
 80010e0:	4a30      	ldr	r2, [pc, #192]	@ (80011a4 <USART_PeriClockControl+0x104>)
 80010e2:	4293      	cmp	r3, r2
 80010e4:	d106      	bne.n	80010f4 <USART_PeriClockControl+0x54>
			USART3_PCLK_EN();
 80010e6:	4b2d      	ldr	r3, [pc, #180]	@ (800119c <USART_PeriClockControl+0xfc>)
 80010e8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80010ea:	4a2c      	ldr	r2, [pc, #176]	@ (800119c <USART_PeriClockControl+0xfc>)
 80010ec:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 80010f0:	6593      	str	r3, [r2, #88]	@ 0x58
}
 80010f2:	e04b      	b.n	800118c <USART_PeriClockControl+0xec>
		else if(pUSARTx == UART4)
 80010f4:	687b      	ldr	r3, [r7, #4]
 80010f6:	4a2c      	ldr	r2, [pc, #176]	@ (80011a8 <USART_PeriClockControl+0x108>)
 80010f8:	4293      	cmp	r3, r2
 80010fa:	d106      	bne.n	800110a <USART_PeriClockControl+0x6a>
			UART4_PCLK_EN();
 80010fc:	4b27      	ldr	r3, [pc, #156]	@ (800119c <USART_PeriClockControl+0xfc>)
 80010fe:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001100:	4a26      	ldr	r2, [pc, #152]	@ (800119c <USART_PeriClockControl+0xfc>)
 8001102:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8001106:	6593      	str	r3, [r2, #88]	@ 0x58
}
 8001108:	e040      	b.n	800118c <USART_PeriClockControl+0xec>
		else if(pUSARTx == UART5)
 800110a:	687b      	ldr	r3, [r7, #4]
 800110c:	4a27      	ldr	r2, [pc, #156]	@ (80011ac <USART_PeriClockControl+0x10c>)
 800110e:	4293      	cmp	r3, r2
 8001110:	d13c      	bne.n	800118c <USART_PeriClockControl+0xec>
			UART5_PCLK_EN();
 8001112:	4b22      	ldr	r3, [pc, #136]	@ (800119c <USART_PeriClockControl+0xfc>)
 8001114:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001116:	4a21      	ldr	r2, [pc, #132]	@ (800119c <USART_PeriClockControl+0xfc>)
 8001118:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800111c:	6593      	str	r3, [r2, #88]	@ 0x58
}
 800111e:	e035      	b.n	800118c <USART_PeriClockControl+0xec>
		if(pUSARTx == USART1)
 8001120:	687b      	ldr	r3, [r7, #4]
 8001122:	4a1d      	ldr	r2, [pc, #116]	@ (8001198 <USART_PeriClockControl+0xf8>)
 8001124:	4293      	cmp	r3, r2
 8001126:	d106      	bne.n	8001136 <USART_PeriClockControl+0x96>
			USART1_PCLK_DI();
 8001128:	4b1c      	ldr	r3, [pc, #112]	@ (800119c <USART_PeriClockControl+0xfc>)
 800112a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800112c:	4a1b      	ldr	r2, [pc, #108]	@ (800119c <USART_PeriClockControl+0xfc>)
 800112e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8001132:	6613      	str	r3, [r2, #96]	@ 0x60
}
 8001134:	e02a      	b.n	800118c <USART_PeriClockControl+0xec>
		else if(pUSARTx == USART2)
 8001136:	687b      	ldr	r3, [r7, #4]
 8001138:	4a19      	ldr	r2, [pc, #100]	@ (80011a0 <USART_PeriClockControl+0x100>)
 800113a:	4293      	cmp	r3, r2
 800113c:	d106      	bne.n	800114c <USART_PeriClockControl+0xac>
			USART2_PCLK_DI();
 800113e:	4b17      	ldr	r3, [pc, #92]	@ (800119c <USART_PeriClockControl+0xfc>)
 8001140:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001142:	4a16      	ldr	r2, [pc, #88]	@ (800119c <USART_PeriClockControl+0xfc>)
 8001144:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8001148:	6593      	str	r3, [r2, #88]	@ 0x58
}
 800114a:	e01f      	b.n	800118c <USART_PeriClockControl+0xec>
		else if(pUSARTx == USART3)
 800114c:	687b      	ldr	r3, [r7, #4]
 800114e:	4a15      	ldr	r2, [pc, #84]	@ (80011a4 <USART_PeriClockControl+0x104>)
 8001150:	4293      	cmp	r3, r2
 8001152:	d106      	bne.n	8001162 <USART_PeriClockControl+0xc2>
			USART3_PCLK_DI();
 8001154:	4b11      	ldr	r3, [pc, #68]	@ (800119c <USART_PeriClockControl+0xfc>)
 8001156:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001158:	4a10      	ldr	r2, [pc, #64]	@ (800119c <USART_PeriClockControl+0xfc>)
 800115a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800115e:	6593      	str	r3, [r2, #88]	@ 0x58
}
 8001160:	e014      	b.n	800118c <USART_PeriClockControl+0xec>
		else if(pUSARTx == UART4)
 8001162:	687b      	ldr	r3, [r7, #4]
 8001164:	4a10      	ldr	r2, [pc, #64]	@ (80011a8 <USART_PeriClockControl+0x108>)
 8001166:	4293      	cmp	r3, r2
 8001168:	d106      	bne.n	8001178 <USART_PeriClockControl+0xd8>
			UART4_PCLK_DI();
 800116a:	4b0c      	ldr	r3, [pc, #48]	@ (800119c <USART_PeriClockControl+0xfc>)
 800116c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800116e:	4a0b      	ldr	r2, [pc, #44]	@ (800119c <USART_PeriClockControl+0xfc>)
 8001170:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
 8001174:	6593      	str	r3, [r2, #88]	@ 0x58
}
 8001176:	e009      	b.n	800118c <USART_PeriClockControl+0xec>
		else if(pUSARTx == UART5)
 8001178:	687b      	ldr	r3, [r7, #4]
 800117a:	4a0c      	ldr	r2, [pc, #48]	@ (80011ac <USART_PeriClockControl+0x10c>)
 800117c:	4293      	cmp	r3, r2
 800117e:	d105      	bne.n	800118c <USART_PeriClockControl+0xec>
			UART5_PCLK_DI();
 8001180:	4b06      	ldr	r3, [pc, #24]	@ (800119c <USART_PeriClockControl+0xfc>)
 8001182:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001184:	4a05      	ldr	r2, [pc, #20]	@ (800119c <USART_PeriClockControl+0xfc>)
 8001186:	f423 1380 	bic.w	r3, r3, #1048576	@ 0x100000
 800118a:	6593      	str	r3, [r2, #88]	@ 0x58
}
 800118c:	bf00      	nop
 800118e:	370c      	adds	r7, #12
 8001190:	46bd      	mov	sp, r7
 8001192:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001196:	4770      	bx	lr
 8001198:	40013800 	.word	0x40013800
 800119c:	40021000 	.word	0x40021000
 80011a0:	40004400 	.word	0x40004400
 80011a4:	40004800 	.word	0x40004800
 80011a8:	40004c00 	.word	0x40004c00
 80011ac:	40005000 	.word	0x40005000

080011b0 <USART_Init>:
}



void USART_Init(USART_Handle_t *pUSARTHandle)
{
 80011b0:	b580      	push	{r7, lr}
 80011b2:	b084      	sub	sp, #16
 80011b4:	af00      	add	r7, sp, #0
 80011b6:	6078      	str	r0, [r7, #4]
		uint32_t tempreg=0;
 80011b8:	2300      	movs	r3, #0
 80011ba:	60fb      	str	r3, [r7, #12]

		USART_PeriClockControl(pUSARTHandle->pUSARTx,ENABLE);
 80011bc:	687b      	ldr	r3, [r7, #4]
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	2101      	movs	r1, #1
 80011c2:	4618      	mov	r0, r3
 80011c4:	f7ff ff6c 	bl	80010a0 <USART_PeriClockControl>

		if ( pUSARTHandle->USART_Config.USART_Mode == USART_MODE_ONLY_RX)
 80011c8:	687b      	ldr	r3, [r7, #4]
 80011ca:	791b      	ldrb	r3, [r3, #4]
 80011cc:	2b01      	cmp	r3, #1
 80011ce:	d104      	bne.n	80011da <USART_Init+0x2a>
		{
			tempreg|= (1 << USART_CR1_RE);
 80011d0:	68fb      	ldr	r3, [r7, #12]
 80011d2:	f043 0304 	orr.w	r3, r3, #4
 80011d6:	60fb      	str	r3, [r7, #12]
 80011d8:	e010      	b.n	80011fc <USART_Init+0x4c>
		}
		else if (pUSARTHandle->USART_Config.USART_Mode == USART_MODE_ONLY_TX)
 80011da:	687b      	ldr	r3, [r7, #4]
 80011dc:	791b      	ldrb	r3, [r3, #4]
 80011de:	2b00      	cmp	r3, #0
 80011e0:	d104      	bne.n	80011ec <USART_Init+0x3c>
		{
			tempreg |= ( 1 << USART_CR1_TE );
 80011e2:	68fb      	ldr	r3, [r7, #12]
 80011e4:	f043 0308 	orr.w	r3, r3, #8
 80011e8:	60fb      	str	r3, [r7, #12]
 80011ea:	e007      	b.n	80011fc <USART_Init+0x4c>
		}
		else if (pUSARTHandle->USART_Config.USART_Mode == USART_MODE_TXRX)
 80011ec:	687b      	ldr	r3, [r7, #4]
 80011ee:	791b      	ldrb	r3, [r3, #4]
 80011f0:	2b02      	cmp	r3, #2
 80011f2:	d103      	bne.n	80011fc <USART_Init+0x4c>
		{
			tempreg |= ( ( 1 << USART_CR1_RE) | ( 1 << USART_CR1_TE) );
 80011f4:	68fb      	ldr	r3, [r7, #12]
 80011f6:	f043 030c 	orr.w	r3, r3, #12
 80011fa:	60fb      	str	r3, [r7, #12]
		}

		tempreg |= pUSARTHandle->USART_Config.USART_WordLength << USART_CR1_M ;
 80011fc:	687b      	ldr	r3, [r7, #4]
 80011fe:	7b5b      	ldrb	r3, [r3, #13]
 8001200:	031b      	lsls	r3, r3, #12
 8001202:	68fa      	ldr	r2, [r7, #12]
 8001204:	4313      	orrs	r3, r2
 8001206:	60fb      	str	r3, [r7, #12]

		if ( pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_EN_EVEN)
 8001208:	687b      	ldr	r3, [r7, #4]
 800120a:	7b9b      	ldrb	r3, [r3, #14]
 800120c:	2b01      	cmp	r3, #1
 800120e:	d104      	bne.n	800121a <USART_Init+0x6a>
		{
			tempreg |= ( 1 << USART_CR1_PCE);
 8001210:	68fb      	ldr	r3, [r7, #12]
 8001212:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001216:	60fb      	str	r3, [r7, #12]
 8001218:	e00b      	b.n	8001232 <USART_Init+0x82>

		}
		else if (pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_EN_ODD )
 800121a:	687b      	ldr	r3, [r7, #4]
 800121c:	7b9b      	ldrb	r3, [r3, #14]
 800121e:	2b02      	cmp	r3, #2
 8001220:	d107      	bne.n	8001232 <USART_Init+0x82>
		{
		    tempreg |= ( 1 << USART_CR1_PCE);
 8001222:	68fb      	ldr	r3, [r7, #12]
 8001224:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8001228:	60fb      	str	r3, [r7, #12]
		    tempreg |= ( 1 << USART_CR1_PS);
 800122a:	68fb      	ldr	r3, [r7, #12]
 800122c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001230:	60fb      	str	r3, [r7, #12]
		}


		pUSARTHandle->pUSARTx->CR1 = tempreg;
 8001232:	687b      	ldr	r3, [r7, #4]
 8001234:	681b      	ldr	r3, [r3, #0]
 8001236:	68fa      	ldr	r2, [r7, #12]
 8001238:	601a      	str	r2, [r3, #0]
		tempreg=0;
 800123a:	2300      	movs	r3, #0
 800123c:	60fb      	str	r3, [r7, #12]
		tempreg |= pUSARTHandle->USART_Config.USART_NoOfStopBits << USART_CR2_STOP;
 800123e:	687b      	ldr	r3, [r7, #4]
 8001240:	7b1b      	ldrb	r3, [r3, #12]
 8001242:	031b      	lsls	r3, r3, #12
 8001244:	68fa      	ldr	r2, [r7, #12]
 8001246:	4313      	orrs	r3, r2
 8001248:	60fb      	str	r3, [r7, #12]
		pUSARTHandle->pUSARTx->CR2 = tempreg;
 800124a:	687b      	ldr	r3, [r7, #4]
 800124c:	681b      	ldr	r3, [r3, #0]
 800124e:	68fa      	ldr	r2, [r7, #12]
 8001250:	605a      	str	r2, [r3, #4]

		tempreg=0;
 8001252:	2300      	movs	r3, #0
 8001254:	60fb      	str	r3, [r7, #12]


		if ( pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_CTS)
 8001256:	687b      	ldr	r3, [r7, #4]
 8001258:	7bdb      	ldrb	r3, [r3, #15]
 800125a:	2b01      	cmp	r3, #1
 800125c:	d104      	bne.n	8001268 <USART_Init+0xb8>
		{
			tempreg |= ( 1 << USART_CR3_CTSE);
 800125e:	68fb      	ldr	r3, [r7, #12]
 8001260:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001264:	60fb      	str	r3, [r7, #12]
 8001266:	e014      	b.n	8001292 <USART_Init+0xe2>
		}
		else if (pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_RTS)
 8001268:	687b      	ldr	r3, [r7, #4]
 800126a:	7bdb      	ldrb	r3, [r3, #15]
 800126c:	2b02      	cmp	r3, #2
 800126e:	d104      	bne.n	800127a <USART_Init+0xca>
		{
			tempreg |= ( 1 << USART_CR3_RTSE);
 8001270:	68fb      	ldr	r3, [r7, #12]
 8001272:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001276:	60fb      	str	r3, [r7, #12]
 8001278:	e00b      	b.n	8001292 <USART_Init+0xe2>
		}
		else if (pUSARTHandle->USART_Config.USART_HWFlowControl == USART_HW_FLOW_CTRL_CTS_RTS)
 800127a:	687b      	ldr	r3, [r7, #4]
 800127c:	7bdb      	ldrb	r3, [r3, #15]
 800127e:	2b03      	cmp	r3, #3
 8001280:	d107      	bne.n	8001292 <USART_Init+0xe2>
		{
			tempreg |= ( 1 << USART_CR3_CTSE);
 8001282:	68fb      	ldr	r3, [r7, #12]
 8001284:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8001288:	60fb      	str	r3, [r7, #12]
			tempreg |= ( 1 << USART_CR3_RTSE);
 800128a:	68fb      	ldr	r3, [r7, #12]
 800128c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001290:	60fb      	str	r3, [r7, #12]
		}

		pUSARTHandle->pUSARTx->CR3 = tempreg;
 8001292:	687b      	ldr	r3, [r7, #4]
 8001294:	681b      	ldr	r3, [r3, #0]
 8001296:	68fa      	ldr	r2, [r7, #12]
 8001298:	609a      	str	r2, [r3, #8]
		pUSARTHandle->pUSARTx->BRR=0X23;
 800129a:	687b      	ldr	r3, [r7, #4]
 800129c:	681b      	ldr	r3, [r3, #0]
 800129e:	2223      	movs	r2, #35	@ 0x23
 80012a0:	60da      	str	r2, [r3, #12]
	//	USART_SetBaudRate(pUSARTHandle->pUSARTx,pUSARTHandle->USART_Config.USART_Baud);
}
 80012a2:	bf00      	nop
 80012a4:	3710      	adds	r7, #16
 80012a6:	46bd      	mov	sp, r7
 80012a8:	bd80      	pop	{r7, pc}

080012aa <USART_SendData>:




void USART_SendData(USART_Handle_t *pUSARTHandle, uint8_t *pTxBuffer, uint32_t Len)
{
 80012aa:	b580      	push	{r7, lr}
 80012ac:	b086      	sub	sp, #24
 80012ae:	af00      	add	r7, sp, #0
 80012b0:	60f8      	str	r0, [r7, #12]
 80012b2:	60b9      	str	r1, [r7, #8]
 80012b4:	607a      	str	r2, [r7, #4]

	uint16_t *pdata;

	for(uint32_t i = 0 ; i < Len; i++)
 80012b6:	2300      	movs	r3, #0
 80012b8:	617b      	str	r3, [r7, #20]
 80012ba:	e031      	b.n	8001320 <USART_SendData+0x76>
	{
		while(! USART_GetFlagStatus(pUSARTHandle->pUSARTx,USART_FLAG_TXE));
 80012bc:	bf00      	nop
 80012be:	68fb      	ldr	r3, [r7, #12]
 80012c0:	681b      	ldr	r3, [r3, #0]
 80012c2:	2180      	movs	r1, #128	@ 0x80
 80012c4:	4618      	mov	r0, r3
 80012c6:	f000 f85a 	bl	800137e <USART_GetFlagStatus>
 80012ca:	4603      	mov	r3, r0
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d0f6      	beq.n	80012be <USART_SendData+0x14>

		if(pUSARTHandle->USART_Config.USART_WordLength == USART_WORDLEN_9BITS)
 80012d0:	68fb      	ldr	r3, [r7, #12]
 80012d2:	7b5b      	ldrb	r3, [r3, #13]
 80012d4:	2b01      	cmp	r3, #1
 80012d6:	d118      	bne.n	800130a <USART_SendData+0x60>
		{
			pdata = (uint16_t*) pTxBuffer;
 80012d8:	68bb      	ldr	r3, [r7, #8]
 80012da:	613b      	str	r3, [r7, #16]
			pUSARTHandle->pUSARTx->TDR = (*pdata & (uint16_t)0x01FF);
 80012dc:	693b      	ldr	r3, [r7, #16]
 80012de:	881b      	ldrh	r3, [r3, #0]
 80012e0:	461a      	mov	r2, r3
 80012e2:	68fb      	ldr	r3, [r7, #12]
 80012e4:	681b      	ldr	r3, [r3, #0]
 80012e6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80012ea:	629a      	str	r2, [r3, #40]	@ 0x28

			if(pUSARTHandle->USART_Config.USART_ParityControl == USART_PARITY_DISABLE)
 80012ec:	68fb      	ldr	r3, [r7, #12]
 80012ee:	7b9b      	ldrb	r3, [r3, #14]
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	d106      	bne.n	8001302 <USART_SendData+0x58>
			{
				pTxBuffer++;
 80012f4:	68bb      	ldr	r3, [r7, #8]
 80012f6:	3301      	adds	r3, #1
 80012f8:	60bb      	str	r3, [r7, #8]
				pTxBuffer++;
 80012fa:	68bb      	ldr	r3, [r7, #8]
 80012fc:	3301      	adds	r3, #1
 80012fe:	60bb      	str	r3, [r7, #8]
 8001300:	e00b      	b.n	800131a <USART_SendData+0x70>

			}
			else
			{
				pTxBuffer++;
 8001302:	68bb      	ldr	r3, [r7, #8]
 8001304:	3301      	adds	r3, #1
 8001306:	60bb      	str	r3, [r7, #8]
 8001308:	e007      	b.n	800131a <USART_SendData+0x70>
			}
		}
		else
		{

			pUSARTHandle->pUSARTx->TDR = (*pTxBuffer  & (uint8_t)0xFF);
 800130a:	68bb      	ldr	r3, [r7, #8]
 800130c:	781a      	ldrb	r2, [r3, #0]
 800130e:	68fb      	ldr	r3, [r7, #12]
 8001310:	681b      	ldr	r3, [r3, #0]
 8001312:	629a      	str	r2, [r3, #40]	@ 0x28
			pTxBuffer++;
 8001314:	68bb      	ldr	r3, [r7, #8]
 8001316:	3301      	adds	r3, #1
 8001318:	60bb      	str	r3, [r7, #8]
	for(uint32_t i = 0 ; i < Len; i++)
 800131a:	697b      	ldr	r3, [r7, #20]
 800131c:	3301      	adds	r3, #1
 800131e:	617b      	str	r3, [r7, #20]
 8001320:	697a      	ldr	r2, [r7, #20]
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	429a      	cmp	r2, r3
 8001326:	d3c9      	bcc.n	80012bc <USART_SendData+0x12>
		}
	}
	while( ! USART_GetFlagStatus(pUSARTHandle->pUSARTx,USART_FLAG_TC));
 8001328:	bf00      	nop
 800132a:	68fb      	ldr	r3, [r7, #12]
 800132c:	681b      	ldr	r3, [r3, #0]
 800132e:	2140      	movs	r1, #64	@ 0x40
 8001330:	4618      	mov	r0, r3
 8001332:	f000 f824 	bl	800137e <USART_GetFlagStatus>
 8001336:	4603      	mov	r3, r0
 8001338:	2b00      	cmp	r3, #0
 800133a:	d0f6      	beq.n	800132a <USART_SendData+0x80>
}
 800133c:	bf00      	nop
 800133e:	bf00      	nop
 8001340:	3718      	adds	r7, #24
 8001342:	46bd      	mov	sp, r7
 8001344:	bd80      	pop	{r7, pc}

08001346 <USART_PeripheralControl>:
	temp2=0;

}

void USART_PeripheralControl(USART_RegDef_t *pUSARTx, uint8_t EnorDi)
{
 8001346:	b480      	push	{r7}
 8001348:	b083      	sub	sp, #12
 800134a:	af00      	add	r7, sp, #0
 800134c:	6078      	str	r0, [r7, #4]
 800134e:	460b      	mov	r3, r1
 8001350:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8001352:	78fb      	ldrb	r3, [r7, #3]
 8001354:	2b01      	cmp	r3, #1
 8001356:	d106      	bne.n	8001366 <USART_PeripheralControl+0x20>
	{
		pUSARTx->CR1 |=(1<<USART_CR1_UE);
 8001358:	687b      	ldr	r3, [r7, #4]
 800135a:	681b      	ldr	r3, [r3, #0]
 800135c:	f043 0201 	orr.w	r2, r3, #1
 8001360:	687b      	ldr	r3, [r7, #4]
 8001362:	601a      	str	r2, [r3, #0]
	}
	else
	{
		pUSARTx->CR1 &=~(1<<USART_CR1_UE);
	}
}
 8001364:	e005      	b.n	8001372 <USART_PeripheralControl+0x2c>
		pUSARTx->CR1 &=~(1<<USART_CR1_UE);
 8001366:	687b      	ldr	r3, [r7, #4]
 8001368:	681b      	ldr	r3, [r3, #0]
 800136a:	f023 0201 	bic.w	r2, r3, #1
 800136e:	687b      	ldr	r3, [r7, #4]
 8001370:	601a      	str	r2, [r3, #0]
}
 8001372:	bf00      	nop
 8001374:	370c      	adds	r7, #12
 8001376:	46bd      	mov	sp, r7
 8001378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800137c:	4770      	bx	lr

0800137e <USART_GetFlagStatus>:


uint8_t USART_GetFlagStatus(USART_RegDef_t *pUSARTx,uint8_t StatusFlagName)
{
 800137e:	b480      	push	{r7}
 8001380:	b083      	sub	sp, #12
 8001382:	af00      	add	r7, sp, #0
 8001384:	6078      	str	r0, [r7, #4]
 8001386:	460b      	mov	r3, r1
 8001388:	70fb      	strb	r3, [r7, #3]
	if(pUSARTx ->ISR & StatusFlagName)
 800138a:	687b      	ldr	r3, [r7, #4]
 800138c:	69da      	ldr	r2, [r3, #28]
 800138e:	78fb      	ldrb	r3, [r7, #3]
 8001390:	4013      	ands	r3, r2
 8001392:	2b00      	cmp	r3, #0
 8001394:	d001      	beq.n	800139a <USART_GetFlagStatus+0x1c>
	{
		return SET;
 8001396:	2301      	movs	r3, #1
 8001398:	e000      	b.n	800139c <USART_GetFlagStatus+0x1e>
	}
	return RESET;
 800139a:	2300      	movs	r3, #0
}
 800139c:	4618      	mov	r0, r3
 800139e:	370c      	adds	r7, #12
 80013a0:	46bd      	mov	sp, r7
 80013a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013a6:	4770      	bx	lr

080013a8 <USART2_Init>:

USART_Handle_t usart2_handle;  // USART2 handle structure

// Function to initialize USART2 peripheral
void USART2_Init(void)
{
 80013a8:	b580      	push	{r7, lr}
 80013aa:	af00      	add	r7, sp, #0
	usart2_handle.pUSARTx = USART2;                          // select USART2 peripheral
 80013ac:	4b0d      	ldr	r3, [pc, #52]	@ (80013e4 <USART2_Init+0x3c>)
 80013ae:	4a0e      	ldr	r2, [pc, #56]	@ (80013e8 <USART2_Init+0x40>)
 80013b0:	601a      	str	r2, [r3, #0]
	usart2_handle.USART_Config.USART_Baud = USART_STD_BAUD_115200;   // set baud rate 115200
 80013b2:	4b0c      	ldr	r3, [pc, #48]	@ (80013e4 <USART2_Init+0x3c>)
 80013b4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80013b8:	609a      	str	r2, [r3, #8]
	usart2_handle.USART_Config.USART_HWFlowControl = USART_HW_FLOW_CTRL_NONE; // no hardware flow control
 80013ba:	4b0a      	ldr	r3, [pc, #40]	@ (80013e4 <USART2_Init+0x3c>)
 80013bc:	2200      	movs	r2, #0
 80013be:	73da      	strb	r2, [r3, #15]
	usart2_handle.USART_Config.USART_Mode = USART_MODE_TXRX; // enable TX and RX
 80013c0:	4b08      	ldr	r3, [pc, #32]	@ (80013e4 <USART2_Init+0x3c>)
 80013c2:	2202      	movs	r2, #2
 80013c4:	711a      	strb	r2, [r3, #4]
	usart2_handle.USART_Config.USART_NoOfStopBits = USART_STOPBITS_1; // 1 stop bit
 80013c6:	4b07      	ldr	r3, [pc, #28]	@ (80013e4 <USART2_Init+0x3c>)
 80013c8:	2200      	movs	r2, #0
 80013ca:	731a      	strb	r2, [r3, #12]
	usart2_handle.USART_Config.USART_WordLength = USART_WORDLEN_8BITS; // 8-bit data
 80013cc:	4b05      	ldr	r3, [pc, #20]	@ (80013e4 <USART2_Init+0x3c>)
 80013ce:	2200      	movs	r2, #0
 80013d0:	735a      	strb	r2, [r3, #13]
	usart2_handle.USART_Config.USART_ParityControl = USART_PARITY_DISABLE; // no parity
 80013d2:	4b04      	ldr	r3, [pc, #16]	@ (80013e4 <USART2_Init+0x3c>)
 80013d4:	2200      	movs	r2, #0
 80013d6:	739a      	strb	r2, [r3, #14]
	USART_Init(&usart2_handle);                             // initialize USART2 with settings
 80013d8:	4802      	ldr	r0, [pc, #8]	@ (80013e4 <USART2_Init+0x3c>)
 80013da:	f7ff fee9 	bl	80011b0 <USART_Init>
}
 80013de:	bf00      	nop
 80013e0:	bd80      	pop	{r7, pc}
 80013e2:	bf00      	nop
 80013e4:	200001e4 	.word	0x200001e4
 80013e8:	40004400 	.word	0x40004400

080013ec <USART2_GPIOInit>:

// Function to configure GPIO pins for USART2
void USART2_GPIOInit(void)
{
 80013ec:	b580      	push	{r7, lr}
 80013ee:	b084      	sub	sp, #16
 80013f0:	af00      	add	r7, sp, #0
	GPIO_Handle_t usart2_gpio;                            // GPIO handle structure
	memset(&usart2_gpio,0,sizeof(usart2_gpio));           // clear structure
 80013f2:	1d3b      	adds	r3, r7, #4
 80013f4:	220c      	movs	r2, #12
 80013f6:	2100      	movs	r1, #0
 80013f8:	4618      	mov	r0, r3
 80013fa:	f000 ff92 	bl	8002322 <memset>

	usart2_gpio.pGPIOx = GPIOA;                           // use GPIOA for USART2
 80013fe:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8001402:	607b      	str	r3, [r7, #4]
	usart2_gpio.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;  // alternate function mode
 8001404:	2302      	movs	r3, #2
 8001406:	727b      	strb	r3, [r7, #9]
	usart2_gpio.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP; // push-pull
 8001408:	2300      	movs	r3, #0
 800140a:	733b      	strb	r3, [r7, #12]
	usart2_gpio.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU; // pull-up
 800140c:	2301      	movs	r3, #1
 800140e:	72fb      	strb	r3, [r7, #11]
	usart2_gpio.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;  // fast speed
 8001410:	2302      	movs	r3, #2
 8001412:	72bb      	strb	r3, [r7, #10]
	usart2_gpio.GPIO_PinConfig.GPIO_PinAltFunMode = 7;     // AF7 = USART2
 8001414:	2307      	movs	r3, #7
 8001416:	737b      	strb	r3, [r7, #13]

	usart2_gpio.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_2;   // PA2 = USART2_TX
 8001418:	2302      	movs	r3, #2
 800141a:	723b      	strb	r3, [r7, #8]
	GPIOA_PCLK_EN();                                           // enable GPIOA clock
 800141c:	4b09      	ldr	r3, [pc, #36]	@ (8001444 <USART2_GPIOInit+0x58>)
 800141e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001420:	4a08      	ldr	r2, [pc, #32]	@ (8001444 <USART2_GPIOInit+0x58>)
 8001422:	f043 0301 	orr.w	r3, r3, #1
 8001426:	64d3      	str	r3, [r2, #76]	@ 0x4c
	GPIO_Init(&usart2_gpio);                                   // initialize PA2
 8001428:	1d3b      	adds	r3, r7, #4
 800142a:	4618      	mov	r0, r3
 800142c:	f7ff fc80 	bl	8000d30 <GPIO_Init>

	usart2_gpio.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_3;   // PA3 = USART2_RX
 8001430:	2303      	movs	r3, #3
 8001432:	723b      	strb	r3, [r7, #8]
	GPIO_Init(&usart2_gpio);                                   // initialize PA3
 8001434:	1d3b      	adds	r3, r7, #4
 8001436:	4618      	mov	r0, r3
 8001438:	f7ff fc7a 	bl	8000d30 <GPIO_Init>
}
 800143c:	bf00      	nop
 800143e:	3710      	adds	r7, #16
 8001440:	46bd      	mov	sp, r7
 8001442:	bd80      	pop	{r7, pc}
 8001444:	40021000 	.word	0x40021000

08001448 <delay2>:

// Simple delay function
void delay2(void)
{
 8001448:	b480      	push	{r7}
 800144a:	b083      	sub	sp, #12
 800144c:	af00      	add	r7, sp, #0
	for(uint32_t i = 0 ; i < 250000 ; i ++);
 800144e:	2300      	movs	r3, #0
 8001450:	607b      	str	r3, [r7, #4]
 8001452:	e002      	b.n	800145a <delay2+0x12>
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	3301      	adds	r3, #1
 8001458:	607b      	str	r3, [r7, #4]
 800145a:	687b      	ldr	r3, [r7, #4]
 800145c:	4a04      	ldr	r2, [pc, #16]	@ (8001470 <delay2+0x28>)
 800145e:	4293      	cmp	r3, r2
 8001460:	d9f8      	bls.n	8001454 <delay2+0xc>
}
 8001462:	bf00      	nop
 8001464:	bf00      	nop
 8001466:	370c      	adds	r7, #12
 8001468:	46bd      	mov	sp, r7
 800146a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800146e:	4770      	bx	lr
 8001470:	0003d08f 	.word	0x0003d08f

08001474 <main>:

uint16_t adc_val;  // variable to hold ADC result

int main(void)
{
 8001474:	b580      	push	{r7, lr}
 8001476:	b088      	sub	sp, #32
 8001478:	af00      	add	r7, sp, #0
	char msg[30];   // buffer for message string

    USART2_GPIOInit();                      // init GPIO pins for USART2
 800147a:	f7ff ffb7 	bl	80013ec <USART2_GPIOInit>
    USART2_Init();                          // init USART2
 800147e:	f7ff ff93 	bl	80013a8 <USART2_Init>
    USART_PeripheralControl(USART2, ENABLE); // enable USART2 peripheral
 8001482:	2101      	movs	r1, #1
 8001484:	4811      	ldr	r0, [pc, #68]	@ (80014cc <main+0x58>)
 8001486:	f7ff ff5e 	bl	8001346 <USART_PeripheralControl>
    adc_init();                             // initialize ADC
 800148a:	f7ff fba1 	bl	8000bd0 <adc_init>
    start_conversion();                     // start ADC conversion
 800148e:	f7ff fc25 	bl	8000cdc <start_conversion>

    while (1)
    {
        adc_val = adc_read();               // read ADC value (0–4095 for 12-bit ADC)
 8001492:	f7ff fc39 	bl	8000d08 <adc_read>
 8001496:	4603      	mov	r3, r0
 8001498:	461a      	mov	r2, r3
 800149a:	4b0d      	ldr	r3, [pc, #52]	@ (80014d0 <main+0x5c>)
 800149c:	801a      	strh	r2, [r3, #0]

        sprintf(msg,"ADC-Value: %u\r\n", adc_val); // format ADC value into string
 800149e:	4b0c      	ldr	r3, [pc, #48]	@ (80014d0 <main+0x5c>)
 80014a0:	881b      	ldrh	r3, [r3, #0]
 80014a2:	461a      	mov	r2, r3
 80014a4:	463b      	mov	r3, r7
 80014a6:	490b      	ldr	r1, [pc, #44]	@ (80014d4 <main+0x60>)
 80014a8:	4618      	mov	r0, r3
 80014aa:	f000 fed5 	bl	8002258 <siprintf>

        USART_SendData(&usart2_handle, (uint8_t*) msg, strlen(msg)); // send string via USART2
 80014ae:	463b      	mov	r3, r7
 80014b0:	4618      	mov	r0, r3
 80014b2:	f7fe fedd 	bl	8000270 <strlen>
 80014b6:	4602      	mov	r2, r0
 80014b8:	463b      	mov	r3, r7
 80014ba:	4619      	mov	r1, r3
 80014bc:	4806      	ldr	r0, [pc, #24]	@ (80014d8 <main+0x64>)
 80014be:	f7ff fef4 	bl	80012aa <USART_SendData>

        delay2();                           // small delay between transmissions
 80014c2:	f7ff ffc1 	bl	8001448 <delay2>
        adc_val = adc_read();               // read ADC value (0–4095 for 12-bit ADC)
 80014c6:	bf00      	nop
 80014c8:	e7e3      	b.n	8001492 <main+0x1e>
 80014ca:	bf00      	nop
 80014cc:	40004400 	.word	0x40004400
 80014d0:	20000208 	.word	0x20000208
 80014d4:	08004368 	.word	0x08004368
 80014d8:	200001e4 	.word	0x200001e4

080014dc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80014dc:	b480      	push	{r7}
 80014de:	af00      	add	r7, sp, #0
  return 1;
 80014e0:	2301      	movs	r3, #1
}
 80014e2:	4618      	mov	r0, r3
 80014e4:	46bd      	mov	sp, r7
 80014e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014ea:	4770      	bx	lr

080014ec <_kill>:

int _kill(int pid, int sig)
{
 80014ec:	b580      	push	{r7, lr}
 80014ee:	b082      	sub	sp, #8
 80014f0:	af00      	add	r7, sp, #0
 80014f2:	6078      	str	r0, [r7, #4]
 80014f4:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80014f6:	f000 ff77 	bl	80023e8 <__errno>
 80014fa:	4603      	mov	r3, r0
 80014fc:	2216      	movs	r2, #22
 80014fe:	601a      	str	r2, [r3, #0]
  return -1;
 8001500:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001504:	4618      	mov	r0, r3
 8001506:	3708      	adds	r7, #8
 8001508:	46bd      	mov	sp, r7
 800150a:	bd80      	pop	{r7, pc}

0800150c <_exit>:

void _exit (int status)
{
 800150c:	b580      	push	{r7, lr}
 800150e:	b082      	sub	sp, #8
 8001510:	af00      	add	r7, sp, #0
 8001512:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001514:	f04f 31ff 	mov.w	r1, #4294967295
 8001518:	6878      	ldr	r0, [r7, #4]
 800151a:	f7ff ffe7 	bl	80014ec <_kill>
  while (1) {}    /* Make sure we hang here */
 800151e:	bf00      	nop
 8001520:	e7fd      	b.n	800151e <_exit+0x12>

08001522 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001522:	b580      	push	{r7, lr}
 8001524:	b086      	sub	sp, #24
 8001526:	af00      	add	r7, sp, #0
 8001528:	60f8      	str	r0, [r7, #12]
 800152a:	60b9      	str	r1, [r7, #8]
 800152c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800152e:	2300      	movs	r3, #0
 8001530:	617b      	str	r3, [r7, #20]
 8001532:	e00a      	b.n	800154a <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001534:	f3af 8000 	nop.w
 8001538:	4601      	mov	r1, r0
 800153a:	68bb      	ldr	r3, [r7, #8]
 800153c:	1c5a      	adds	r2, r3, #1
 800153e:	60ba      	str	r2, [r7, #8]
 8001540:	b2ca      	uxtb	r2, r1
 8001542:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001544:	697b      	ldr	r3, [r7, #20]
 8001546:	3301      	adds	r3, #1
 8001548:	617b      	str	r3, [r7, #20]
 800154a:	697a      	ldr	r2, [r7, #20]
 800154c:	687b      	ldr	r3, [r7, #4]
 800154e:	429a      	cmp	r2, r3
 8001550:	dbf0      	blt.n	8001534 <_read+0x12>
  }

  return len;
 8001552:	687b      	ldr	r3, [r7, #4]
}
 8001554:	4618      	mov	r0, r3
 8001556:	3718      	adds	r7, #24
 8001558:	46bd      	mov	sp, r7
 800155a:	bd80      	pop	{r7, pc}

0800155c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800155c:	b580      	push	{r7, lr}
 800155e:	b086      	sub	sp, #24
 8001560:	af00      	add	r7, sp, #0
 8001562:	60f8      	str	r0, [r7, #12]
 8001564:	60b9      	str	r1, [r7, #8]
 8001566:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001568:	2300      	movs	r3, #0
 800156a:	617b      	str	r3, [r7, #20]
 800156c:	e009      	b.n	8001582 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800156e:	68bb      	ldr	r3, [r7, #8]
 8001570:	1c5a      	adds	r2, r3, #1
 8001572:	60ba      	str	r2, [r7, #8]
 8001574:	781b      	ldrb	r3, [r3, #0]
 8001576:	4618      	mov	r0, r3
 8001578:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800157c:	697b      	ldr	r3, [r7, #20]
 800157e:	3301      	adds	r3, #1
 8001580:	617b      	str	r3, [r7, #20]
 8001582:	697a      	ldr	r2, [r7, #20]
 8001584:	687b      	ldr	r3, [r7, #4]
 8001586:	429a      	cmp	r2, r3
 8001588:	dbf1      	blt.n	800156e <_write+0x12>
  }
  return len;
 800158a:	687b      	ldr	r3, [r7, #4]
}
 800158c:	4618      	mov	r0, r3
 800158e:	3718      	adds	r7, #24
 8001590:	46bd      	mov	sp, r7
 8001592:	bd80      	pop	{r7, pc}

08001594 <_close>:

int _close(int file)
{
 8001594:	b480      	push	{r7}
 8001596:	b083      	sub	sp, #12
 8001598:	af00      	add	r7, sp, #0
 800159a:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800159c:	f04f 33ff 	mov.w	r3, #4294967295
}
 80015a0:	4618      	mov	r0, r3
 80015a2:	370c      	adds	r7, #12
 80015a4:	46bd      	mov	sp, r7
 80015a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015aa:	4770      	bx	lr

080015ac <_fstat>:


int _fstat(int file, struct stat *st)
{
 80015ac:	b480      	push	{r7}
 80015ae:	b083      	sub	sp, #12
 80015b0:	af00      	add	r7, sp, #0
 80015b2:	6078      	str	r0, [r7, #4]
 80015b4:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80015b6:	683b      	ldr	r3, [r7, #0]
 80015b8:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80015bc:	605a      	str	r2, [r3, #4]
  return 0;
 80015be:	2300      	movs	r3, #0
}
 80015c0:	4618      	mov	r0, r3
 80015c2:	370c      	adds	r7, #12
 80015c4:	46bd      	mov	sp, r7
 80015c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015ca:	4770      	bx	lr

080015cc <_isatty>:

int _isatty(int file)
{
 80015cc:	b480      	push	{r7}
 80015ce:	b083      	sub	sp, #12
 80015d0:	af00      	add	r7, sp, #0
 80015d2:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80015d4:	2301      	movs	r3, #1
}
 80015d6:	4618      	mov	r0, r3
 80015d8:	370c      	adds	r7, #12
 80015da:	46bd      	mov	sp, r7
 80015dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015e0:	4770      	bx	lr

080015e2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80015e2:	b480      	push	{r7}
 80015e4:	b085      	sub	sp, #20
 80015e6:	af00      	add	r7, sp, #0
 80015e8:	60f8      	str	r0, [r7, #12]
 80015ea:	60b9      	str	r1, [r7, #8]
 80015ec:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80015ee:	2300      	movs	r3, #0
}
 80015f0:	4618      	mov	r0, r3
 80015f2:	3714      	adds	r7, #20
 80015f4:	46bd      	mov	sp, r7
 80015f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015fa:	4770      	bx	lr

080015fc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80015fc:	b580      	push	{r7, lr}
 80015fe:	b086      	sub	sp, #24
 8001600:	af00      	add	r7, sp, #0
 8001602:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001604:	4a14      	ldr	r2, [pc, #80]	@ (8001658 <_sbrk+0x5c>)
 8001606:	4b15      	ldr	r3, [pc, #84]	@ (800165c <_sbrk+0x60>)
 8001608:	1ad3      	subs	r3, r2, r3
 800160a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800160c:	697b      	ldr	r3, [r7, #20]
 800160e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001610:	4b13      	ldr	r3, [pc, #76]	@ (8001660 <_sbrk+0x64>)
 8001612:	681b      	ldr	r3, [r3, #0]
 8001614:	2b00      	cmp	r3, #0
 8001616:	d102      	bne.n	800161e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001618:	4b11      	ldr	r3, [pc, #68]	@ (8001660 <_sbrk+0x64>)
 800161a:	4a12      	ldr	r2, [pc, #72]	@ (8001664 <_sbrk+0x68>)
 800161c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800161e:	4b10      	ldr	r3, [pc, #64]	@ (8001660 <_sbrk+0x64>)
 8001620:	681a      	ldr	r2, [r3, #0]
 8001622:	687b      	ldr	r3, [r7, #4]
 8001624:	4413      	add	r3, r2
 8001626:	693a      	ldr	r2, [r7, #16]
 8001628:	429a      	cmp	r2, r3
 800162a:	d207      	bcs.n	800163c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800162c:	f000 fedc 	bl	80023e8 <__errno>
 8001630:	4603      	mov	r3, r0
 8001632:	220c      	movs	r2, #12
 8001634:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001636:	f04f 33ff 	mov.w	r3, #4294967295
 800163a:	e009      	b.n	8001650 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800163c:	4b08      	ldr	r3, [pc, #32]	@ (8001660 <_sbrk+0x64>)
 800163e:	681b      	ldr	r3, [r3, #0]
 8001640:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001642:	4b07      	ldr	r3, [pc, #28]	@ (8001660 <_sbrk+0x64>)
 8001644:	681a      	ldr	r2, [r3, #0]
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	4413      	add	r3, r2
 800164a:	4a05      	ldr	r2, [pc, #20]	@ (8001660 <_sbrk+0x64>)
 800164c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800164e:	68fb      	ldr	r3, [r7, #12]
}
 8001650:	4618      	mov	r0, r3
 8001652:	3718      	adds	r7, #24
 8001654:	46bd      	mov	sp, r7
 8001656:	bd80      	pop	{r7, pc}
 8001658:	20018000 	.word	0x20018000
 800165c:	00000400 	.word	0x00000400
 8001660:	2000020c 	.word	0x2000020c
 8001664:	20000360 	.word	0x20000360

08001668 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001668:	480d      	ldr	r0, [pc, #52]	@ (80016a0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800166a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800166c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001670:	480c      	ldr	r0, [pc, #48]	@ (80016a4 <LoopForever+0x6>)
  ldr r1, =_edata
 8001672:	490d      	ldr	r1, [pc, #52]	@ (80016a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001674:	4a0d      	ldr	r2, [pc, #52]	@ (80016ac <LoopForever+0xe>)
  movs r3, #0
 8001676:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001678:	e002      	b.n	8001680 <LoopCopyDataInit>

0800167a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800167a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800167c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800167e:	3304      	adds	r3, #4

08001680 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001680:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001682:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001684:	d3f9      	bcc.n	800167a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001686:	4a0a      	ldr	r2, [pc, #40]	@ (80016b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001688:	4c0a      	ldr	r4, [pc, #40]	@ (80016b4 <LoopForever+0x16>)
  movs r3, #0
 800168a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800168c:	e001      	b.n	8001692 <LoopFillZerobss>

0800168e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800168e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001690:	3204      	adds	r2, #4

08001692 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001692:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001694:	d3fb      	bcc.n	800168e <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 8001696:	f000 fead 	bl	80023f4 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 800169a:	f7ff feeb 	bl	8001474 <main>

0800169e <LoopForever>:

LoopForever:
  b LoopForever
 800169e:	e7fe      	b.n	800169e <LoopForever>
  ldr   r0, =_estack
 80016a0:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80016a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80016a8:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 80016ac:	080046fc 	.word	0x080046fc
  ldr r2, =_sbss
 80016b0:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 80016b4:	2000035c 	.word	0x2000035c

080016b8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80016b8:	e7fe      	b.n	80016b8 <ADC1_2_IRQHandler>
	...

080016bc <malloc>:
 80016bc:	4b02      	ldr	r3, [pc, #8]	@ (80016c8 <malloc+0xc>)
 80016be:	4601      	mov	r1, r0
 80016c0:	6818      	ldr	r0, [r3, #0]
 80016c2:	f000 b825 	b.w	8001710 <_malloc_r>
 80016c6:	bf00      	nop
 80016c8:	2000000c 	.word	0x2000000c

080016cc <sbrk_aligned>:
 80016cc:	b570      	push	{r4, r5, r6, lr}
 80016ce:	4e0f      	ldr	r6, [pc, #60]	@ (800170c <sbrk_aligned+0x40>)
 80016d0:	460c      	mov	r4, r1
 80016d2:	6831      	ldr	r1, [r6, #0]
 80016d4:	4605      	mov	r5, r0
 80016d6:	b911      	cbnz	r1, 80016de <sbrk_aligned+0x12>
 80016d8:	f000 fe64 	bl	80023a4 <_sbrk_r>
 80016dc:	6030      	str	r0, [r6, #0]
 80016de:	4621      	mov	r1, r4
 80016e0:	4628      	mov	r0, r5
 80016e2:	f000 fe5f 	bl	80023a4 <_sbrk_r>
 80016e6:	1c43      	adds	r3, r0, #1
 80016e8:	d103      	bne.n	80016f2 <sbrk_aligned+0x26>
 80016ea:	f04f 34ff 	mov.w	r4, #4294967295
 80016ee:	4620      	mov	r0, r4
 80016f0:	bd70      	pop	{r4, r5, r6, pc}
 80016f2:	1cc4      	adds	r4, r0, #3
 80016f4:	f024 0403 	bic.w	r4, r4, #3
 80016f8:	42a0      	cmp	r0, r4
 80016fa:	d0f8      	beq.n	80016ee <sbrk_aligned+0x22>
 80016fc:	1a21      	subs	r1, r4, r0
 80016fe:	4628      	mov	r0, r5
 8001700:	f000 fe50 	bl	80023a4 <_sbrk_r>
 8001704:	3001      	adds	r0, #1
 8001706:	d1f2      	bne.n	80016ee <sbrk_aligned+0x22>
 8001708:	e7ef      	b.n	80016ea <sbrk_aligned+0x1e>
 800170a:	bf00      	nop
 800170c:	20000210 	.word	0x20000210

08001710 <_malloc_r>:
 8001710:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001714:	1ccd      	adds	r5, r1, #3
 8001716:	f025 0503 	bic.w	r5, r5, #3
 800171a:	3508      	adds	r5, #8
 800171c:	2d0c      	cmp	r5, #12
 800171e:	bf38      	it	cc
 8001720:	250c      	movcc	r5, #12
 8001722:	2d00      	cmp	r5, #0
 8001724:	4606      	mov	r6, r0
 8001726:	db01      	blt.n	800172c <_malloc_r+0x1c>
 8001728:	42a9      	cmp	r1, r5
 800172a:	d904      	bls.n	8001736 <_malloc_r+0x26>
 800172c:	230c      	movs	r3, #12
 800172e:	6033      	str	r3, [r6, #0]
 8001730:	2000      	movs	r0, #0
 8001732:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001736:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800180c <_malloc_r+0xfc>
 800173a:	f000 f869 	bl	8001810 <__malloc_lock>
 800173e:	f8d8 3000 	ldr.w	r3, [r8]
 8001742:	461c      	mov	r4, r3
 8001744:	bb44      	cbnz	r4, 8001798 <_malloc_r+0x88>
 8001746:	4629      	mov	r1, r5
 8001748:	4630      	mov	r0, r6
 800174a:	f7ff ffbf 	bl	80016cc <sbrk_aligned>
 800174e:	1c43      	adds	r3, r0, #1
 8001750:	4604      	mov	r4, r0
 8001752:	d158      	bne.n	8001806 <_malloc_r+0xf6>
 8001754:	f8d8 4000 	ldr.w	r4, [r8]
 8001758:	4627      	mov	r7, r4
 800175a:	2f00      	cmp	r7, #0
 800175c:	d143      	bne.n	80017e6 <_malloc_r+0xd6>
 800175e:	2c00      	cmp	r4, #0
 8001760:	d04b      	beq.n	80017fa <_malloc_r+0xea>
 8001762:	6823      	ldr	r3, [r4, #0]
 8001764:	4639      	mov	r1, r7
 8001766:	4630      	mov	r0, r6
 8001768:	eb04 0903 	add.w	r9, r4, r3
 800176c:	f000 fe1a 	bl	80023a4 <_sbrk_r>
 8001770:	4581      	cmp	r9, r0
 8001772:	d142      	bne.n	80017fa <_malloc_r+0xea>
 8001774:	6821      	ldr	r1, [r4, #0]
 8001776:	1a6d      	subs	r5, r5, r1
 8001778:	4629      	mov	r1, r5
 800177a:	4630      	mov	r0, r6
 800177c:	f7ff ffa6 	bl	80016cc <sbrk_aligned>
 8001780:	3001      	adds	r0, #1
 8001782:	d03a      	beq.n	80017fa <_malloc_r+0xea>
 8001784:	6823      	ldr	r3, [r4, #0]
 8001786:	442b      	add	r3, r5
 8001788:	6023      	str	r3, [r4, #0]
 800178a:	f8d8 3000 	ldr.w	r3, [r8]
 800178e:	685a      	ldr	r2, [r3, #4]
 8001790:	bb62      	cbnz	r2, 80017ec <_malloc_r+0xdc>
 8001792:	f8c8 7000 	str.w	r7, [r8]
 8001796:	e00f      	b.n	80017b8 <_malloc_r+0xa8>
 8001798:	6822      	ldr	r2, [r4, #0]
 800179a:	1b52      	subs	r2, r2, r5
 800179c:	d420      	bmi.n	80017e0 <_malloc_r+0xd0>
 800179e:	2a0b      	cmp	r2, #11
 80017a0:	d917      	bls.n	80017d2 <_malloc_r+0xc2>
 80017a2:	1961      	adds	r1, r4, r5
 80017a4:	42a3      	cmp	r3, r4
 80017a6:	6025      	str	r5, [r4, #0]
 80017a8:	bf18      	it	ne
 80017aa:	6059      	strne	r1, [r3, #4]
 80017ac:	6863      	ldr	r3, [r4, #4]
 80017ae:	bf08      	it	eq
 80017b0:	f8c8 1000 	streq.w	r1, [r8]
 80017b4:	5162      	str	r2, [r4, r5]
 80017b6:	604b      	str	r3, [r1, #4]
 80017b8:	4630      	mov	r0, r6
 80017ba:	f000 f82f 	bl	800181c <__malloc_unlock>
 80017be:	f104 000b 	add.w	r0, r4, #11
 80017c2:	1d23      	adds	r3, r4, #4
 80017c4:	f020 0007 	bic.w	r0, r0, #7
 80017c8:	1ac2      	subs	r2, r0, r3
 80017ca:	bf1c      	itt	ne
 80017cc:	1a1b      	subne	r3, r3, r0
 80017ce:	50a3      	strne	r3, [r4, r2]
 80017d0:	e7af      	b.n	8001732 <_malloc_r+0x22>
 80017d2:	6862      	ldr	r2, [r4, #4]
 80017d4:	42a3      	cmp	r3, r4
 80017d6:	bf0c      	ite	eq
 80017d8:	f8c8 2000 	streq.w	r2, [r8]
 80017dc:	605a      	strne	r2, [r3, #4]
 80017de:	e7eb      	b.n	80017b8 <_malloc_r+0xa8>
 80017e0:	4623      	mov	r3, r4
 80017e2:	6864      	ldr	r4, [r4, #4]
 80017e4:	e7ae      	b.n	8001744 <_malloc_r+0x34>
 80017e6:	463c      	mov	r4, r7
 80017e8:	687f      	ldr	r7, [r7, #4]
 80017ea:	e7b6      	b.n	800175a <_malloc_r+0x4a>
 80017ec:	461a      	mov	r2, r3
 80017ee:	685b      	ldr	r3, [r3, #4]
 80017f0:	42a3      	cmp	r3, r4
 80017f2:	d1fb      	bne.n	80017ec <_malloc_r+0xdc>
 80017f4:	2300      	movs	r3, #0
 80017f6:	6053      	str	r3, [r2, #4]
 80017f8:	e7de      	b.n	80017b8 <_malloc_r+0xa8>
 80017fa:	230c      	movs	r3, #12
 80017fc:	6033      	str	r3, [r6, #0]
 80017fe:	4630      	mov	r0, r6
 8001800:	f000 f80c 	bl	800181c <__malloc_unlock>
 8001804:	e794      	b.n	8001730 <_malloc_r+0x20>
 8001806:	6005      	str	r5, [r0, #0]
 8001808:	e7d6      	b.n	80017b8 <_malloc_r+0xa8>
 800180a:	bf00      	nop
 800180c:	20000214 	.word	0x20000214

08001810 <__malloc_lock>:
 8001810:	4801      	ldr	r0, [pc, #4]	@ (8001818 <__malloc_lock+0x8>)
 8001812:	f000 be14 	b.w	800243e <__retarget_lock_acquire_recursive>
 8001816:	bf00      	nop
 8001818:	20000358 	.word	0x20000358

0800181c <__malloc_unlock>:
 800181c:	4801      	ldr	r0, [pc, #4]	@ (8001824 <__malloc_unlock+0x8>)
 800181e:	f000 be0f 	b.w	8002440 <__retarget_lock_release_recursive>
 8001822:	bf00      	nop
 8001824:	20000358 	.word	0x20000358

08001828 <__cvt>:
 8001828:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800182c:	ec57 6b10 	vmov	r6, r7, d0
 8001830:	2f00      	cmp	r7, #0
 8001832:	460c      	mov	r4, r1
 8001834:	4619      	mov	r1, r3
 8001836:	463b      	mov	r3, r7
 8001838:	bfbb      	ittet	lt
 800183a:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 800183e:	461f      	movlt	r7, r3
 8001840:	2300      	movge	r3, #0
 8001842:	232d      	movlt	r3, #45	@ 0x2d
 8001844:	700b      	strb	r3, [r1, #0]
 8001846:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8001848:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 800184c:	4691      	mov	r9, r2
 800184e:	f023 0820 	bic.w	r8, r3, #32
 8001852:	bfbc      	itt	lt
 8001854:	4632      	movlt	r2, r6
 8001856:	4616      	movlt	r6, r2
 8001858:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800185c:	d005      	beq.n	800186a <__cvt+0x42>
 800185e:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001862:	d100      	bne.n	8001866 <__cvt+0x3e>
 8001864:	3401      	adds	r4, #1
 8001866:	2102      	movs	r1, #2
 8001868:	e000      	b.n	800186c <__cvt+0x44>
 800186a:	2103      	movs	r1, #3
 800186c:	ab03      	add	r3, sp, #12
 800186e:	9301      	str	r3, [sp, #4]
 8001870:	ab02      	add	r3, sp, #8
 8001872:	9300      	str	r3, [sp, #0]
 8001874:	ec47 6b10 	vmov	d0, r6, r7
 8001878:	4653      	mov	r3, sl
 800187a:	4622      	mov	r2, r4
 800187c:	f000 fe78 	bl	8002570 <_dtoa_r>
 8001880:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001884:	4605      	mov	r5, r0
 8001886:	d119      	bne.n	80018bc <__cvt+0x94>
 8001888:	f019 0f01 	tst.w	r9, #1
 800188c:	d00e      	beq.n	80018ac <__cvt+0x84>
 800188e:	eb00 0904 	add.w	r9, r0, r4
 8001892:	2200      	movs	r2, #0
 8001894:	2300      	movs	r3, #0
 8001896:	4630      	mov	r0, r6
 8001898:	4639      	mov	r1, r7
 800189a:	f7ff f915 	bl	8000ac8 <__aeabi_dcmpeq>
 800189e:	b108      	cbz	r0, 80018a4 <__cvt+0x7c>
 80018a0:	f8cd 900c 	str.w	r9, [sp, #12]
 80018a4:	2230      	movs	r2, #48	@ 0x30
 80018a6:	9b03      	ldr	r3, [sp, #12]
 80018a8:	454b      	cmp	r3, r9
 80018aa:	d31e      	bcc.n	80018ea <__cvt+0xc2>
 80018ac:	9b03      	ldr	r3, [sp, #12]
 80018ae:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80018b0:	1b5b      	subs	r3, r3, r5
 80018b2:	4628      	mov	r0, r5
 80018b4:	6013      	str	r3, [r2, #0]
 80018b6:	b004      	add	sp, #16
 80018b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80018bc:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80018c0:	eb00 0904 	add.w	r9, r0, r4
 80018c4:	d1e5      	bne.n	8001892 <__cvt+0x6a>
 80018c6:	7803      	ldrb	r3, [r0, #0]
 80018c8:	2b30      	cmp	r3, #48	@ 0x30
 80018ca:	d10a      	bne.n	80018e2 <__cvt+0xba>
 80018cc:	2200      	movs	r2, #0
 80018ce:	2300      	movs	r3, #0
 80018d0:	4630      	mov	r0, r6
 80018d2:	4639      	mov	r1, r7
 80018d4:	f7ff f8f8 	bl	8000ac8 <__aeabi_dcmpeq>
 80018d8:	b918      	cbnz	r0, 80018e2 <__cvt+0xba>
 80018da:	f1c4 0401 	rsb	r4, r4, #1
 80018de:	f8ca 4000 	str.w	r4, [sl]
 80018e2:	f8da 3000 	ldr.w	r3, [sl]
 80018e6:	4499      	add	r9, r3
 80018e8:	e7d3      	b.n	8001892 <__cvt+0x6a>
 80018ea:	1c59      	adds	r1, r3, #1
 80018ec:	9103      	str	r1, [sp, #12]
 80018ee:	701a      	strb	r2, [r3, #0]
 80018f0:	e7d9      	b.n	80018a6 <__cvt+0x7e>

080018f2 <__exponent>:
 80018f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80018f4:	2900      	cmp	r1, #0
 80018f6:	bfba      	itte	lt
 80018f8:	4249      	neglt	r1, r1
 80018fa:	232d      	movlt	r3, #45	@ 0x2d
 80018fc:	232b      	movge	r3, #43	@ 0x2b
 80018fe:	2909      	cmp	r1, #9
 8001900:	7002      	strb	r2, [r0, #0]
 8001902:	7043      	strb	r3, [r0, #1]
 8001904:	dd29      	ble.n	800195a <__exponent+0x68>
 8001906:	f10d 0307 	add.w	r3, sp, #7
 800190a:	461d      	mov	r5, r3
 800190c:	270a      	movs	r7, #10
 800190e:	461a      	mov	r2, r3
 8001910:	fbb1 f6f7 	udiv	r6, r1, r7
 8001914:	fb07 1416 	mls	r4, r7, r6, r1
 8001918:	3430      	adds	r4, #48	@ 0x30
 800191a:	f802 4c01 	strb.w	r4, [r2, #-1]
 800191e:	460c      	mov	r4, r1
 8001920:	2c63      	cmp	r4, #99	@ 0x63
 8001922:	f103 33ff 	add.w	r3, r3, #4294967295
 8001926:	4631      	mov	r1, r6
 8001928:	dcf1      	bgt.n	800190e <__exponent+0x1c>
 800192a:	3130      	adds	r1, #48	@ 0x30
 800192c:	1e94      	subs	r4, r2, #2
 800192e:	f803 1c01 	strb.w	r1, [r3, #-1]
 8001932:	1c41      	adds	r1, r0, #1
 8001934:	4623      	mov	r3, r4
 8001936:	42ab      	cmp	r3, r5
 8001938:	d30a      	bcc.n	8001950 <__exponent+0x5e>
 800193a:	f10d 0309 	add.w	r3, sp, #9
 800193e:	1a9b      	subs	r3, r3, r2
 8001940:	42ac      	cmp	r4, r5
 8001942:	bf88      	it	hi
 8001944:	2300      	movhi	r3, #0
 8001946:	3302      	adds	r3, #2
 8001948:	4403      	add	r3, r0
 800194a:	1a18      	subs	r0, r3, r0
 800194c:	b003      	add	sp, #12
 800194e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001950:	f813 6b01 	ldrb.w	r6, [r3], #1
 8001954:	f801 6f01 	strb.w	r6, [r1, #1]!
 8001958:	e7ed      	b.n	8001936 <__exponent+0x44>
 800195a:	2330      	movs	r3, #48	@ 0x30
 800195c:	3130      	adds	r1, #48	@ 0x30
 800195e:	7083      	strb	r3, [r0, #2]
 8001960:	70c1      	strb	r1, [r0, #3]
 8001962:	1d03      	adds	r3, r0, #4
 8001964:	e7f1      	b.n	800194a <__exponent+0x58>
	...

08001968 <_printf_float>:
 8001968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800196c:	b08d      	sub	sp, #52	@ 0x34
 800196e:	460c      	mov	r4, r1
 8001970:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001974:	4616      	mov	r6, r2
 8001976:	461f      	mov	r7, r3
 8001978:	4605      	mov	r5, r0
 800197a:	f000 fcdb 	bl	8002334 <_localeconv_r>
 800197e:	6803      	ldr	r3, [r0, #0]
 8001980:	9304      	str	r3, [sp, #16]
 8001982:	4618      	mov	r0, r3
 8001984:	f7fe fc74 	bl	8000270 <strlen>
 8001988:	2300      	movs	r3, #0
 800198a:	930a      	str	r3, [sp, #40]	@ 0x28
 800198c:	f8d8 3000 	ldr.w	r3, [r8]
 8001990:	9005      	str	r0, [sp, #20]
 8001992:	3307      	adds	r3, #7
 8001994:	f023 0307 	bic.w	r3, r3, #7
 8001998:	f103 0208 	add.w	r2, r3, #8
 800199c:	f894 a018 	ldrb.w	sl, [r4, #24]
 80019a0:	f8d4 b000 	ldr.w	fp, [r4]
 80019a4:	f8c8 2000 	str.w	r2, [r8]
 80019a8:	e9d3 8900 	ldrd	r8, r9, [r3]
 80019ac:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80019b0:	9307      	str	r3, [sp, #28]
 80019b2:	f8cd 8018 	str.w	r8, [sp, #24]
 80019b6:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80019ba:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80019be:	4b9c      	ldr	r3, [pc, #624]	@ (8001c30 <_printf_float+0x2c8>)
 80019c0:	f04f 32ff 	mov.w	r2, #4294967295
 80019c4:	f7ff f8b2 	bl	8000b2c <__aeabi_dcmpun>
 80019c8:	bb70      	cbnz	r0, 8001a28 <_printf_float+0xc0>
 80019ca:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80019ce:	4b98      	ldr	r3, [pc, #608]	@ (8001c30 <_printf_float+0x2c8>)
 80019d0:	f04f 32ff 	mov.w	r2, #4294967295
 80019d4:	f7ff f88c 	bl	8000af0 <__aeabi_dcmple>
 80019d8:	bb30      	cbnz	r0, 8001a28 <_printf_float+0xc0>
 80019da:	2200      	movs	r2, #0
 80019dc:	2300      	movs	r3, #0
 80019de:	4640      	mov	r0, r8
 80019e0:	4649      	mov	r1, r9
 80019e2:	f7ff f87b 	bl	8000adc <__aeabi_dcmplt>
 80019e6:	b110      	cbz	r0, 80019ee <_printf_float+0x86>
 80019e8:	232d      	movs	r3, #45	@ 0x2d
 80019ea:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80019ee:	4a91      	ldr	r2, [pc, #580]	@ (8001c34 <_printf_float+0x2cc>)
 80019f0:	4b91      	ldr	r3, [pc, #580]	@ (8001c38 <_printf_float+0x2d0>)
 80019f2:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 80019f6:	bf8c      	ite	hi
 80019f8:	4690      	movhi	r8, r2
 80019fa:	4698      	movls	r8, r3
 80019fc:	2303      	movs	r3, #3
 80019fe:	6123      	str	r3, [r4, #16]
 8001a00:	f02b 0304 	bic.w	r3, fp, #4
 8001a04:	6023      	str	r3, [r4, #0]
 8001a06:	f04f 0900 	mov.w	r9, #0
 8001a0a:	9700      	str	r7, [sp, #0]
 8001a0c:	4633      	mov	r3, r6
 8001a0e:	aa0b      	add	r2, sp, #44	@ 0x2c
 8001a10:	4621      	mov	r1, r4
 8001a12:	4628      	mov	r0, r5
 8001a14:	f000 f9d2 	bl	8001dbc <_printf_common>
 8001a18:	3001      	adds	r0, #1
 8001a1a:	f040 808d 	bne.w	8001b38 <_printf_float+0x1d0>
 8001a1e:	f04f 30ff 	mov.w	r0, #4294967295
 8001a22:	b00d      	add	sp, #52	@ 0x34
 8001a24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001a28:	4642      	mov	r2, r8
 8001a2a:	464b      	mov	r3, r9
 8001a2c:	4640      	mov	r0, r8
 8001a2e:	4649      	mov	r1, r9
 8001a30:	f7ff f87c 	bl	8000b2c <__aeabi_dcmpun>
 8001a34:	b140      	cbz	r0, 8001a48 <_printf_float+0xe0>
 8001a36:	464b      	mov	r3, r9
 8001a38:	2b00      	cmp	r3, #0
 8001a3a:	bfbc      	itt	lt
 8001a3c:	232d      	movlt	r3, #45	@ 0x2d
 8001a3e:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001a42:	4a7e      	ldr	r2, [pc, #504]	@ (8001c3c <_printf_float+0x2d4>)
 8001a44:	4b7e      	ldr	r3, [pc, #504]	@ (8001c40 <_printf_float+0x2d8>)
 8001a46:	e7d4      	b.n	80019f2 <_printf_float+0x8a>
 8001a48:	6863      	ldr	r3, [r4, #4]
 8001a4a:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8001a4e:	9206      	str	r2, [sp, #24]
 8001a50:	1c5a      	adds	r2, r3, #1
 8001a52:	d13b      	bne.n	8001acc <_printf_float+0x164>
 8001a54:	2306      	movs	r3, #6
 8001a56:	6063      	str	r3, [r4, #4]
 8001a58:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001a5c:	2300      	movs	r3, #0
 8001a5e:	6022      	str	r2, [r4, #0]
 8001a60:	9303      	str	r3, [sp, #12]
 8001a62:	ab0a      	add	r3, sp, #40	@ 0x28
 8001a64:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001a68:	ab09      	add	r3, sp, #36	@ 0x24
 8001a6a:	9300      	str	r3, [sp, #0]
 8001a6c:	6861      	ldr	r1, [r4, #4]
 8001a6e:	ec49 8b10 	vmov	d0, r8, r9
 8001a72:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001a76:	4628      	mov	r0, r5
 8001a78:	f7ff fed6 	bl	8001828 <__cvt>
 8001a7c:	9b06      	ldr	r3, [sp, #24]
 8001a7e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001a80:	2b47      	cmp	r3, #71	@ 0x47
 8001a82:	4680      	mov	r8, r0
 8001a84:	d129      	bne.n	8001ada <_printf_float+0x172>
 8001a86:	1cc8      	adds	r0, r1, #3
 8001a88:	db02      	blt.n	8001a90 <_printf_float+0x128>
 8001a8a:	6863      	ldr	r3, [r4, #4]
 8001a8c:	4299      	cmp	r1, r3
 8001a8e:	dd41      	ble.n	8001b14 <_printf_float+0x1ac>
 8001a90:	f1aa 0a02 	sub.w	sl, sl, #2
 8001a94:	fa5f fa8a 	uxtb.w	sl, sl
 8001a98:	3901      	subs	r1, #1
 8001a9a:	4652      	mov	r2, sl
 8001a9c:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001aa0:	9109      	str	r1, [sp, #36]	@ 0x24
 8001aa2:	f7ff ff26 	bl	80018f2 <__exponent>
 8001aa6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001aa8:	1813      	adds	r3, r2, r0
 8001aaa:	2a01      	cmp	r2, #1
 8001aac:	4681      	mov	r9, r0
 8001aae:	6123      	str	r3, [r4, #16]
 8001ab0:	dc02      	bgt.n	8001ab8 <_printf_float+0x150>
 8001ab2:	6822      	ldr	r2, [r4, #0]
 8001ab4:	07d2      	lsls	r2, r2, #31
 8001ab6:	d501      	bpl.n	8001abc <_printf_float+0x154>
 8001ab8:	3301      	adds	r3, #1
 8001aba:	6123      	str	r3, [r4, #16]
 8001abc:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8001ac0:	2b00      	cmp	r3, #0
 8001ac2:	d0a2      	beq.n	8001a0a <_printf_float+0xa2>
 8001ac4:	232d      	movs	r3, #45	@ 0x2d
 8001ac6:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001aca:	e79e      	b.n	8001a0a <_printf_float+0xa2>
 8001acc:	9a06      	ldr	r2, [sp, #24]
 8001ace:	2a47      	cmp	r2, #71	@ 0x47
 8001ad0:	d1c2      	bne.n	8001a58 <_printf_float+0xf0>
 8001ad2:	2b00      	cmp	r3, #0
 8001ad4:	d1c0      	bne.n	8001a58 <_printf_float+0xf0>
 8001ad6:	2301      	movs	r3, #1
 8001ad8:	e7bd      	b.n	8001a56 <_printf_float+0xee>
 8001ada:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001ade:	d9db      	bls.n	8001a98 <_printf_float+0x130>
 8001ae0:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001ae4:	d118      	bne.n	8001b18 <_printf_float+0x1b0>
 8001ae6:	2900      	cmp	r1, #0
 8001ae8:	6863      	ldr	r3, [r4, #4]
 8001aea:	dd0b      	ble.n	8001b04 <_printf_float+0x19c>
 8001aec:	6121      	str	r1, [r4, #16]
 8001aee:	b913      	cbnz	r3, 8001af6 <_printf_float+0x18e>
 8001af0:	6822      	ldr	r2, [r4, #0]
 8001af2:	07d0      	lsls	r0, r2, #31
 8001af4:	d502      	bpl.n	8001afc <_printf_float+0x194>
 8001af6:	3301      	adds	r3, #1
 8001af8:	440b      	add	r3, r1
 8001afa:	6123      	str	r3, [r4, #16]
 8001afc:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001afe:	f04f 0900 	mov.w	r9, #0
 8001b02:	e7db      	b.n	8001abc <_printf_float+0x154>
 8001b04:	b913      	cbnz	r3, 8001b0c <_printf_float+0x1a4>
 8001b06:	6822      	ldr	r2, [r4, #0]
 8001b08:	07d2      	lsls	r2, r2, #31
 8001b0a:	d501      	bpl.n	8001b10 <_printf_float+0x1a8>
 8001b0c:	3302      	adds	r3, #2
 8001b0e:	e7f4      	b.n	8001afa <_printf_float+0x192>
 8001b10:	2301      	movs	r3, #1
 8001b12:	e7f2      	b.n	8001afa <_printf_float+0x192>
 8001b14:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001b18:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001b1a:	4299      	cmp	r1, r3
 8001b1c:	db05      	blt.n	8001b2a <_printf_float+0x1c2>
 8001b1e:	6823      	ldr	r3, [r4, #0]
 8001b20:	6121      	str	r1, [r4, #16]
 8001b22:	07d8      	lsls	r0, r3, #31
 8001b24:	d5ea      	bpl.n	8001afc <_printf_float+0x194>
 8001b26:	1c4b      	adds	r3, r1, #1
 8001b28:	e7e7      	b.n	8001afa <_printf_float+0x192>
 8001b2a:	2900      	cmp	r1, #0
 8001b2c:	bfd4      	ite	le
 8001b2e:	f1c1 0202 	rsble	r2, r1, #2
 8001b32:	2201      	movgt	r2, #1
 8001b34:	4413      	add	r3, r2
 8001b36:	e7e0      	b.n	8001afa <_printf_float+0x192>
 8001b38:	6823      	ldr	r3, [r4, #0]
 8001b3a:	055a      	lsls	r2, r3, #21
 8001b3c:	d407      	bmi.n	8001b4e <_printf_float+0x1e6>
 8001b3e:	6923      	ldr	r3, [r4, #16]
 8001b40:	4642      	mov	r2, r8
 8001b42:	4631      	mov	r1, r6
 8001b44:	4628      	mov	r0, r5
 8001b46:	47b8      	blx	r7
 8001b48:	3001      	adds	r0, #1
 8001b4a:	d12b      	bne.n	8001ba4 <_printf_float+0x23c>
 8001b4c:	e767      	b.n	8001a1e <_printf_float+0xb6>
 8001b4e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001b52:	f240 80dd 	bls.w	8001d10 <_printf_float+0x3a8>
 8001b56:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001b5a:	2200      	movs	r2, #0
 8001b5c:	2300      	movs	r3, #0
 8001b5e:	f7fe ffb3 	bl	8000ac8 <__aeabi_dcmpeq>
 8001b62:	2800      	cmp	r0, #0
 8001b64:	d033      	beq.n	8001bce <_printf_float+0x266>
 8001b66:	4a37      	ldr	r2, [pc, #220]	@ (8001c44 <_printf_float+0x2dc>)
 8001b68:	2301      	movs	r3, #1
 8001b6a:	4631      	mov	r1, r6
 8001b6c:	4628      	mov	r0, r5
 8001b6e:	47b8      	blx	r7
 8001b70:	3001      	adds	r0, #1
 8001b72:	f43f af54 	beq.w	8001a1e <_printf_float+0xb6>
 8001b76:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8001b7a:	4543      	cmp	r3, r8
 8001b7c:	db02      	blt.n	8001b84 <_printf_float+0x21c>
 8001b7e:	6823      	ldr	r3, [r4, #0]
 8001b80:	07d8      	lsls	r0, r3, #31
 8001b82:	d50f      	bpl.n	8001ba4 <_printf_float+0x23c>
 8001b84:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001b88:	4631      	mov	r1, r6
 8001b8a:	4628      	mov	r0, r5
 8001b8c:	47b8      	blx	r7
 8001b8e:	3001      	adds	r0, #1
 8001b90:	f43f af45 	beq.w	8001a1e <_printf_float+0xb6>
 8001b94:	f04f 0900 	mov.w	r9, #0
 8001b98:	f108 38ff 	add.w	r8, r8, #4294967295
 8001b9c:	f104 0a1a 	add.w	sl, r4, #26
 8001ba0:	45c8      	cmp	r8, r9
 8001ba2:	dc09      	bgt.n	8001bb8 <_printf_float+0x250>
 8001ba4:	6823      	ldr	r3, [r4, #0]
 8001ba6:	079b      	lsls	r3, r3, #30
 8001ba8:	f100 8103 	bmi.w	8001db2 <_printf_float+0x44a>
 8001bac:	68e0      	ldr	r0, [r4, #12]
 8001bae:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001bb0:	4298      	cmp	r0, r3
 8001bb2:	bfb8      	it	lt
 8001bb4:	4618      	movlt	r0, r3
 8001bb6:	e734      	b.n	8001a22 <_printf_float+0xba>
 8001bb8:	2301      	movs	r3, #1
 8001bba:	4652      	mov	r2, sl
 8001bbc:	4631      	mov	r1, r6
 8001bbe:	4628      	mov	r0, r5
 8001bc0:	47b8      	blx	r7
 8001bc2:	3001      	adds	r0, #1
 8001bc4:	f43f af2b 	beq.w	8001a1e <_printf_float+0xb6>
 8001bc8:	f109 0901 	add.w	r9, r9, #1
 8001bcc:	e7e8      	b.n	8001ba0 <_printf_float+0x238>
 8001bce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001bd0:	2b00      	cmp	r3, #0
 8001bd2:	dc39      	bgt.n	8001c48 <_printf_float+0x2e0>
 8001bd4:	4a1b      	ldr	r2, [pc, #108]	@ (8001c44 <_printf_float+0x2dc>)
 8001bd6:	2301      	movs	r3, #1
 8001bd8:	4631      	mov	r1, r6
 8001bda:	4628      	mov	r0, r5
 8001bdc:	47b8      	blx	r7
 8001bde:	3001      	adds	r0, #1
 8001be0:	f43f af1d 	beq.w	8001a1e <_printf_float+0xb6>
 8001be4:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8001be8:	ea59 0303 	orrs.w	r3, r9, r3
 8001bec:	d102      	bne.n	8001bf4 <_printf_float+0x28c>
 8001bee:	6823      	ldr	r3, [r4, #0]
 8001bf0:	07d9      	lsls	r1, r3, #31
 8001bf2:	d5d7      	bpl.n	8001ba4 <_printf_float+0x23c>
 8001bf4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001bf8:	4631      	mov	r1, r6
 8001bfa:	4628      	mov	r0, r5
 8001bfc:	47b8      	blx	r7
 8001bfe:	3001      	adds	r0, #1
 8001c00:	f43f af0d 	beq.w	8001a1e <_printf_float+0xb6>
 8001c04:	f04f 0a00 	mov.w	sl, #0
 8001c08:	f104 0b1a 	add.w	fp, r4, #26
 8001c0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001c0e:	425b      	negs	r3, r3
 8001c10:	4553      	cmp	r3, sl
 8001c12:	dc01      	bgt.n	8001c18 <_printf_float+0x2b0>
 8001c14:	464b      	mov	r3, r9
 8001c16:	e793      	b.n	8001b40 <_printf_float+0x1d8>
 8001c18:	2301      	movs	r3, #1
 8001c1a:	465a      	mov	r2, fp
 8001c1c:	4631      	mov	r1, r6
 8001c1e:	4628      	mov	r0, r5
 8001c20:	47b8      	blx	r7
 8001c22:	3001      	adds	r0, #1
 8001c24:	f43f aefb 	beq.w	8001a1e <_printf_float+0xb6>
 8001c28:	f10a 0a01 	add.w	sl, sl, #1
 8001c2c:	e7ee      	b.n	8001c0c <_printf_float+0x2a4>
 8001c2e:	bf00      	nop
 8001c30:	7fefffff 	.word	0x7fefffff
 8001c34:	0800437c 	.word	0x0800437c
 8001c38:	08004378 	.word	0x08004378
 8001c3c:	08004384 	.word	0x08004384
 8001c40:	08004380 	.word	0x08004380
 8001c44:	08004388 	.word	0x08004388
 8001c48:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001c4a:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001c4e:	4553      	cmp	r3, sl
 8001c50:	bfa8      	it	ge
 8001c52:	4653      	movge	r3, sl
 8001c54:	2b00      	cmp	r3, #0
 8001c56:	4699      	mov	r9, r3
 8001c58:	dc36      	bgt.n	8001cc8 <_printf_float+0x360>
 8001c5a:	f04f 0b00 	mov.w	fp, #0
 8001c5e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001c62:	f104 021a 	add.w	r2, r4, #26
 8001c66:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001c68:	9306      	str	r3, [sp, #24]
 8001c6a:	eba3 0309 	sub.w	r3, r3, r9
 8001c6e:	455b      	cmp	r3, fp
 8001c70:	dc31      	bgt.n	8001cd6 <_printf_float+0x36e>
 8001c72:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001c74:	459a      	cmp	sl, r3
 8001c76:	dc3a      	bgt.n	8001cee <_printf_float+0x386>
 8001c78:	6823      	ldr	r3, [r4, #0]
 8001c7a:	07da      	lsls	r2, r3, #31
 8001c7c:	d437      	bmi.n	8001cee <_printf_float+0x386>
 8001c7e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001c80:	ebaa 0903 	sub.w	r9, sl, r3
 8001c84:	9b06      	ldr	r3, [sp, #24]
 8001c86:	ebaa 0303 	sub.w	r3, sl, r3
 8001c8a:	4599      	cmp	r9, r3
 8001c8c:	bfa8      	it	ge
 8001c8e:	4699      	movge	r9, r3
 8001c90:	f1b9 0f00 	cmp.w	r9, #0
 8001c94:	dc33      	bgt.n	8001cfe <_printf_float+0x396>
 8001c96:	f04f 0800 	mov.w	r8, #0
 8001c9a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001c9e:	f104 0b1a 	add.w	fp, r4, #26
 8001ca2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001ca4:	ebaa 0303 	sub.w	r3, sl, r3
 8001ca8:	eba3 0309 	sub.w	r3, r3, r9
 8001cac:	4543      	cmp	r3, r8
 8001cae:	f77f af79 	ble.w	8001ba4 <_printf_float+0x23c>
 8001cb2:	2301      	movs	r3, #1
 8001cb4:	465a      	mov	r2, fp
 8001cb6:	4631      	mov	r1, r6
 8001cb8:	4628      	mov	r0, r5
 8001cba:	47b8      	blx	r7
 8001cbc:	3001      	adds	r0, #1
 8001cbe:	f43f aeae 	beq.w	8001a1e <_printf_float+0xb6>
 8001cc2:	f108 0801 	add.w	r8, r8, #1
 8001cc6:	e7ec      	b.n	8001ca2 <_printf_float+0x33a>
 8001cc8:	4642      	mov	r2, r8
 8001cca:	4631      	mov	r1, r6
 8001ccc:	4628      	mov	r0, r5
 8001cce:	47b8      	blx	r7
 8001cd0:	3001      	adds	r0, #1
 8001cd2:	d1c2      	bne.n	8001c5a <_printf_float+0x2f2>
 8001cd4:	e6a3      	b.n	8001a1e <_printf_float+0xb6>
 8001cd6:	2301      	movs	r3, #1
 8001cd8:	4631      	mov	r1, r6
 8001cda:	4628      	mov	r0, r5
 8001cdc:	9206      	str	r2, [sp, #24]
 8001cde:	47b8      	blx	r7
 8001ce0:	3001      	adds	r0, #1
 8001ce2:	f43f ae9c 	beq.w	8001a1e <_printf_float+0xb6>
 8001ce6:	9a06      	ldr	r2, [sp, #24]
 8001ce8:	f10b 0b01 	add.w	fp, fp, #1
 8001cec:	e7bb      	b.n	8001c66 <_printf_float+0x2fe>
 8001cee:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001cf2:	4631      	mov	r1, r6
 8001cf4:	4628      	mov	r0, r5
 8001cf6:	47b8      	blx	r7
 8001cf8:	3001      	adds	r0, #1
 8001cfa:	d1c0      	bne.n	8001c7e <_printf_float+0x316>
 8001cfc:	e68f      	b.n	8001a1e <_printf_float+0xb6>
 8001cfe:	9a06      	ldr	r2, [sp, #24]
 8001d00:	464b      	mov	r3, r9
 8001d02:	4442      	add	r2, r8
 8001d04:	4631      	mov	r1, r6
 8001d06:	4628      	mov	r0, r5
 8001d08:	47b8      	blx	r7
 8001d0a:	3001      	adds	r0, #1
 8001d0c:	d1c3      	bne.n	8001c96 <_printf_float+0x32e>
 8001d0e:	e686      	b.n	8001a1e <_printf_float+0xb6>
 8001d10:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001d14:	f1ba 0f01 	cmp.w	sl, #1
 8001d18:	dc01      	bgt.n	8001d1e <_printf_float+0x3b6>
 8001d1a:	07db      	lsls	r3, r3, #31
 8001d1c:	d536      	bpl.n	8001d8c <_printf_float+0x424>
 8001d1e:	2301      	movs	r3, #1
 8001d20:	4642      	mov	r2, r8
 8001d22:	4631      	mov	r1, r6
 8001d24:	4628      	mov	r0, r5
 8001d26:	47b8      	blx	r7
 8001d28:	3001      	adds	r0, #1
 8001d2a:	f43f ae78 	beq.w	8001a1e <_printf_float+0xb6>
 8001d2e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001d32:	4631      	mov	r1, r6
 8001d34:	4628      	mov	r0, r5
 8001d36:	47b8      	blx	r7
 8001d38:	3001      	adds	r0, #1
 8001d3a:	f43f ae70 	beq.w	8001a1e <_printf_float+0xb6>
 8001d3e:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001d42:	2200      	movs	r2, #0
 8001d44:	2300      	movs	r3, #0
 8001d46:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001d4a:	f7fe febd 	bl	8000ac8 <__aeabi_dcmpeq>
 8001d4e:	b9c0      	cbnz	r0, 8001d82 <_printf_float+0x41a>
 8001d50:	4653      	mov	r3, sl
 8001d52:	f108 0201 	add.w	r2, r8, #1
 8001d56:	4631      	mov	r1, r6
 8001d58:	4628      	mov	r0, r5
 8001d5a:	47b8      	blx	r7
 8001d5c:	3001      	adds	r0, #1
 8001d5e:	d10c      	bne.n	8001d7a <_printf_float+0x412>
 8001d60:	e65d      	b.n	8001a1e <_printf_float+0xb6>
 8001d62:	2301      	movs	r3, #1
 8001d64:	465a      	mov	r2, fp
 8001d66:	4631      	mov	r1, r6
 8001d68:	4628      	mov	r0, r5
 8001d6a:	47b8      	blx	r7
 8001d6c:	3001      	adds	r0, #1
 8001d6e:	f43f ae56 	beq.w	8001a1e <_printf_float+0xb6>
 8001d72:	f108 0801 	add.w	r8, r8, #1
 8001d76:	45d0      	cmp	r8, sl
 8001d78:	dbf3      	blt.n	8001d62 <_printf_float+0x3fa>
 8001d7a:	464b      	mov	r3, r9
 8001d7c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001d80:	e6df      	b.n	8001b42 <_printf_float+0x1da>
 8001d82:	f04f 0800 	mov.w	r8, #0
 8001d86:	f104 0b1a 	add.w	fp, r4, #26
 8001d8a:	e7f4      	b.n	8001d76 <_printf_float+0x40e>
 8001d8c:	2301      	movs	r3, #1
 8001d8e:	4642      	mov	r2, r8
 8001d90:	e7e1      	b.n	8001d56 <_printf_float+0x3ee>
 8001d92:	2301      	movs	r3, #1
 8001d94:	464a      	mov	r2, r9
 8001d96:	4631      	mov	r1, r6
 8001d98:	4628      	mov	r0, r5
 8001d9a:	47b8      	blx	r7
 8001d9c:	3001      	adds	r0, #1
 8001d9e:	f43f ae3e 	beq.w	8001a1e <_printf_float+0xb6>
 8001da2:	f108 0801 	add.w	r8, r8, #1
 8001da6:	68e3      	ldr	r3, [r4, #12]
 8001da8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001daa:	1a5b      	subs	r3, r3, r1
 8001dac:	4543      	cmp	r3, r8
 8001dae:	dcf0      	bgt.n	8001d92 <_printf_float+0x42a>
 8001db0:	e6fc      	b.n	8001bac <_printf_float+0x244>
 8001db2:	f04f 0800 	mov.w	r8, #0
 8001db6:	f104 0919 	add.w	r9, r4, #25
 8001dba:	e7f4      	b.n	8001da6 <_printf_float+0x43e>

08001dbc <_printf_common>:
 8001dbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001dc0:	4616      	mov	r6, r2
 8001dc2:	4698      	mov	r8, r3
 8001dc4:	688a      	ldr	r2, [r1, #8]
 8001dc6:	690b      	ldr	r3, [r1, #16]
 8001dc8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001dcc:	4293      	cmp	r3, r2
 8001dce:	bfb8      	it	lt
 8001dd0:	4613      	movlt	r3, r2
 8001dd2:	6033      	str	r3, [r6, #0]
 8001dd4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001dd8:	4607      	mov	r7, r0
 8001dda:	460c      	mov	r4, r1
 8001ddc:	b10a      	cbz	r2, 8001de2 <_printf_common+0x26>
 8001dde:	3301      	adds	r3, #1
 8001de0:	6033      	str	r3, [r6, #0]
 8001de2:	6823      	ldr	r3, [r4, #0]
 8001de4:	0699      	lsls	r1, r3, #26
 8001de6:	bf42      	ittt	mi
 8001de8:	6833      	ldrmi	r3, [r6, #0]
 8001dea:	3302      	addmi	r3, #2
 8001dec:	6033      	strmi	r3, [r6, #0]
 8001dee:	6825      	ldr	r5, [r4, #0]
 8001df0:	f015 0506 	ands.w	r5, r5, #6
 8001df4:	d106      	bne.n	8001e04 <_printf_common+0x48>
 8001df6:	f104 0a19 	add.w	sl, r4, #25
 8001dfa:	68e3      	ldr	r3, [r4, #12]
 8001dfc:	6832      	ldr	r2, [r6, #0]
 8001dfe:	1a9b      	subs	r3, r3, r2
 8001e00:	42ab      	cmp	r3, r5
 8001e02:	dc26      	bgt.n	8001e52 <_printf_common+0x96>
 8001e04:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001e08:	6822      	ldr	r2, [r4, #0]
 8001e0a:	3b00      	subs	r3, #0
 8001e0c:	bf18      	it	ne
 8001e0e:	2301      	movne	r3, #1
 8001e10:	0692      	lsls	r2, r2, #26
 8001e12:	d42b      	bmi.n	8001e6c <_printf_common+0xb0>
 8001e14:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001e18:	4641      	mov	r1, r8
 8001e1a:	4638      	mov	r0, r7
 8001e1c:	47c8      	blx	r9
 8001e1e:	3001      	adds	r0, #1
 8001e20:	d01e      	beq.n	8001e60 <_printf_common+0xa4>
 8001e22:	6823      	ldr	r3, [r4, #0]
 8001e24:	6922      	ldr	r2, [r4, #16]
 8001e26:	f003 0306 	and.w	r3, r3, #6
 8001e2a:	2b04      	cmp	r3, #4
 8001e2c:	bf02      	ittt	eq
 8001e2e:	68e5      	ldreq	r5, [r4, #12]
 8001e30:	6833      	ldreq	r3, [r6, #0]
 8001e32:	1aed      	subeq	r5, r5, r3
 8001e34:	68a3      	ldr	r3, [r4, #8]
 8001e36:	bf0c      	ite	eq
 8001e38:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001e3c:	2500      	movne	r5, #0
 8001e3e:	4293      	cmp	r3, r2
 8001e40:	bfc4      	itt	gt
 8001e42:	1a9b      	subgt	r3, r3, r2
 8001e44:	18ed      	addgt	r5, r5, r3
 8001e46:	2600      	movs	r6, #0
 8001e48:	341a      	adds	r4, #26
 8001e4a:	42b5      	cmp	r5, r6
 8001e4c:	d11a      	bne.n	8001e84 <_printf_common+0xc8>
 8001e4e:	2000      	movs	r0, #0
 8001e50:	e008      	b.n	8001e64 <_printf_common+0xa8>
 8001e52:	2301      	movs	r3, #1
 8001e54:	4652      	mov	r2, sl
 8001e56:	4641      	mov	r1, r8
 8001e58:	4638      	mov	r0, r7
 8001e5a:	47c8      	blx	r9
 8001e5c:	3001      	adds	r0, #1
 8001e5e:	d103      	bne.n	8001e68 <_printf_common+0xac>
 8001e60:	f04f 30ff 	mov.w	r0, #4294967295
 8001e64:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e68:	3501      	adds	r5, #1
 8001e6a:	e7c6      	b.n	8001dfa <_printf_common+0x3e>
 8001e6c:	18e1      	adds	r1, r4, r3
 8001e6e:	1c5a      	adds	r2, r3, #1
 8001e70:	2030      	movs	r0, #48	@ 0x30
 8001e72:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001e76:	4422      	add	r2, r4
 8001e78:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001e7c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001e80:	3302      	adds	r3, #2
 8001e82:	e7c7      	b.n	8001e14 <_printf_common+0x58>
 8001e84:	2301      	movs	r3, #1
 8001e86:	4622      	mov	r2, r4
 8001e88:	4641      	mov	r1, r8
 8001e8a:	4638      	mov	r0, r7
 8001e8c:	47c8      	blx	r9
 8001e8e:	3001      	adds	r0, #1
 8001e90:	d0e6      	beq.n	8001e60 <_printf_common+0xa4>
 8001e92:	3601      	adds	r6, #1
 8001e94:	e7d9      	b.n	8001e4a <_printf_common+0x8e>
	...

08001e98 <_printf_i>:
 8001e98:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e9c:	7e0f      	ldrb	r7, [r1, #24]
 8001e9e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001ea0:	2f78      	cmp	r7, #120	@ 0x78
 8001ea2:	4691      	mov	r9, r2
 8001ea4:	4680      	mov	r8, r0
 8001ea6:	460c      	mov	r4, r1
 8001ea8:	469a      	mov	sl, r3
 8001eaa:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001eae:	d807      	bhi.n	8001ec0 <_printf_i+0x28>
 8001eb0:	2f62      	cmp	r7, #98	@ 0x62
 8001eb2:	d80a      	bhi.n	8001eca <_printf_i+0x32>
 8001eb4:	2f00      	cmp	r7, #0
 8001eb6:	f000 80d1 	beq.w	800205c <_printf_i+0x1c4>
 8001eba:	2f58      	cmp	r7, #88	@ 0x58
 8001ebc:	f000 80b8 	beq.w	8002030 <_printf_i+0x198>
 8001ec0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001ec4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001ec8:	e03a      	b.n	8001f40 <_printf_i+0xa8>
 8001eca:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001ece:	2b15      	cmp	r3, #21
 8001ed0:	d8f6      	bhi.n	8001ec0 <_printf_i+0x28>
 8001ed2:	a101      	add	r1, pc, #4	@ (adr r1, 8001ed8 <_printf_i+0x40>)
 8001ed4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001ed8:	08001f31 	.word	0x08001f31
 8001edc:	08001f45 	.word	0x08001f45
 8001ee0:	08001ec1 	.word	0x08001ec1
 8001ee4:	08001ec1 	.word	0x08001ec1
 8001ee8:	08001ec1 	.word	0x08001ec1
 8001eec:	08001ec1 	.word	0x08001ec1
 8001ef0:	08001f45 	.word	0x08001f45
 8001ef4:	08001ec1 	.word	0x08001ec1
 8001ef8:	08001ec1 	.word	0x08001ec1
 8001efc:	08001ec1 	.word	0x08001ec1
 8001f00:	08001ec1 	.word	0x08001ec1
 8001f04:	08002043 	.word	0x08002043
 8001f08:	08001f6f 	.word	0x08001f6f
 8001f0c:	08001ffd 	.word	0x08001ffd
 8001f10:	08001ec1 	.word	0x08001ec1
 8001f14:	08001ec1 	.word	0x08001ec1
 8001f18:	08002065 	.word	0x08002065
 8001f1c:	08001ec1 	.word	0x08001ec1
 8001f20:	08001f6f 	.word	0x08001f6f
 8001f24:	08001ec1 	.word	0x08001ec1
 8001f28:	08001ec1 	.word	0x08001ec1
 8001f2c:	08002005 	.word	0x08002005
 8001f30:	6833      	ldr	r3, [r6, #0]
 8001f32:	1d1a      	adds	r2, r3, #4
 8001f34:	681b      	ldr	r3, [r3, #0]
 8001f36:	6032      	str	r2, [r6, #0]
 8001f38:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001f3c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001f40:	2301      	movs	r3, #1
 8001f42:	e09c      	b.n	800207e <_printf_i+0x1e6>
 8001f44:	6833      	ldr	r3, [r6, #0]
 8001f46:	6820      	ldr	r0, [r4, #0]
 8001f48:	1d19      	adds	r1, r3, #4
 8001f4a:	6031      	str	r1, [r6, #0]
 8001f4c:	0606      	lsls	r6, r0, #24
 8001f4e:	d501      	bpl.n	8001f54 <_printf_i+0xbc>
 8001f50:	681d      	ldr	r5, [r3, #0]
 8001f52:	e003      	b.n	8001f5c <_printf_i+0xc4>
 8001f54:	0645      	lsls	r5, r0, #25
 8001f56:	d5fb      	bpl.n	8001f50 <_printf_i+0xb8>
 8001f58:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001f5c:	2d00      	cmp	r5, #0
 8001f5e:	da03      	bge.n	8001f68 <_printf_i+0xd0>
 8001f60:	232d      	movs	r3, #45	@ 0x2d
 8001f62:	426d      	negs	r5, r5
 8001f64:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001f68:	4858      	ldr	r0, [pc, #352]	@ (80020cc <_printf_i+0x234>)
 8001f6a:	230a      	movs	r3, #10
 8001f6c:	e011      	b.n	8001f92 <_printf_i+0xfa>
 8001f6e:	6821      	ldr	r1, [r4, #0]
 8001f70:	6833      	ldr	r3, [r6, #0]
 8001f72:	0608      	lsls	r0, r1, #24
 8001f74:	f853 5b04 	ldr.w	r5, [r3], #4
 8001f78:	d402      	bmi.n	8001f80 <_printf_i+0xe8>
 8001f7a:	0649      	lsls	r1, r1, #25
 8001f7c:	bf48      	it	mi
 8001f7e:	b2ad      	uxthmi	r5, r5
 8001f80:	2f6f      	cmp	r7, #111	@ 0x6f
 8001f82:	4852      	ldr	r0, [pc, #328]	@ (80020cc <_printf_i+0x234>)
 8001f84:	6033      	str	r3, [r6, #0]
 8001f86:	bf14      	ite	ne
 8001f88:	230a      	movne	r3, #10
 8001f8a:	2308      	moveq	r3, #8
 8001f8c:	2100      	movs	r1, #0
 8001f8e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001f92:	6866      	ldr	r6, [r4, #4]
 8001f94:	60a6      	str	r6, [r4, #8]
 8001f96:	2e00      	cmp	r6, #0
 8001f98:	db05      	blt.n	8001fa6 <_printf_i+0x10e>
 8001f9a:	6821      	ldr	r1, [r4, #0]
 8001f9c:	432e      	orrs	r6, r5
 8001f9e:	f021 0104 	bic.w	r1, r1, #4
 8001fa2:	6021      	str	r1, [r4, #0]
 8001fa4:	d04b      	beq.n	800203e <_printf_i+0x1a6>
 8001fa6:	4616      	mov	r6, r2
 8001fa8:	fbb5 f1f3 	udiv	r1, r5, r3
 8001fac:	fb03 5711 	mls	r7, r3, r1, r5
 8001fb0:	5dc7      	ldrb	r7, [r0, r7]
 8001fb2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001fb6:	462f      	mov	r7, r5
 8001fb8:	42bb      	cmp	r3, r7
 8001fba:	460d      	mov	r5, r1
 8001fbc:	d9f4      	bls.n	8001fa8 <_printf_i+0x110>
 8001fbe:	2b08      	cmp	r3, #8
 8001fc0:	d10b      	bne.n	8001fda <_printf_i+0x142>
 8001fc2:	6823      	ldr	r3, [r4, #0]
 8001fc4:	07df      	lsls	r7, r3, #31
 8001fc6:	d508      	bpl.n	8001fda <_printf_i+0x142>
 8001fc8:	6923      	ldr	r3, [r4, #16]
 8001fca:	6861      	ldr	r1, [r4, #4]
 8001fcc:	4299      	cmp	r1, r3
 8001fce:	bfde      	ittt	le
 8001fd0:	2330      	movle	r3, #48	@ 0x30
 8001fd2:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001fd6:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001fda:	1b92      	subs	r2, r2, r6
 8001fdc:	6122      	str	r2, [r4, #16]
 8001fde:	f8cd a000 	str.w	sl, [sp]
 8001fe2:	464b      	mov	r3, r9
 8001fe4:	aa03      	add	r2, sp, #12
 8001fe6:	4621      	mov	r1, r4
 8001fe8:	4640      	mov	r0, r8
 8001fea:	f7ff fee7 	bl	8001dbc <_printf_common>
 8001fee:	3001      	adds	r0, #1
 8001ff0:	d14a      	bne.n	8002088 <_printf_i+0x1f0>
 8001ff2:	f04f 30ff 	mov.w	r0, #4294967295
 8001ff6:	b004      	add	sp, #16
 8001ff8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001ffc:	6823      	ldr	r3, [r4, #0]
 8001ffe:	f043 0320 	orr.w	r3, r3, #32
 8002002:	6023      	str	r3, [r4, #0]
 8002004:	4832      	ldr	r0, [pc, #200]	@ (80020d0 <_printf_i+0x238>)
 8002006:	2778      	movs	r7, #120	@ 0x78
 8002008:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800200c:	6823      	ldr	r3, [r4, #0]
 800200e:	6831      	ldr	r1, [r6, #0]
 8002010:	061f      	lsls	r7, r3, #24
 8002012:	f851 5b04 	ldr.w	r5, [r1], #4
 8002016:	d402      	bmi.n	800201e <_printf_i+0x186>
 8002018:	065f      	lsls	r7, r3, #25
 800201a:	bf48      	it	mi
 800201c:	b2ad      	uxthmi	r5, r5
 800201e:	6031      	str	r1, [r6, #0]
 8002020:	07d9      	lsls	r1, r3, #31
 8002022:	bf44      	itt	mi
 8002024:	f043 0320 	orrmi.w	r3, r3, #32
 8002028:	6023      	strmi	r3, [r4, #0]
 800202a:	b11d      	cbz	r5, 8002034 <_printf_i+0x19c>
 800202c:	2310      	movs	r3, #16
 800202e:	e7ad      	b.n	8001f8c <_printf_i+0xf4>
 8002030:	4826      	ldr	r0, [pc, #152]	@ (80020cc <_printf_i+0x234>)
 8002032:	e7e9      	b.n	8002008 <_printf_i+0x170>
 8002034:	6823      	ldr	r3, [r4, #0]
 8002036:	f023 0320 	bic.w	r3, r3, #32
 800203a:	6023      	str	r3, [r4, #0]
 800203c:	e7f6      	b.n	800202c <_printf_i+0x194>
 800203e:	4616      	mov	r6, r2
 8002040:	e7bd      	b.n	8001fbe <_printf_i+0x126>
 8002042:	6833      	ldr	r3, [r6, #0]
 8002044:	6825      	ldr	r5, [r4, #0]
 8002046:	6961      	ldr	r1, [r4, #20]
 8002048:	1d18      	adds	r0, r3, #4
 800204a:	6030      	str	r0, [r6, #0]
 800204c:	062e      	lsls	r6, r5, #24
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	d501      	bpl.n	8002056 <_printf_i+0x1be>
 8002052:	6019      	str	r1, [r3, #0]
 8002054:	e002      	b.n	800205c <_printf_i+0x1c4>
 8002056:	0668      	lsls	r0, r5, #25
 8002058:	d5fb      	bpl.n	8002052 <_printf_i+0x1ba>
 800205a:	8019      	strh	r1, [r3, #0]
 800205c:	2300      	movs	r3, #0
 800205e:	6123      	str	r3, [r4, #16]
 8002060:	4616      	mov	r6, r2
 8002062:	e7bc      	b.n	8001fde <_printf_i+0x146>
 8002064:	6833      	ldr	r3, [r6, #0]
 8002066:	1d1a      	adds	r2, r3, #4
 8002068:	6032      	str	r2, [r6, #0]
 800206a:	681e      	ldr	r6, [r3, #0]
 800206c:	6862      	ldr	r2, [r4, #4]
 800206e:	2100      	movs	r1, #0
 8002070:	4630      	mov	r0, r6
 8002072:	f7fe f8ad 	bl	80001d0 <memchr>
 8002076:	b108      	cbz	r0, 800207c <_printf_i+0x1e4>
 8002078:	1b80      	subs	r0, r0, r6
 800207a:	6060      	str	r0, [r4, #4]
 800207c:	6863      	ldr	r3, [r4, #4]
 800207e:	6123      	str	r3, [r4, #16]
 8002080:	2300      	movs	r3, #0
 8002082:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002086:	e7aa      	b.n	8001fde <_printf_i+0x146>
 8002088:	6923      	ldr	r3, [r4, #16]
 800208a:	4632      	mov	r2, r6
 800208c:	4649      	mov	r1, r9
 800208e:	4640      	mov	r0, r8
 8002090:	47d0      	blx	sl
 8002092:	3001      	adds	r0, #1
 8002094:	d0ad      	beq.n	8001ff2 <_printf_i+0x15a>
 8002096:	6823      	ldr	r3, [r4, #0]
 8002098:	079b      	lsls	r3, r3, #30
 800209a:	d413      	bmi.n	80020c4 <_printf_i+0x22c>
 800209c:	68e0      	ldr	r0, [r4, #12]
 800209e:	9b03      	ldr	r3, [sp, #12]
 80020a0:	4298      	cmp	r0, r3
 80020a2:	bfb8      	it	lt
 80020a4:	4618      	movlt	r0, r3
 80020a6:	e7a6      	b.n	8001ff6 <_printf_i+0x15e>
 80020a8:	2301      	movs	r3, #1
 80020aa:	4632      	mov	r2, r6
 80020ac:	4649      	mov	r1, r9
 80020ae:	4640      	mov	r0, r8
 80020b0:	47d0      	blx	sl
 80020b2:	3001      	adds	r0, #1
 80020b4:	d09d      	beq.n	8001ff2 <_printf_i+0x15a>
 80020b6:	3501      	adds	r5, #1
 80020b8:	68e3      	ldr	r3, [r4, #12]
 80020ba:	9903      	ldr	r1, [sp, #12]
 80020bc:	1a5b      	subs	r3, r3, r1
 80020be:	42ab      	cmp	r3, r5
 80020c0:	dcf2      	bgt.n	80020a8 <_printf_i+0x210>
 80020c2:	e7eb      	b.n	800209c <_printf_i+0x204>
 80020c4:	2500      	movs	r5, #0
 80020c6:	f104 0619 	add.w	r6, r4, #25
 80020ca:	e7f5      	b.n	80020b8 <_printf_i+0x220>
 80020cc:	0800438a 	.word	0x0800438a
 80020d0:	0800439b 	.word	0x0800439b

080020d4 <std>:
 80020d4:	2300      	movs	r3, #0
 80020d6:	b510      	push	{r4, lr}
 80020d8:	4604      	mov	r4, r0
 80020da:	e9c0 3300 	strd	r3, r3, [r0]
 80020de:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80020e2:	6083      	str	r3, [r0, #8]
 80020e4:	8181      	strh	r1, [r0, #12]
 80020e6:	6643      	str	r3, [r0, #100]	@ 0x64
 80020e8:	81c2      	strh	r2, [r0, #14]
 80020ea:	6183      	str	r3, [r0, #24]
 80020ec:	4619      	mov	r1, r3
 80020ee:	2208      	movs	r2, #8
 80020f0:	305c      	adds	r0, #92	@ 0x5c
 80020f2:	f000 f916 	bl	8002322 <memset>
 80020f6:	4b0d      	ldr	r3, [pc, #52]	@ (800212c <std+0x58>)
 80020f8:	6263      	str	r3, [r4, #36]	@ 0x24
 80020fa:	4b0d      	ldr	r3, [pc, #52]	@ (8002130 <std+0x5c>)
 80020fc:	62a3      	str	r3, [r4, #40]	@ 0x28
 80020fe:	4b0d      	ldr	r3, [pc, #52]	@ (8002134 <std+0x60>)
 8002100:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002102:	4b0d      	ldr	r3, [pc, #52]	@ (8002138 <std+0x64>)
 8002104:	6323      	str	r3, [r4, #48]	@ 0x30
 8002106:	4b0d      	ldr	r3, [pc, #52]	@ (800213c <std+0x68>)
 8002108:	6224      	str	r4, [r4, #32]
 800210a:	429c      	cmp	r4, r3
 800210c:	d006      	beq.n	800211c <std+0x48>
 800210e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002112:	4294      	cmp	r4, r2
 8002114:	d002      	beq.n	800211c <std+0x48>
 8002116:	33d0      	adds	r3, #208	@ 0xd0
 8002118:	429c      	cmp	r4, r3
 800211a:	d105      	bne.n	8002128 <std+0x54>
 800211c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002120:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002124:	f000 b98a 	b.w	800243c <__retarget_lock_init_recursive>
 8002128:	bd10      	pop	{r4, pc}
 800212a:	bf00      	nop
 800212c:	0800229d 	.word	0x0800229d
 8002130:	080022bf 	.word	0x080022bf
 8002134:	080022f7 	.word	0x080022f7
 8002138:	0800231b 	.word	0x0800231b
 800213c:	20000218 	.word	0x20000218

08002140 <stdio_exit_handler>:
 8002140:	4a02      	ldr	r2, [pc, #8]	@ (800214c <stdio_exit_handler+0xc>)
 8002142:	4903      	ldr	r1, [pc, #12]	@ (8002150 <stdio_exit_handler+0x10>)
 8002144:	4803      	ldr	r0, [pc, #12]	@ (8002154 <stdio_exit_handler+0x14>)
 8002146:	f000 b869 	b.w	800221c <_fwalk_sglue>
 800214a:	bf00      	nop
 800214c:	20000000 	.word	0x20000000
 8002150:	08003c51 	.word	0x08003c51
 8002154:	20000010 	.word	0x20000010

08002158 <cleanup_stdio>:
 8002158:	6841      	ldr	r1, [r0, #4]
 800215a:	4b0c      	ldr	r3, [pc, #48]	@ (800218c <cleanup_stdio+0x34>)
 800215c:	4299      	cmp	r1, r3
 800215e:	b510      	push	{r4, lr}
 8002160:	4604      	mov	r4, r0
 8002162:	d001      	beq.n	8002168 <cleanup_stdio+0x10>
 8002164:	f001 fd74 	bl	8003c50 <_fflush_r>
 8002168:	68a1      	ldr	r1, [r4, #8]
 800216a:	4b09      	ldr	r3, [pc, #36]	@ (8002190 <cleanup_stdio+0x38>)
 800216c:	4299      	cmp	r1, r3
 800216e:	d002      	beq.n	8002176 <cleanup_stdio+0x1e>
 8002170:	4620      	mov	r0, r4
 8002172:	f001 fd6d 	bl	8003c50 <_fflush_r>
 8002176:	68e1      	ldr	r1, [r4, #12]
 8002178:	4b06      	ldr	r3, [pc, #24]	@ (8002194 <cleanup_stdio+0x3c>)
 800217a:	4299      	cmp	r1, r3
 800217c:	d004      	beq.n	8002188 <cleanup_stdio+0x30>
 800217e:	4620      	mov	r0, r4
 8002180:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002184:	f001 bd64 	b.w	8003c50 <_fflush_r>
 8002188:	bd10      	pop	{r4, pc}
 800218a:	bf00      	nop
 800218c:	20000218 	.word	0x20000218
 8002190:	20000280 	.word	0x20000280
 8002194:	200002e8 	.word	0x200002e8

08002198 <global_stdio_init.part.0>:
 8002198:	b510      	push	{r4, lr}
 800219a:	4b0b      	ldr	r3, [pc, #44]	@ (80021c8 <global_stdio_init.part.0+0x30>)
 800219c:	4c0b      	ldr	r4, [pc, #44]	@ (80021cc <global_stdio_init.part.0+0x34>)
 800219e:	4a0c      	ldr	r2, [pc, #48]	@ (80021d0 <global_stdio_init.part.0+0x38>)
 80021a0:	601a      	str	r2, [r3, #0]
 80021a2:	4620      	mov	r0, r4
 80021a4:	2200      	movs	r2, #0
 80021a6:	2104      	movs	r1, #4
 80021a8:	f7ff ff94 	bl	80020d4 <std>
 80021ac:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80021b0:	2201      	movs	r2, #1
 80021b2:	2109      	movs	r1, #9
 80021b4:	f7ff ff8e 	bl	80020d4 <std>
 80021b8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80021bc:	2202      	movs	r2, #2
 80021be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80021c2:	2112      	movs	r1, #18
 80021c4:	f7ff bf86 	b.w	80020d4 <std>
 80021c8:	20000350 	.word	0x20000350
 80021cc:	20000218 	.word	0x20000218
 80021d0:	08002141 	.word	0x08002141

080021d4 <__sfp_lock_acquire>:
 80021d4:	4801      	ldr	r0, [pc, #4]	@ (80021dc <__sfp_lock_acquire+0x8>)
 80021d6:	f000 b932 	b.w	800243e <__retarget_lock_acquire_recursive>
 80021da:	bf00      	nop
 80021dc:	20000359 	.word	0x20000359

080021e0 <__sfp_lock_release>:
 80021e0:	4801      	ldr	r0, [pc, #4]	@ (80021e8 <__sfp_lock_release+0x8>)
 80021e2:	f000 b92d 	b.w	8002440 <__retarget_lock_release_recursive>
 80021e6:	bf00      	nop
 80021e8:	20000359 	.word	0x20000359

080021ec <__sinit>:
 80021ec:	b510      	push	{r4, lr}
 80021ee:	4604      	mov	r4, r0
 80021f0:	f7ff fff0 	bl	80021d4 <__sfp_lock_acquire>
 80021f4:	6a23      	ldr	r3, [r4, #32]
 80021f6:	b11b      	cbz	r3, 8002200 <__sinit+0x14>
 80021f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80021fc:	f7ff bff0 	b.w	80021e0 <__sfp_lock_release>
 8002200:	4b04      	ldr	r3, [pc, #16]	@ (8002214 <__sinit+0x28>)
 8002202:	6223      	str	r3, [r4, #32]
 8002204:	4b04      	ldr	r3, [pc, #16]	@ (8002218 <__sinit+0x2c>)
 8002206:	681b      	ldr	r3, [r3, #0]
 8002208:	2b00      	cmp	r3, #0
 800220a:	d1f5      	bne.n	80021f8 <__sinit+0xc>
 800220c:	f7ff ffc4 	bl	8002198 <global_stdio_init.part.0>
 8002210:	e7f2      	b.n	80021f8 <__sinit+0xc>
 8002212:	bf00      	nop
 8002214:	08002159 	.word	0x08002159
 8002218:	20000350 	.word	0x20000350

0800221c <_fwalk_sglue>:
 800221c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002220:	4607      	mov	r7, r0
 8002222:	4688      	mov	r8, r1
 8002224:	4614      	mov	r4, r2
 8002226:	2600      	movs	r6, #0
 8002228:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800222c:	f1b9 0901 	subs.w	r9, r9, #1
 8002230:	d505      	bpl.n	800223e <_fwalk_sglue+0x22>
 8002232:	6824      	ldr	r4, [r4, #0]
 8002234:	2c00      	cmp	r4, #0
 8002236:	d1f7      	bne.n	8002228 <_fwalk_sglue+0xc>
 8002238:	4630      	mov	r0, r6
 800223a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800223e:	89ab      	ldrh	r3, [r5, #12]
 8002240:	2b01      	cmp	r3, #1
 8002242:	d907      	bls.n	8002254 <_fwalk_sglue+0x38>
 8002244:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002248:	3301      	adds	r3, #1
 800224a:	d003      	beq.n	8002254 <_fwalk_sglue+0x38>
 800224c:	4629      	mov	r1, r5
 800224e:	4638      	mov	r0, r7
 8002250:	47c0      	blx	r8
 8002252:	4306      	orrs	r6, r0
 8002254:	3568      	adds	r5, #104	@ 0x68
 8002256:	e7e9      	b.n	800222c <_fwalk_sglue+0x10>

08002258 <siprintf>:
 8002258:	b40e      	push	{r1, r2, r3}
 800225a:	b510      	push	{r4, lr}
 800225c:	b09d      	sub	sp, #116	@ 0x74
 800225e:	ab1f      	add	r3, sp, #124	@ 0x7c
 8002260:	9002      	str	r0, [sp, #8]
 8002262:	9006      	str	r0, [sp, #24]
 8002264:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8002268:	480a      	ldr	r0, [pc, #40]	@ (8002294 <siprintf+0x3c>)
 800226a:	9107      	str	r1, [sp, #28]
 800226c:	9104      	str	r1, [sp, #16]
 800226e:	490a      	ldr	r1, [pc, #40]	@ (8002298 <siprintf+0x40>)
 8002270:	f853 2b04 	ldr.w	r2, [r3], #4
 8002274:	9105      	str	r1, [sp, #20]
 8002276:	2400      	movs	r4, #0
 8002278:	a902      	add	r1, sp, #8
 800227a:	6800      	ldr	r0, [r0, #0]
 800227c:	9301      	str	r3, [sp, #4]
 800227e:	941b      	str	r4, [sp, #108]	@ 0x6c
 8002280:	f001 fb66 	bl	8003950 <_svfiprintf_r>
 8002284:	9b02      	ldr	r3, [sp, #8]
 8002286:	701c      	strb	r4, [r3, #0]
 8002288:	b01d      	add	sp, #116	@ 0x74
 800228a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800228e:	b003      	add	sp, #12
 8002290:	4770      	bx	lr
 8002292:	bf00      	nop
 8002294:	2000000c 	.word	0x2000000c
 8002298:	ffff0208 	.word	0xffff0208

0800229c <__sread>:
 800229c:	b510      	push	{r4, lr}
 800229e:	460c      	mov	r4, r1
 80022a0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80022a4:	f000 f86c 	bl	8002380 <_read_r>
 80022a8:	2800      	cmp	r0, #0
 80022aa:	bfab      	itete	ge
 80022ac:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80022ae:	89a3      	ldrhlt	r3, [r4, #12]
 80022b0:	181b      	addge	r3, r3, r0
 80022b2:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80022b6:	bfac      	ite	ge
 80022b8:	6563      	strge	r3, [r4, #84]	@ 0x54
 80022ba:	81a3      	strhlt	r3, [r4, #12]
 80022bc:	bd10      	pop	{r4, pc}

080022be <__swrite>:
 80022be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80022c2:	461f      	mov	r7, r3
 80022c4:	898b      	ldrh	r3, [r1, #12]
 80022c6:	05db      	lsls	r3, r3, #23
 80022c8:	4605      	mov	r5, r0
 80022ca:	460c      	mov	r4, r1
 80022cc:	4616      	mov	r6, r2
 80022ce:	d505      	bpl.n	80022dc <__swrite+0x1e>
 80022d0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80022d4:	2302      	movs	r3, #2
 80022d6:	2200      	movs	r2, #0
 80022d8:	f000 f840 	bl	800235c <_lseek_r>
 80022dc:	89a3      	ldrh	r3, [r4, #12]
 80022de:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80022e2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80022e6:	81a3      	strh	r3, [r4, #12]
 80022e8:	4632      	mov	r2, r6
 80022ea:	463b      	mov	r3, r7
 80022ec:	4628      	mov	r0, r5
 80022ee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80022f2:	f000 b867 	b.w	80023c4 <_write_r>

080022f6 <__sseek>:
 80022f6:	b510      	push	{r4, lr}
 80022f8:	460c      	mov	r4, r1
 80022fa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80022fe:	f000 f82d 	bl	800235c <_lseek_r>
 8002302:	1c43      	adds	r3, r0, #1
 8002304:	89a3      	ldrh	r3, [r4, #12]
 8002306:	bf15      	itete	ne
 8002308:	6560      	strne	r0, [r4, #84]	@ 0x54
 800230a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800230e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8002312:	81a3      	strheq	r3, [r4, #12]
 8002314:	bf18      	it	ne
 8002316:	81a3      	strhne	r3, [r4, #12]
 8002318:	bd10      	pop	{r4, pc}

0800231a <__sclose>:
 800231a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800231e:	f000 b80d 	b.w	800233c <_close_r>

08002322 <memset>:
 8002322:	4402      	add	r2, r0
 8002324:	4603      	mov	r3, r0
 8002326:	4293      	cmp	r3, r2
 8002328:	d100      	bne.n	800232c <memset+0xa>
 800232a:	4770      	bx	lr
 800232c:	f803 1b01 	strb.w	r1, [r3], #1
 8002330:	e7f9      	b.n	8002326 <memset+0x4>
	...

08002334 <_localeconv_r>:
 8002334:	4800      	ldr	r0, [pc, #0]	@ (8002338 <_localeconv_r+0x4>)
 8002336:	4770      	bx	lr
 8002338:	2000014c 	.word	0x2000014c

0800233c <_close_r>:
 800233c:	b538      	push	{r3, r4, r5, lr}
 800233e:	4d06      	ldr	r5, [pc, #24]	@ (8002358 <_close_r+0x1c>)
 8002340:	2300      	movs	r3, #0
 8002342:	4604      	mov	r4, r0
 8002344:	4608      	mov	r0, r1
 8002346:	602b      	str	r3, [r5, #0]
 8002348:	f7ff f924 	bl	8001594 <_close>
 800234c:	1c43      	adds	r3, r0, #1
 800234e:	d102      	bne.n	8002356 <_close_r+0x1a>
 8002350:	682b      	ldr	r3, [r5, #0]
 8002352:	b103      	cbz	r3, 8002356 <_close_r+0x1a>
 8002354:	6023      	str	r3, [r4, #0]
 8002356:	bd38      	pop	{r3, r4, r5, pc}
 8002358:	20000354 	.word	0x20000354

0800235c <_lseek_r>:
 800235c:	b538      	push	{r3, r4, r5, lr}
 800235e:	4d07      	ldr	r5, [pc, #28]	@ (800237c <_lseek_r+0x20>)
 8002360:	4604      	mov	r4, r0
 8002362:	4608      	mov	r0, r1
 8002364:	4611      	mov	r1, r2
 8002366:	2200      	movs	r2, #0
 8002368:	602a      	str	r2, [r5, #0]
 800236a:	461a      	mov	r2, r3
 800236c:	f7ff f939 	bl	80015e2 <_lseek>
 8002370:	1c43      	adds	r3, r0, #1
 8002372:	d102      	bne.n	800237a <_lseek_r+0x1e>
 8002374:	682b      	ldr	r3, [r5, #0]
 8002376:	b103      	cbz	r3, 800237a <_lseek_r+0x1e>
 8002378:	6023      	str	r3, [r4, #0]
 800237a:	bd38      	pop	{r3, r4, r5, pc}
 800237c:	20000354 	.word	0x20000354

08002380 <_read_r>:
 8002380:	b538      	push	{r3, r4, r5, lr}
 8002382:	4d07      	ldr	r5, [pc, #28]	@ (80023a0 <_read_r+0x20>)
 8002384:	4604      	mov	r4, r0
 8002386:	4608      	mov	r0, r1
 8002388:	4611      	mov	r1, r2
 800238a:	2200      	movs	r2, #0
 800238c:	602a      	str	r2, [r5, #0]
 800238e:	461a      	mov	r2, r3
 8002390:	f7ff f8c7 	bl	8001522 <_read>
 8002394:	1c43      	adds	r3, r0, #1
 8002396:	d102      	bne.n	800239e <_read_r+0x1e>
 8002398:	682b      	ldr	r3, [r5, #0]
 800239a:	b103      	cbz	r3, 800239e <_read_r+0x1e>
 800239c:	6023      	str	r3, [r4, #0]
 800239e:	bd38      	pop	{r3, r4, r5, pc}
 80023a0:	20000354 	.word	0x20000354

080023a4 <_sbrk_r>:
 80023a4:	b538      	push	{r3, r4, r5, lr}
 80023a6:	4d06      	ldr	r5, [pc, #24]	@ (80023c0 <_sbrk_r+0x1c>)
 80023a8:	2300      	movs	r3, #0
 80023aa:	4604      	mov	r4, r0
 80023ac:	4608      	mov	r0, r1
 80023ae:	602b      	str	r3, [r5, #0]
 80023b0:	f7ff f924 	bl	80015fc <_sbrk>
 80023b4:	1c43      	adds	r3, r0, #1
 80023b6:	d102      	bne.n	80023be <_sbrk_r+0x1a>
 80023b8:	682b      	ldr	r3, [r5, #0]
 80023ba:	b103      	cbz	r3, 80023be <_sbrk_r+0x1a>
 80023bc:	6023      	str	r3, [r4, #0]
 80023be:	bd38      	pop	{r3, r4, r5, pc}
 80023c0:	20000354 	.word	0x20000354

080023c4 <_write_r>:
 80023c4:	b538      	push	{r3, r4, r5, lr}
 80023c6:	4d07      	ldr	r5, [pc, #28]	@ (80023e4 <_write_r+0x20>)
 80023c8:	4604      	mov	r4, r0
 80023ca:	4608      	mov	r0, r1
 80023cc:	4611      	mov	r1, r2
 80023ce:	2200      	movs	r2, #0
 80023d0:	602a      	str	r2, [r5, #0]
 80023d2:	461a      	mov	r2, r3
 80023d4:	f7ff f8c2 	bl	800155c <_write>
 80023d8:	1c43      	adds	r3, r0, #1
 80023da:	d102      	bne.n	80023e2 <_write_r+0x1e>
 80023dc:	682b      	ldr	r3, [r5, #0]
 80023de:	b103      	cbz	r3, 80023e2 <_write_r+0x1e>
 80023e0:	6023      	str	r3, [r4, #0]
 80023e2:	bd38      	pop	{r3, r4, r5, pc}
 80023e4:	20000354 	.word	0x20000354

080023e8 <__errno>:
 80023e8:	4b01      	ldr	r3, [pc, #4]	@ (80023f0 <__errno+0x8>)
 80023ea:	6818      	ldr	r0, [r3, #0]
 80023ec:	4770      	bx	lr
 80023ee:	bf00      	nop
 80023f0:	2000000c 	.word	0x2000000c

080023f4 <__libc_init_array>:
 80023f4:	b570      	push	{r4, r5, r6, lr}
 80023f6:	4d0d      	ldr	r5, [pc, #52]	@ (800242c <__libc_init_array+0x38>)
 80023f8:	4c0d      	ldr	r4, [pc, #52]	@ (8002430 <__libc_init_array+0x3c>)
 80023fa:	1b64      	subs	r4, r4, r5
 80023fc:	10a4      	asrs	r4, r4, #2
 80023fe:	2600      	movs	r6, #0
 8002400:	42a6      	cmp	r6, r4
 8002402:	d109      	bne.n	8002418 <__libc_init_array+0x24>
 8002404:	4d0b      	ldr	r5, [pc, #44]	@ (8002434 <__libc_init_array+0x40>)
 8002406:	4c0c      	ldr	r4, [pc, #48]	@ (8002438 <__libc_init_array+0x44>)
 8002408:	f001 ffa2 	bl	8004350 <_init>
 800240c:	1b64      	subs	r4, r4, r5
 800240e:	10a4      	asrs	r4, r4, #2
 8002410:	2600      	movs	r6, #0
 8002412:	42a6      	cmp	r6, r4
 8002414:	d105      	bne.n	8002422 <__libc_init_array+0x2e>
 8002416:	bd70      	pop	{r4, r5, r6, pc}
 8002418:	f855 3b04 	ldr.w	r3, [r5], #4
 800241c:	4798      	blx	r3
 800241e:	3601      	adds	r6, #1
 8002420:	e7ee      	b.n	8002400 <__libc_init_array+0xc>
 8002422:	f855 3b04 	ldr.w	r3, [r5], #4
 8002426:	4798      	blx	r3
 8002428:	3601      	adds	r6, #1
 800242a:	e7f2      	b.n	8002412 <__libc_init_array+0x1e>
 800242c:	080046f4 	.word	0x080046f4
 8002430:	080046f4 	.word	0x080046f4
 8002434:	080046f4 	.word	0x080046f4
 8002438:	080046f8 	.word	0x080046f8

0800243c <__retarget_lock_init_recursive>:
 800243c:	4770      	bx	lr

0800243e <__retarget_lock_acquire_recursive>:
 800243e:	4770      	bx	lr

08002440 <__retarget_lock_release_recursive>:
 8002440:	4770      	bx	lr

08002442 <memcpy>:
 8002442:	440a      	add	r2, r1
 8002444:	4291      	cmp	r1, r2
 8002446:	f100 33ff 	add.w	r3, r0, #4294967295
 800244a:	d100      	bne.n	800244e <memcpy+0xc>
 800244c:	4770      	bx	lr
 800244e:	b510      	push	{r4, lr}
 8002450:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002454:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002458:	4291      	cmp	r1, r2
 800245a:	d1f9      	bne.n	8002450 <memcpy+0xe>
 800245c:	bd10      	pop	{r4, pc}

0800245e <quorem>:
 800245e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002462:	6903      	ldr	r3, [r0, #16]
 8002464:	690c      	ldr	r4, [r1, #16]
 8002466:	42a3      	cmp	r3, r4
 8002468:	4607      	mov	r7, r0
 800246a:	db7e      	blt.n	800256a <quorem+0x10c>
 800246c:	3c01      	subs	r4, #1
 800246e:	f101 0814 	add.w	r8, r1, #20
 8002472:	00a3      	lsls	r3, r4, #2
 8002474:	f100 0514 	add.w	r5, r0, #20
 8002478:	9300      	str	r3, [sp, #0]
 800247a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800247e:	9301      	str	r3, [sp, #4]
 8002480:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002484:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002488:	3301      	adds	r3, #1
 800248a:	429a      	cmp	r2, r3
 800248c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002490:	fbb2 f6f3 	udiv	r6, r2, r3
 8002494:	d32e      	bcc.n	80024f4 <quorem+0x96>
 8002496:	f04f 0a00 	mov.w	sl, #0
 800249a:	46c4      	mov	ip, r8
 800249c:	46ae      	mov	lr, r5
 800249e:	46d3      	mov	fp, sl
 80024a0:	f85c 3b04 	ldr.w	r3, [ip], #4
 80024a4:	b298      	uxth	r0, r3
 80024a6:	fb06 a000 	mla	r0, r6, r0, sl
 80024aa:	0c02      	lsrs	r2, r0, #16
 80024ac:	0c1b      	lsrs	r3, r3, #16
 80024ae:	fb06 2303 	mla	r3, r6, r3, r2
 80024b2:	f8de 2000 	ldr.w	r2, [lr]
 80024b6:	b280      	uxth	r0, r0
 80024b8:	b292      	uxth	r2, r2
 80024ba:	1a12      	subs	r2, r2, r0
 80024bc:	445a      	add	r2, fp
 80024be:	f8de 0000 	ldr.w	r0, [lr]
 80024c2:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80024c6:	b29b      	uxth	r3, r3
 80024c8:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80024cc:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80024d0:	b292      	uxth	r2, r2
 80024d2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80024d6:	45e1      	cmp	r9, ip
 80024d8:	f84e 2b04 	str.w	r2, [lr], #4
 80024dc:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80024e0:	d2de      	bcs.n	80024a0 <quorem+0x42>
 80024e2:	9b00      	ldr	r3, [sp, #0]
 80024e4:	58eb      	ldr	r3, [r5, r3]
 80024e6:	b92b      	cbnz	r3, 80024f4 <quorem+0x96>
 80024e8:	9b01      	ldr	r3, [sp, #4]
 80024ea:	3b04      	subs	r3, #4
 80024ec:	429d      	cmp	r5, r3
 80024ee:	461a      	mov	r2, r3
 80024f0:	d32f      	bcc.n	8002552 <quorem+0xf4>
 80024f2:	613c      	str	r4, [r7, #16]
 80024f4:	4638      	mov	r0, r7
 80024f6:	f001 f8c7 	bl	8003688 <__mcmp>
 80024fa:	2800      	cmp	r0, #0
 80024fc:	db25      	blt.n	800254a <quorem+0xec>
 80024fe:	4629      	mov	r1, r5
 8002500:	2000      	movs	r0, #0
 8002502:	f858 2b04 	ldr.w	r2, [r8], #4
 8002506:	f8d1 c000 	ldr.w	ip, [r1]
 800250a:	fa1f fe82 	uxth.w	lr, r2
 800250e:	fa1f f38c 	uxth.w	r3, ip
 8002512:	eba3 030e 	sub.w	r3, r3, lr
 8002516:	4403      	add	r3, r0
 8002518:	0c12      	lsrs	r2, r2, #16
 800251a:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800251e:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002522:	b29b      	uxth	r3, r3
 8002524:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002528:	45c1      	cmp	r9, r8
 800252a:	f841 3b04 	str.w	r3, [r1], #4
 800252e:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002532:	d2e6      	bcs.n	8002502 <quorem+0xa4>
 8002534:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002538:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800253c:	b922      	cbnz	r2, 8002548 <quorem+0xea>
 800253e:	3b04      	subs	r3, #4
 8002540:	429d      	cmp	r5, r3
 8002542:	461a      	mov	r2, r3
 8002544:	d30b      	bcc.n	800255e <quorem+0x100>
 8002546:	613c      	str	r4, [r7, #16]
 8002548:	3601      	adds	r6, #1
 800254a:	4630      	mov	r0, r6
 800254c:	b003      	add	sp, #12
 800254e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002552:	6812      	ldr	r2, [r2, #0]
 8002554:	3b04      	subs	r3, #4
 8002556:	2a00      	cmp	r2, #0
 8002558:	d1cb      	bne.n	80024f2 <quorem+0x94>
 800255a:	3c01      	subs	r4, #1
 800255c:	e7c6      	b.n	80024ec <quorem+0x8e>
 800255e:	6812      	ldr	r2, [r2, #0]
 8002560:	3b04      	subs	r3, #4
 8002562:	2a00      	cmp	r2, #0
 8002564:	d1ef      	bne.n	8002546 <quorem+0xe8>
 8002566:	3c01      	subs	r4, #1
 8002568:	e7ea      	b.n	8002540 <quorem+0xe2>
 800256a:	2000      	movs	r0, #0
 800256c:	e7ee      	b.n	800254c <quorem+0xee>
	...

08002570 <_dtoa_r>:
 8002570:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002574:	69c7      	ldr	r7, [r0, #28]
 8002576:	b097      	sub	sp, #92	@ 0x5c
 8002578:	ed8d 0b04 	vstr	d0, [sp, #16]
 800257c:	ec55 4b10 	vmov	r4, r5, d0
 8002580:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8002582:	9107      	str	r1, [sp, #28]
 8002584:	4681      	mov	r9, r0
 8002586:	920c      	str	r2, [sp, #48]	@ 0x30
 8002588:	9311      	str	r3, [sp, #68]	@ 0x44
 800258a:	b97f      	cbnz	r7, 80025ac <_dtoa_r+0x3c>
 800258c:	2010      	movs	r0, #16
 800258e:	f7ff f895 	bl	80016bc <malloc>
 8002592:	4602      	mov	r2, r0
 8002594:	f8c9 001c 	str.w	r0, [r9, #28]
 8002598:	b920      	cbnz	r0, 80025a4 <_dtoa_r+0x34>
 800259a:	4ba9      	ldr	r3, [pc, #676]	@ (8002840 <_dtoa_r+0x2d0>)
 800259c:	21ef      	movs	r1, #239	@ 0xef
 800259e:	48a9      	ldr	r0, [pc, #676]	@ (8002844 <_dtoa_r+0x2d4>)
 80025a0:	f001 fb98 	bl	8003cd4 <__assert_func>
 80025a4:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80025a8:	6007      	str	r7, [r0, #0]
 80025aa:	60c7      	str	r7, [r0, #12]
 80025ac:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80025b0:	6819      	ldr	r1, [r3, #0]
 80025b2:	b159      	cbz	r1, 80025cc <_dtoa_r+0x5c>
 80025b4:	685a      	ldr	r2, [r3, #4]
 80025b6:	604a      	str	r2, [r1, #4]
 80025b8:	2301      	movs	r3, #1
 80025ba:	4093      	lsls	r3, r2
 80025bc:	608b      	str	r3, [r1, #8]
 80025be:	4648      	mov	r0, r9
 80025c0:	f000 fe30 	bl	8003224 <_Bfree>
 80025c4:	f8d9 301c 	ldr.w	r3, [r9, #28]
 80025c8:	2200      	movs	r2, #0
 80025ca:	601a      	str	r2, [r3, #0]
 80025cc:	1e2b      	subs	r3, r5, #0
 80025ce:	bfb9      	ittee	lt
 80025d0:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80025d4:	9305      	strlt	r3, [sp, #20]
 80025d6:	2300      	movge	r3, #0
 80025d8:	6033      	strge	r3, [r6, #0]
 80025da:	9f05      	ldr	r7, [sp, #20]
 80025dc:	4b9a      	ldr	r3, [pc, #616]	@ (8002848 <_dtoa_r+0x2d8>)
 80025de:	bfbc      	itt	lt
 80025e0:	2201      	movlt	r2, #1
 80025e2:	6032      	strlt	r2, [r6, #0]
 80025e4:	43bb      	bics	r3, r7
 80025e6:	d112      	bne.n	800260e <_dtoa_r+0x9e>
 80025e8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80025ea:	f242 730f 	movw	r3, #9999	@ 0x270f
 80025ee:	6013      	str	r3, [r2, #0]
 80025f0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80025f4:	4323      	orrs	r3, r4
 80025f6:	f000 855a 	beq.w	80030ae <_dtoa_r+0xb3e>
 80025fa:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80025fc:	f8df a25c 	ldr.w	sl, [pc, #604]	@ 800285c <_dtoa_r+0x2ec>
 8002600:	2b00      	cmp	r3, #0
 8002602:	f000 855c 	beq.w	80030be <_dtoa_r+0xb4e>
 8002606:	f10a 0303 	add.w	r3, sl, #3
 800260a:	f000 bd56 	b.w	80030ba <_dtoa_r+0xb4a>
 800260e:	ed9d 7b04 	vldr	d7, [sp, #16]
 8002612:	2200      	movs	r2, #0
 8002614:	ec51 0b17 	vmov	r0, r1, d7
 8002618:	2300      	movs	r3, #0
 800261a:	ed8d 7b0a 	vstr	d7, [sp, #40]	@ 0x28
 800261e:	f7fe fa53 	bl	8000ac8 <__aeabi_dcmpeq>
 8002622:	4680      	mov	r8, r0
 8002624:	b158      	cbz	r0, 800263e <_dtoa_r+0xce>
 8002626:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8002628:	2301      	movs	r3, #1
 800262a:	6013      	str	r3, [r2, #0]
 800262c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 800262e:	b113      	cbz	r3, 8002636 <_dtoa_r+0xc6>
 8002630:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8002632:	4b86      	ldr	r3, [pc, #536]	@ (800284c <_dtoa_r+0x2dc>)
 8002634:	6013      	str	r3, [r2, #0]
 8002636:	f8df a228 	ldr.w	sl, [pc, #552]	@ 8002860 <_dtoa_r+0x2f0>
 800263a:	f000 bd40 	b.w	80030be <_dtoa_r+0xb4e>
 800263e:	ed9d 0b0a 	vldr	d0, [sp, #40]	@ 0x28
 8002642:	aa14      	add	r2, sp, #80	@ 0x50
 8002644:	a915      	add	r1, sp, #84	@ 0x54
 8002646:	4648      	mov	r0, r9
 8002648:	f001 f8ce 	bl	80037e8 <__d2b>
 800264c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002650:	9002      	str	r0, [sp, #8]
 8002652:	2e00      	cmp	r6, #0
 8002654:	d078      	beq.n	8002748 <_dtoa_r+0x1d8>
 8002656:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002658:	f8cd 8048 	str.w	r8, [sp, #72]	@ 0x48
 800265c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002660:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 8002664:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002668:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800266c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002670:	4619      	mov	r1, r3
 8002672:	2200      	movs	r2, #0
 8002674:	4b76      	ldr	r3, [pc, #472]	@ (8002850 <_dtoa_r+0x2e0>)
 8002676:	f7fd fe07 	bl	8000288 <__aeabi_dsub>
 800267a:	a36b      	add	r3, pc, #428	@ (adr r3, 8002828 <_dtoa_r+0x2b8>)
 800267c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002680:	f7fd ffba 	bl	80005f8 <__aeabi_dmul>
 8002684:	a36a      	add	r3, pc, #424	@ (adr r3, 8002830 <_dtoa_r+0x2c0>)
 8002686:	e9d3 2300 	ldrd	r2, r3, [r3]
 800268a:	f7fd fdff 	bl	800028c <__adddf3>
 800268e:	4604      	mov	r4, r0
 8002690:	4630      	mov	r0, r6
 8002692:	460d      	mov	r5, r1
 8002694:	f7fd ff46 	bl	8000524 <__aeabi_i2d>
 8002698:	a367      	add	r3, pc, #412	@ (adr r3, 8002838 <_dtoa_r+0x2c8>)
 800269a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800269e:	f7fd ffab 	bl	80005f8 <__aeabi_dmul>
 80026a2:	4602      	mov	r2, r0
 80026a4:	460b      	mov	r3, r1
 80026a6:	4620      	mov	r0, r4
 80026a8:	4629      	mov	r1, r5
 80026aa:	f7fd fdef 	bl	800028c <__adddf3>
 80026ae:	4604      	mov	r4, r0
 80026b0:	460d      	mov	r5, r1
 80026b2:	f7fe fa51 	bl	8000b58 <__aeabi_d2iz>
 80026b6:	2200      	movs	r2, #0
 80026b8:	4607      	mov	r7, r0
 80026ba:	2300      	movs	r3, #0
 80026bc:	4620      	mov	r0, r4
 80026be:	4629      	mov	r1, r5
 80026c0:	f7fe fa0c 	bl	8000adc <__aeabi_dcmplt>
 80026c4:	b140      	cbz	r0, 80026d8 <_dtoa_r+0x168>
 80026c6:	4638      	mov	r0, r7
 80026c8:	f7fd ff2c 	bl	8000524 <__aeabi_i2d>
 80026cc:	4622      	mov	r2, r4
 80026ce:	462b      	mov	r3, r5
 80026d0:	f7fe f9fa 	bl	8000ac8 <__aeabi_dcmpeq>
 80026d4:	b900      	cbnz	r0, 80026d8 <_dtoa_r+0x168>
 80026d6:	3f01      	subs	r7, #1
 80026d8:	2f16      	cmp	r7, #22
 80026da:	d852      	bhi.n	8002782 <_dtoa_r+0x212>
 80026dc:	4b5d      	ldr	r3, [pc, #372]	@ (8002854 <_dtoa_r+0x2e4>)
 80026de:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80026e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026e6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80026ea:	f7fe f9f7 	bl	8000adc <__aeabi_dcmplt>
 80026ee:	2800      	cmp	r0, #0
 80026f0:	d049      	beq.n	8002786 <_dtoa_r+0x216>
 80026f2:	3f01      	subs	r7, #1
 80026f4:	2300      	movs	r3, #0
 80026f6:	9310      	str	r3, [sp, #64]	@ 0x40
 80026f8:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80026fa:	1b9b      	subs	r3, r3, r6
 80026fc:	1e5a      	subs	r2, r3, #1
 80026fe:	bf45      	ittet	mi
 8002700:	f1c3 0301 	rsbmi	r3, r3, #1
 8002704:	9300      	strmi	r3, [sp, #0]
 8002706:	2300      	movpl	r3, #0
 8002708:	2300      	movmi	r3, #0
 800270a:	9206      	str	r2, [sp, #24]
 800270c:	bf54      	ite	pl
 800270e:	9300      	strpl	r3, [sp, #0]
 8002710:	9306      	strmi	r3, [sp, #24]
 8002712:	2f00      	cmp	r7, #0
 8002714:	db39      	blt.n	800278a <_dtoa_r+0x21a>
 8002716:	9b06      	ldr	r3, [sp, #24]
 8002718:	970d      	str	r7, [sp, #52]	@ 0x34
 800271a:	443b      	add	r3, r7
 800271c:	9306      	str	r3, [sp, #24]
 800271e:	2300      	movs	r3, #0
 8002720:	9308      	str	r3, [sp, #32]
 8002722:	9b07      	ldr	r3, [sp, #28]
 8002724:	2b09      	cmp	r3, #9
 8002726:	d863      	bhi.n	80027f0 <_dtoa_r+0x280>
 8002728:	2b05      	cmp	r3, #5
 800272a:	bfc4      	itt	gt
 800272c:	3b04      	subgt	r3, #4
 800272e:	9307      	strgt	r3, [sp, #28]
 8002730:	9b07      	ldr	r3, [sp, #28]
 8002732:	f1a3 0302 	sub.w	r3, r3, #2
 8002736:	bfcc      	ite	gt
 8002738:	2400      	movgt	r4, #0
 800273a:	2401      	movle	r4, #1
 800273c:	2b03      	cmp	r3, #3
 800273e:	d863      	bhi.n	8002808 <_dtoa_r+0x298>
 8002740:	e8df f003 	tbb	[pc, r3]
 8002744:	2b375452 	.word	0x2b375452
 8002748:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 800274c:	441e      	add	r6, r3
 800274e:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002752:	2b20      	cmp	r3, #32
 8002754:	bfc1      	itttt	gt
 8002756:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 800275a:	409f      	lslgt	r7, r3
 800275c:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002760:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002764:	bfd6      	itet	le
 8002766:	f1c3 0320 	rsble	r3, r3, #32
 800276a:	ea47 0003 	orrgt.w	r0, r7, r3
 800276e:	fa04 f003 	lslle.w	r0, r4, r3
 8002772:	f7fd fec7 	bl	8000504 <__aeabi_ui2d>
 8002776:	2201      	movs	r2, #1
 8002778:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800277c:	3e01      	subs	r6, #1
 800277e:	9212      	str	r2, [sp, #72]	@ 0x48
 8002780:	e776      	b.n	8002670 <_dtoa_r+0x100>
 8002782:	2301      	movs	r3, #1
 8002784:	e7b7      	b.n	80026f6 <_dtoa_r+0x186>
 8002786:	9010      	str	r0, [sp, #64]	@ 0x40
 8002788:	e7b6      	b.n	80026f8 <_dtoa_r+0x188>
 800278a:	9b00      	ldr	r3, [sp, #0]
 800278c:	1bdb      	subs	r3, r3, r7
 800278e:	9300      	str	r3, [sp, #0]
 8002790:	427b      	negs	r3, r7
 8002792:	9308      	str	r3, [sp, #32]
 8002794:	2300      	movs	r3, #0
 8002796:	930d      	str	r3, [sp, #52]	@ 0x34
 8002798:	e7c3      	b.n	8002722 <_dtoa_r+0x1b2>
 800279a:	2301      	movs	r3, #1
 800279c:	9309      	str	r3, [sp, #36]	@ 0x24
 800279e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80027a0:	eb07 0b03 	add.w	fp, r7, r3
 80027a4:	f10b 0301 	add.w	r3, fp, #1
 80027a8:	2b01      	cmp	r3, #1
 80027aa:	9303      	str	r3, [sp, #12]
 80027ac:	bfb8      	it	lt
 80027ae:	2301      	movlt	r3, #1
 80027b0:	e006      	b.n	80027c0 <_dtoa_r+0x250>
 80027b2:	2301      	movs	r3, #1
 80027b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80027b6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80027b8:	2b00      	cmp	r3, #0
 80027ba:	dd28      	ble.n	800280e <_dtoa_r+0x29e>
 80027bc:	469b      	mov	fp, r3
 80027be:	9303      	str	r3, [sp, #12]
 80027c0:	f8d9 001c 	ldr.w	r0, [r9, #28]
 80027c4:	2100      	movs	r1, #0
 80027c6:	2204      	movs	r2, #4
 80027c8:	f102 0514 	add.w	r5, r2, #20
 80027cc:	429d      	cmp	r5, r3
 80027ce:	d926      	bls.n	800281e <_dtoa_r+0x2ae>
 80027d0:	6041      	str	r1, [r0, #4]
 80027d2:	4648      	mov	r0, r9
 80027d4:	f000 fce6 	bl	80031a4 <_Balloc>
 80027d8:	4682      	mov	sl, r0
 80027da:	2800      	cmp	r0, #0
 80027dc:	d142      	bne.n	8002864 <_dtoa_r+0x2f4>
 80027de:	4b1e      	ldr	r3, [pc, #120]	@ (8002858 <_dtoa_r+0x2e8>)
 80027e0:	4602      	mov	r2, r0
 80027e2:	f240 11af 	movw	r1, #431	@ 0x1af
 80027e6:	e6da      	b.n	800259e <_dtoa_r+0x2e>
 80027e8:	2300      	movs	r3, #0
 80027ea:	e7e3      	b.n	80027b4 <_dtoa_r+0x244>
 80027ec:	2300      	movs	r3, #0
 80027ee:	e7d5      	b.n	800279c <_dtoa_r+0x22c>
 80027f0:	2401      	movs	r4, #1
 80027f2:	2300      	movs	r3, #0
 80027f4:	9307      	str	r3, [sp, #28]
 80027f6:	9409      	str	r4, [sp, #36]	@ 0x24
 80027f8:	f04f 3bff 	mov.w	fp, #4294967295
 80027fc:	2200      	movs	r2, #0
 80027fe:	f8cd b00c 	str.w	fp, [sp, #12]
 8002802:	2312      	movs	r3, #18
 8002804:	920c      	str	r2, [sp, #48]	@ 0x30
 8002806:	e7db      	b.n	80027c0 <_dtoa_r+0x250>
 8002808:	2301      	movs	r3, #1
 800280a:	9309      	str	r3, [sp, #36]	@ 0x24
 800280c:	e7f4      	b.n	80027f8 <_dtoa_r+0x288>
 800280e:	f04f 0b01 	mov.w	fp, #1
 8002812:	f8cd b00c 	str.w	fp, [sp, #12]
 8002816:	465b      	mov	r3, fp
 8002818:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
 800281c:	e7d0      	b.n	80027c0 <_dtoa_r+0x250>
 800281e:	3101      	adds	r1, #1
 8002820:	0052      	lsls	r2, r2, #1
 8002822:	e7d1      	b.n	80027c8 <_dtoa_r+0x258>
 8002824:	f3af 8000 	nop.w
 8002828:	636f4361 	.word	0x636f4361
 800282c:	3fd287a7 	.word	0x3fd287a7
 8002830:	8b60c8b3 	.word	0x8b60c8b3
 8002834:	3fc68a28 	.word	0x3fc68a28
 8002838:	509f79fb 	.word	0x509f79fb
 800283c:	3fd34413 	.word	0x3fd34413
 8002840:	080043b9 	.word	0x080043b9
 8002844:	080043d0 	.word	0x080043d0
 8002848:	7ff00000 	.word	0x7ff00000
 800284c:	08004389 	.word	0x08004389
 8002850:	3ff80000 	.word	0x3ff80000
 8002854:	08004520 	.word	0x08004520
 8002858:	08004428 	.word	0x08004428
 800285c:	080043b5 	.word	0x080043b5
 8002860:	08004388 	.word	0x08004388
 8002864:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002868:	6018      	str	r0, [r3, #0]
 800286a:	9b03      	ldr	r3, [sp, #12]
 800286c:	2b0e      	cmp	r3, #14
 800286e:	f200 80a1 	bhi.w	80029b4 <_dtoa_r+0x444>
 8002872:	2c00      	cmp	r4, #0
 8002874:	f000 809e 	beq.w	80029b4 <_dtoa_r+0x444>
 8002878:	2f00      	cmp	r7, #0
 800287a:	dd33      	ble.n	80028e4 <_dtoa_r+0x374>
 800287c:	4b9c      	ldr	r3, [pc, #624]	@ (8002af0 <_dtoa_r+0x580>)
 800287e:	f007 020f 	and.w	r2, r7, #15
 8002882:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002886:	ed93 7b00 	vldr	d7, [r3]
 800288a:	05f8      	lsls	r0, r7, #23
 800288c:	ed8d 7b0e 	vstr	d7, [sp, #56]	@ 0x38
 8002890:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002894:	d516      	bpl.n	80028c4 <_dtoa_r+0x354>
 8002896:	4b97      	ldr	r3, [pc, #604]	@ (8002af4 <_dtoa_r+0x584>)
 8002898:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 800289c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80028a0:	f7fd ffd4 	bl	800084c <__aeabi_ddiv>
 80028a4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80028a8:	f004 040f 	and.w	r4, r4, #15
 80028ac:	2603      	movs	r6, #3
 80028ae:	4d91      	ldr	r5, [pc, #580]	@ (8002af4 <_dtoa_r+0x584>)
 80028b0:	b954      	cbnz	r4, 80028c8 <_dtoa_r+0x358>
 80028b2:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 80028b6:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80028ba:	f7fd ffc7 	bl	800084c <__aeabi_ddiv>
 80028be:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80028c2:	e028      	b.n	8002916 <_dtoa_r+0x3a6>
 80028c4:	2602      	movs	r6, #2
 80028c6:	e7f2      	b.n	80028ae <_dtoa_r+0x33e>
 80028c8:	07e1      	lsls	r1, r4, #31
 80028ca:	d508      	bpl.n	80028de <_dtoa_r+0x36e>
 80028cc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 80028d0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80028d4:	f7fd fe90 	bl	80005f8 <__aeabi_dmul>
 80028d8:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 80028dc:	3601      	adds	r6, #1
 80028de:	1064      	asrs	r4, r4, #1
 80028e0:	3508      	adds	r5, #8
 80028e2:	e7e5      	b.n	80028b0 <_dtoa_r+0x340>
 80028e4:	f000 80af 	beq.w	8002a46 <_dtoa_r+0x4d6>
 80028e8:	427c      	negs	r4, r7
 80028ea:	4b81      	ldr	r3, [pc, #516]	@ (8002af0 <_dtoa_r+0x580>)
 80028ec:	4d81      	ldr	r5, [pc, #516]	@ (8002af4 <_dtoa_r+0x584>)
 80028ee:	f004 020f 	and.w	r2, r4, #15
 80028f2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80028f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028fa:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80028fe:	f7fd fe7b 	bl	80005f8 <__aeabi_dmul>
 8002902:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002906:	1124      	asrs	r4, r4, #4
 8002908:	2300      	movs	r3, #0
 800290a:	2602      	movs	r6, #2
 800290c:	2c00      	cmp	r4, #0
 800290e:	f040 808f 	bne.w	8002a30 <_dtoa_r+0x4c0>
 8002912:	2b00      	cmp	r3, #0
 8002914:	d1d3      	bne.n	80028be <_dtoa_r+0x34e>
 8002916:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8002918:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 800291c:	2b00      	cmp	r3, #0
 800291e:	f000 8094 	beq.w	8002a4a <_dtoa_r+0x4da>
 8002922:	4b75      	ldr	r3, [pc, #468]	@ (8002af8 <_dtoa_r+0x588>)
 8002924:	2200      	movs	r2, #0
 8002926:	4620      	mov	r0, r4
 8002928:	4629      	mov	r1, r5
 800292a:	f7fe f8d7 	bl	8000adc <__aeabi_dcmplt>
 800292e:	2800      	cmp	r0, #0
 8002930:	f000 808b 	beq.w	8002a4a <_dtoa_r+0x4da>
 8002934:	9b03      	ldr	r3, [sp, #12]
 8002936:	2b00      	cmp	r3, #0
 8002938:	f000 8087 	beq.w	8002a4a <_dtoa_r+0x4da>
 800293c:	f1bb 0f00 	cmp.w	fp, #0
 8002940:	dd34      	ble.n	80029ac <_dtoa_r+0x43c>
 8002942:	4620      	mov	r0, r4
 8002944:	4b6d      	ldr	r3, [pc, #436]	@ (8002afc <_dtoa_r+0x58c>)
 8002946:	2200      	movs	r2, #0
 8002948:	4629      	mov	r1, r5
 800294a:	f7fd fe55 	bl	80005f8 <__aeabi_dmul>
 800294e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002952:	f107 38ff 	add.w	r8, r7, #4294967295
 8002956:	3601      	adds	r6, #1
 8002958:	465c      	mov	r4, fp
 800295a:	4630      	mov	r0, r6
 800295c:	f7fd fde2 	bl	8000524 <__aeabi_i2d>
 8002960:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002964:	f7fd fe48 	bl	80005f8 <__aeabi_dmul>
 8002968:	4b65      	ldr	r3, [pc, #404]	@ (8002b00 <_dtoa_r+0x590>)
 800296a:	2200      	movs	r2, #0
 800296c:	f7fd fc8e 	bl	800028c <__adddf3>
 8002970:	4605      	mov	r5, r0
 8002972:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002976:	2c00      	cmp	r4, #0
 8002978:	d16a      	bne.n	8002a50 <_dtoa_r+0x4e0>
 800297a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800297e:	4b61      	ldr	r3, [pc, #388]	@ (8002b04 <_dtoa_r+0x594>)
 8002980:	2200      	movs	r2, #0
 8002982:	f7fd fc81 	bl	8000288 <__aeabi_dsub>
 8002986:	4602      	mov	r2, r0
 8002988:	460b      	mov	r3, r1
 800298a:	e9cd 2304 	strd	r2, r3, [sp, #16]
 800298e:	462a      	mov	r2, r5
 8002990:	4633      	mov	r3, r6
 8002992:	f7fe f8c1 	bl	8000b18 <__aeabi_dcmpgt>
 8002996:	2800      	cmp	r0, #0
 8002998:	f040 8298 	bne.w	8002ecc <_dtoa_r+0x95c>
 800299c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80029a0:	462a      	mov	r2, r5
 80029a2:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80029a6:	f7fe f899 	bl	8000adc <__aeabi_dcmplt>
 80029aa:	bb38      	cbnz	r0, 80029fc <_dtoa_r+0x48c>
 80029ac:	e9dd 340a 	ldrd	r3, r4, [sp, #40]	@ 0x28
 80029b0:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80029b4:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80029b6:	2b00      	cmp	r3, #0
 80029b8:	f2c0 8157 	blt.w	8002c6a <_dtoa_r+0x6fa>
 80029bc:	2f0e      	cmp	r7, #14
 80029be:	f300 8154 	bgt.w	8002c6a <_dtoa_r+0x6fa>
 80029c2:	4b4b      	ldr	r3, [pc, #300]	@ (8002af0 <_dtoa_r+0x580>)
 80029c4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80029c8:	ed93 7b00 	vldr	d7, [r3]
 80029cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80029ce:	2b00      	cmp	r3, #0
 80029d0:	ed8d 7b00 	vstr	d7, [sp]
 80029d4:	f280 80e5 	bge.w	8002ba2 <_dtoa_r+0x632>
 80029d8:	9b03      	ldr	r3, [sp, #12]
 80029da:	2b00      	cmp	r3, #0
 80029dc:	f300 80e1 	bgt.w	8002ba2 <_dtoa_r+0x632>
 80029e0:	d10c      	bne.n	80029fc <_dtoa_r+0x48c>
 80029e2:	4b48      	ldr	r3, [pc, #288]	@ (8002b04 <_dtoa_r+0x594>)
 80029e4:	2200      	movs	r2, #0
 80029e6:	ec51 0b17 	vmov	r0, r1, d7
 80029ea:	f7fd fe05 	bl	80005f8 <__aeabi_dmul>
 80029ee:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80029f2:	f7fe f887 	bl	8000b04 <__aeabi_dcmpge>
 80029f6:	2800      	cmp	r0, #0
 80029f8:	f000 8266 	beq.w	8002ec8 <_dtoa_r+0x958>
 80029fc:	2400      	movs	r4, #0
 80029fe:	4625      	mov	r5, r4
 8002a00:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8002a02:	4656      	mov	r6, sl
 8002a04:	ea6f 0803 	mvn.w	r8, r3
 8002a08:	2700      	movs	r7, #0
 8002a0a:	4621      	mov	r1, r4
 8002a0c:	4648      	mov	r0, r9
 8002a0e:	f000 fc09 	bl	8003224 <_Bfree>
 8002a12:	2d00      	cmp	r5, #0
 8002a14:	f000 80bd 	beq.w	8002b92 <_dtoa_r+0x622>
 8002a18:	b12f      	cbz	r7, 8002a26 <_dtoa_r+0x4b6>
 8002a1a:	42af      	cmp	r7, r5
 8002a1c:	d003      	beq.n	8002a26 <_dtoa_r+0x4b6>
 8002a1e:	4639      	mov	r1, r7
 8002a20:	4648      	mov	r0, r9
 8002a22:	f000 fbff 	bl	8003224 <_Bfree>
 8002a26:	4629      	mov	r1, r5
 8002a28:	4648      	mov	r0, r9
 8002a2a:	f000 fbfb 	bl	8003224 <_Bfree>
 8002a2e:	e0b0      	b.n	8002b92 <_dtoa_r+0x622>
 8002a30:	07e2      	lsls	r2, r4, #31
 8002a32:	d505      	bpl.n	8002a40 <_dtoa_r+0x4d0>
 8002a34:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002a38:	f7fd fdde 	bl	80005f8 <__aeabi_dmul>
 8002a3c:	3601      	adds	r6, #1
 8002a3e:	2301      	movs	r3, #1
 8002a40:	1064      	asrs	r4, r4, #1
 8002a42:	3508      	adds	r5, #8
 8002a44:	e762      	b.n	800290c <_dtoa_r+0x39c>
 8002a46:	2602      	movs	r6, #2
 8002a48:	e765      	b.n	8002916 <_dtoa_r+0x3a6>
 8002a4a:	9c03      	ldr	r4, [sp, #12]
 8002a4c:	46b8      	mov	r8, r7
 8002a4e:	e784      	b.n	800295a <_dtoa_r+0x3ea>
 8002a50:	4b27      	ldr	r3, [pc, #156]	@ (8002af0 <_dtoa_r+0x580>)
 8002a52:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8002a54:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002a58:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002a5c:	4454      	add	r4, sl
 8002a5e:	2900      	cmp	r1, #0
 8002a60:	d054      	beq.n	8002b0c <_dtoa_r+0x59c>
 8002a62:	4929      	ldr	r1, [pc, #164]	@ (8002b08 <_dtoa_r+0x598>)
 8002a64:	2000      	movs	r0, #0
 8002a66:	f7fd fef1 	bl	800084c <__aeabi_ddiv>
 8002a6a:	4633      	mov	r3, r6
 8002a6c:	462a      	mov	r2, r5
 8002a6e:	f7fd fc0b 	bl	8000288 <__aeabi_dsub>
 8002a72:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002a76:	4656      	mov	r6, sl
 8002a78:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002a7c:	f7fe f86c 	bl	8000b58 <__aeabi_d2iz>
 8002a80:	4605      	mov	r5, r0
 8002a82:	f7fd fd4f 	bl	8000524 <__aeabi_i2d>
 8002a86:	4602      	mov	r2, r0
 8002a88:	460b      	mov	r3, r1
 8002a8a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002a8e:	f7fd fbfb 	bl	8000288 <__aeabi_dsub>
 8002a92:	3530      	adds	r5, #48	@ 0x30
 8002a94:	4602      	mov	r2, r0
 8002a96:	460b      	mov	r3, r1
 8002a98:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002a9c:	f806 5b01 	strb.w	r5, [r6], #1
 8002aa0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002aa4:	f7fe f81a 	bl	8000adc <__aeabi_dcmplt>
 8002aa8:	2800      	cmp	r0, #0
 8002aaa:	d172      	bne.n	8002b92 <_dtoa_r+0x622>
 8002aac:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002ab0:	4911      	ldr	r1, [pc, #68]	@ (8002af8 <_dtoa_r+0x588>)
 8002ab2:	2000      	movs	r0, #0
 8002ab4:	f7fd fbe8 	bl	8000288 <__aeabi_dsub>
 8002ab8:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002abc:	f7fe f80e 	bl	8000adc <__aeabi_dcmplt>
 8002ac0:	2800      	cmp	r0, #0
 8002ac2:	f040 80b4 	bne.w	8002c2e <_dtoa_r+0x6be>
 8002ac6:	42a6      	cmp	r6, r4
 8002ac8:	f43f af70 	beq.w	80029ac <_dtoa_r+0x43c>
 8002acc:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002ad0:	4b0a      	ldr	r3, [pc, #40]	@ (8002afc <_dtoa_r+0x58c>)
 8002ad2:	2200      	movs	r2, #0
 8002ad4:	f7fd fd90 	bl	80005f8 <__aeabi_dmul>
 8002ad8:	4b08      	ldr	r3, [pc, #32]	@ (8002afc <_dtoa_r+0x58c>)
 8002ada:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002ade:	2200      	movs	r2, #0
 8002ae0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002ae4:	f7fd fd88 	bl	80005f8 <__aeabi_dmul>
 8002ae8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002aec:	e7c4      	b.n	8002a78 <_dtoa_r+0x508>
 8002aee:	bf00      	nop
 8002af0:	08004520 	.word	0x08004520
 8002af4:	080044f8 	.word	0x080044f8
 8002af8:	3ff00000 	.word	0x3ff00000
 8002afc:	40240000 	.word	0x40240000
 8002b00:	401c0000 	.word	0x401c0000
 8002b04:	40140000 	.word	0x40140000
 8002b08:	3fe00000 	.word	0x3fe00000
 8002b0c:	4631      	mov	r1, r6
 8002b0e:	4628      	mov	r0, r5
 8002b10:	f7fd fd72 	bl	80005f8 <__aeabi_dmul>
 8002b14:	e9cd 010e 	strd	r0, r1, [sp, #56]	@ 0x38
 8002b18:	9413      	str	r4, [sp, #76]	@ 0x4c
 8002b1a:	4656      	mov	r6, sl
 8002b1c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002b20:	f7fe f81a 	bl	8000b58 <__aeabi_d2iz>
 8002b24:	4605      	mov	r5, r0
 8002b26:	f7fd fcfd 	bl	8000524 <__aeabi_i2d>
 8002b2a:	4602      	mov	r2, r0
 8002b2c:	460b      	mov	r3, r1
 8002b2e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002b32:	f7fd fba9 	bl	8000288 <__aeabi_dsub>
 8002b36:	3530      	adds	r5, #48	@ 0x30
 8002b38:	f806 5b01 	strb.w	r5, [r6], #1
 8002b3c:	4602      	mov	r2, r0
 8002b3e:	460b      	mov	r3, r1
 8002b40:	42a6      	cmp	r6, r4
 8002b42:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8002b46:	f04f 0200 	mov.w	r2, #0
 8002b4a:	d124      	bne.n	8002b96 <_dtoa_r+0x626>
 8002b4c:	4baf      	ldr	r3, [pc, #700]	@ (8002e0c <_dtoa_r+0x89c>)
 8002b4e:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	@ 0x38
 8002b52:	f7fd fb9b 	bl	800028c <__adddf3>
 8002b56:	4602      	mov	r2, r0
 8002b58:	460b      	mov	r3, r1
 8002b5a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002b5e:	f7fd ffdb 	bl	8000b18 <__aeabi_dcmpgt>
 8002b62:	2800      	cmp	r0, #0
 8002b64:	d163      	bne.n	8002c2e <_dtoa_r+0x6be>
 8002b66:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	@ 0x38
 8002b6a:	49a8      	ldr	r1, [pc, #672]	@ (8002e0c <_dtoa_r+0x89c>)
 8002b6c:	2000      	movs	r0, #0
 8002b6e:	f7fd fb8b 	bl	8000288 <__aeabi_dsub>
 8002b72:	4602      	mov	r2, r0
 8002b74:	460b      	mov	r3, r1
 8002b76:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002b7a:	f7fd ffaf 	bl	8000adc <__aeabi_dcmplt>
 8002b7e:	2800      	cmp	r0, #0
 8002b80:	f43f af14 	beq.w	80029ac <_dtoa_r+0x43c>
 8002b84:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8002b86:	1e73      	subs	r3, r6, #1
 8002b88:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002b8a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002b8e:	2b30      	cmp	r3, #48	@ 0x30
 8002b90:	d0f8      	beq.n	8002b84 <_dtoa_r+0x614>
 8002b92:	4647      	mov	r7, r8
 8002b94:	e03b      	b.n	8002c0e <_dtoa_r+0x69e>
 8002b96:	4b9e      	ldr	r3, [pc, #632]	@ (8002e10 <_dtoa_r+0x8a0>)
 8002b98:	f7fd fd2e 	bl	80005f8 <__aeabi_dmul>
 8002b9c:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002ba0:	e7bc      	b.n	8002b1c <_dtoa_r+0x5ac>
 8002ba2:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8002ba6:	4656      	mov	r6, sl
 8002ba8:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002bac:	4620      	mov	r0, r4
 8002bae:	4629      	mov	r1, r5
 8002bb0:	f7fd fe4c 	bl	800084c <__aeabi_ddiv>
 8002bb4:	f7fd ffd0 	bl	8000b58 <__aeabi_d2iz>
 8002bb8:	4680      	mov	r8, r0
 8002bba:	f7fd fcb3 	bl	8000524 <__aeabi_i2d>
 8002bbe:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002bc2:	f7fd fd19 	bl	80005f8 <__aeabi_dmul>
 8002bc6:	4602      	mov	r2, r0
 8002bc8:	460b      	mov	r3, r1
 8002bca:	4620      	mov	r0, r4
 8002bcc:	4629      	mov	r1, r5
 8002bce:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002bd2:	f7fd fb59 	bl	8000288 <__aeabi_dsub>
 8002bd6:	f806 4b01 	strb.w	r4, [r6], #1
 8002bda:	9d03      	ldr	r5, [sp, #12]
 8002bdc:	eba6 040a 	sub.w	r4, r6, sl
 8002be0:	42a5      	cmp	r5, r4
 8002be2:	4602      	mov	r2, r0
 8002be4:	460b      	mov	r3, r1
 8002be6:	d133      	bne.n	8002c50 <_dtoa_r+0x6e0>
 8002be8:	f7fd fb50 	bl	800028c <__adddf3>
 8002bec:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002bf0:	4604      	mov	r4, r0
 8002bf2:	460d      	mov	r5, r1
 8002bf4:	f7fd ff90 	bl	8000b18 <__aeabi_dcmpgt>
 8002bf8:	b9c0      	cbnz	r0, 8002c2c <_dtoa_r+0x6bc>
 8002bfa:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002bfe:	4620      	mov	r0, r4
 8002c00:	4629      	mov	r1, r5
 8002c02:	f7fd ff61 	bl	8000ac8 <__aeabi_dcmpeq>
 8002c06:	b110      	cbz	r0, 8002c0e <_dtoa_r+0x69e>
 8002c08:	f018 0f01 	tst.w	r8, #1
 8002c0c:	d10e      	bne.n	8002c2c <_dtoa_r+0x6bc>
 8002c0e:	9902      	ldr	r1, [sp, #8]
 8002c10:	4648      	mov	r0, r9
 8002c12:	f000 fb07 	bl	8003224 <_Bfree>
 8002c16:	2300      	movs	r3, #0
 8002c18:	7033      	strb	r3, [r6, #0]
 8002c1a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8002c1c:	3701      	adds	r7, #1
 8002c1e:	601f      	str	r7, [r3, #0]
 8002c20:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	f000 824b 	beq.w	80030be <_dtoa_r+0xb4e>
 8002c28:	601e      	str	r6, [r3, #0]
 8002c2a:	e248      	b.n	80030be <_dtoa_r+0xb4e>
 8002c2c:	46b8      	mov	r8, r7
 8002c2e:	4633      	mov	r3, r6
 8002c30:	461e      	mov	r6, r3
 8002c32:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002c36:	2a39      	cmp	r2, #57	@ 0x39
 8002c38:	d106      	bne.n	8002c48 <_dtoa_r+0x6d8>
 8002c3a:	459a      	cmp	sl, r3
 8002c3c:	d1f8      	bne.n	8002c30 <_dtoa_r+0x6c0>
 8002c3e:	2230      	movs	r2, #48	@ 0x30
 8002c40:	f108 0801 	add.w	r8, r8, #1
 8002c44:	f88a 2000 	strb.w	r2, [sl]
 8002c48:	781a      	ldrb	r2, [r3, #0]
 8002c4a:	3201      	adds	r2, #1
 8002c4c:	701a      	strb	r2, [r3, #0]
 8002c4e:	e7a0      	b.n	8002b92 <_dtoa_r+0x622>
 8002c50:	4b6f      	ldr	r3, [pc, #444]	@ (8002e10 <_dtoa_r+0x8a0>)
 8002c52:	2200      	movs	r2, #0
 8002c54:	f7fd fcd0 	bl	80005f8 <__aeabi_dmul>
 8002c58:	2200      	movs	r2, #0
 8002c5a:	2300      	movs	r3, #0
 8002c5c:	4604      	mov	r4, r0
 8002c5e:	460d      	mov	r5, r1
 8002c60:	f7fd ff32 	bl	8000ac8 <__aeabi_dcmpeq>
 8002c64:	2800      	cmp	r0, #0
 8002c66:	d09f      	beq.n	8002ba8 <_dtoa_r+0x638>
 8002c68:	e7d1      	b.n	8002c0e <_dtoa_r+0x69e>
 8002c6a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002c6c:	2a00      	cmp	r2, #0
 8002c6e:	f000 80ea 	beq.w	8002e46 <_dtoa_r+0x8d6>
 8002c72:	9a07      	ldr	r2, [sp, #28]
 8002c74:	2a01      	cmp	r2, #1
 8002c76:	f300 80cd 	bgt.w	8002e14 <_dtoa_r+0x8a4>
 8002c7a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8002c7c:	2a00      	cmp	r2, #0
 8002c7e:	f000 80c1 	beq.w	8002e04 <_dtoa_r+0x894>
 8002c82:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002c86:	9c08      	ldr	r4, [sp, #32]
 8002c88:	9e00      	ldr	r6, [sp, #0]
 8002c8a:	9a00      	ldr	r2, [sp, #0]
 8002c8c:	441a      	add	r2, r3
 8002c8e:	9200      	str	r2, [sp, #0]
 8002c90:	9a06      	ldr	r2, [sp, #24]
 8002c92:	2101      	movs	r1, #1
 8002c94:	441a      	add	r2, r3
 8002c96:	4648      	mov	r0, r9
 8002c98:	9206      	str	r2, [sp, #24]
 8002c9a:	f000 fb77 	bl	800338c <__i2b>
 8002c9e:	4605      	mov	r5, r0
 8002ca0:	b166      	cbz	r6, 8002cbc <_dtoa_r+0x74c>
 8002ca2:	9b06      	ldr	r3, [sp, #24]
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	dd09      	ble.n	8002cbc <_dtoa_r+0x74c>
 8002ca8:	42b3      	cmp	r3, r6
 8002caa:	9a00      	ldr	r2, [sp, #0]
 8002cac:	bfa8      	it	ge
 8002cae:	4633      	movge	r3, r6
 8002cb0:	1ad2      	subs	r2, r2, r3
 8002cb2:	9200      	str	r2, [sp, #0]
 8002cb4:	9a06      	ldr	r2, [sp, #24]
 8002cb6:	1af6      	subs	r6, r6, r3
 8002cb8:	1ad3      	subs	r3, r2, r3
 8002cba:	9306      	str	r3, [sp, #24]
 8002cbc:	9b08      	ldr	r3, [sp, #32]
 8002cbe:	b30b      	cbz	r3, 8002d04 <_dtoa_r+0x794>
 8002cc0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002cc2:	2b00      	cmp	r3, #0
 8002cc4:	f000 80c6 	beq.w	8002e54 <_dtoa_r+0x8e4>
 8002cc8:	2c00      	cmp	r4, #0
 8002cca:	f000 80c0 	beq.w	8002e4e <_dtoa_r+0x8de>
 8002cce:	4629      	mov	r1, r5
 8002cd0:	4622      	mov	r2, r4
 8002cd2:	4648      	mov	r0, r9
 8002cd4:	f000 fc12 	bl	80034fc <__pow5mult>
 8002cd8:	9a02      	ldr	r2, [sp, #8]
 8002cda:	4601      	mov	r1, r0
 8002cdc:	4605      	mov	r5, r0
 8002cde:	4648      	mov	r0, r9
 8002ce0:	f000 fb6a 	bl	80033b8 <__multiply>
 8002ce4:	9902      	ldr	r1, [sp, #8]
 8002ce6:	4680      	mov	r8, r0
 8002ce8:	4648      	mov	r0, r9
 8002cea:	f000 fa9b 	bl	8003224 <_Bfree>
 8002cee:	9b08      	ldr	r3, [sp, #32]
 8002cf0:	1b1b      	subs	r3, r3, r4
 8002cf2:	9308      	str	r3, [sp, #32]
 8002cf4:	f000 80b1 	beq.w	8002e5a <_dtoa_r+0x8ea>
 8002cf8:	9a08      	ldr	r2, [sp, #32]
 8002cfa:	4641      	mov	r1, r8
 8002cfc:	4648      	mov	r0, r9
 8002cfe:	f000 fbfd 	bl	80034fc <__pow5mult>
 8002d02:	9002      	str	r0, [sp, #8]
 8002d04:	2101      	movs	r1, #1
 8002d06:	4648      	mov	r0, r9
 8002d08:	f000 fb40 	bl	800338c <__i2b>
 8002d0c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002d0e:	4604      	mov	r4, r0
 8002d10:	2b00      	cmp	r3, #0
 8002d12:	f000 81d8 	beq.w	80030c6 <_dtoa_r+0xb56>
 8002d16:	461a      	mov	r2, r3
 8002d18:	4601      	mov	r1, r0
 8002d1a:	4648      	mov	r0, r9
 8002d1c:	f000 fbee 	bl	80034fc <__pow5mult>
 8002d20:	9b07      	ldr	r3, [sp, #28]
 8002d22:	2b01      	cmp	r3, #1
 8002d24:	4604      	mov	r4, r0
 8002d26:	f300 809f 	bgt.w	8002e68 <_dtoa_r+0x8f8>
 8002d2a:	9b04      	ldr	r3, [sp, #16]
 8002d2c:	2b00      	cmp	r3, #0
 8002d2e:	f040 8097 	bne.w	8002e60 <_dtoa_r+0x8f0>
 8002d32:	9b05      	ldr	r3, [sp, #20]
 8002d34:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002d38:	2b00      	cmp	r3, #0
 8002d3a:	f040 8093 	bne.w	8002e64 <_dtoa_r+0x8f4>
 8002d3e:	9b05      	ldr	r3, [sp, #20]
 8002d40:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002d44:	0d1b      	lsrs	r3, r3, #20
 8002d46:	051b      	lsls	r3, r3, #20
 8002d48:	b133      	cbz	r3, 8002d58 <_dtoa_r+0x7e8>
 8002d4a:	9b00      	ldr	r3, [sp, #0]
 8002d4c:	3301      	adds	r3, #1
 8002d4e:	9300      	str	r3, [sp, #0]
 8002d50:	9b06      	ldr	r3, [sp, #24]
 8002d52:	3301      	adds	r3, #1
 8002d54:	9306      	str	r3, [sp, #24]
 8002d56:	2301      	movs	r3, #1
 8002d58:	9308      	str	r3, [sp, #32]
 8002d5a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002d5c:	2b00      	cmp	r3, #0
 8002d5e:	f000 81b8 	beq.w	80030d2 <_dtoa_r+0xb62>
 8002d62:	6923      	ldr	r3, [r4, #16]
 8002d64:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002d68:	6918      	ldr	r0, [r3, #16]
 8002d6a:	f000 fac3 	bl	80032f4 <__hi0bits>
 8002d6e:	f1c0 0020 	rsb	r0, r0, #32
 8002d72:	9b06      	ldr	r3, [sp, #24]
 8002d74:	4418      	add	r0, r3
 8002d76:	f010 001f 	ands.w	r0, r0, #31
 8002d7a:	f000 8082 	beq.w	8002e82 <_dtoa_r+0x912>
 8002d7e:	f1c0 0320 	rsb	r3, r0, #32
 8002d82:	2b04      	cmp	r3, #4
 8002d84:	dd73      	ble.n	8002e6e <_dtoa_r+0x8fe>
 8002d86:	9b00      	ldr	r3, [sp, #0]
 8002d88:	f1c0 001c 	rsb	r0, r0, #28
 8002d8c:	4403      	add	r3, r0
 8002d8e:	9300      	str	r3, [sp, #0]
 8002d90:	9b06      	ldr	r3, [sp, #24]
 8002d92:	4403      	add	r3, r0
 8002d94:	4406      	add	r6, r0
 8002d96:	9306      	str	r3, [sp, #24]
 8002d98:	9b00      	ldr	r3, [sp, #0]
 8002d9a:	2b00      	cmp	r3, #0
 8002d9c:	dd05      	ble.n	8002daa <_dtoa_r+0x83a>
 8002d9e:	9902      	ldr	r1, [sp, #8]
 8002da0:	461a      	mov	r2, r3
 8002da2:	4648      	mov	r0, r9
 8002da4:	f000 fc04 	bl	80035b0 <__lshift>
 8002da8:	9002      	str	r0, [sp, #8]
 8002daa:	9b06      	ldr	r3, [sp, #24]
 8002dac:	2b00      	cmp	r3, #0
 8002dae:	dd05      	ble.n	8002dbc <_dtoa_r+0x84c>
 8002db0:	4621      	mov	r1, r4
 8002db2:	461a      	mov	r2, r3
 8002db4:	4648      	mov	r0, r9
 8002db6:	f000 fbfb 	bl	80035b0 <__lshift>
 8002dba:	4604      	mov	r4, r0
 8002dbc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8002dbe:	2b00      	cmp	r3, #0
 8002dc0:	d061      	beq.n	8002e86 <_dtoa_r+0x916>
 8002dc2:	9802      	ldr	r0, [sp, #8]
 8002dc4:	4621      	mov	r1, r4
 8002dc6:	f000 fc5f 	bl	8003688 <__mcmp>
 8002dca:	2800      	cmp	r0, #0
 8002dcc:	da5b      	bge.n	8002e86 <_dtoa_r+0x916>
 8002dce:	2300      	movs	r3, #0
 8002dd0:	9902      	ldr	r1, [sp, #8]
 8002dd2:	220a      	movs	r2, #10
 8002dd4:	4648      	mov	r0, r9
 8002dd6:	f000 fa47 	bl	8003268 <__multadd>
 8002dda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ddc:	9002      	str	r0, [sp, #8]
 8002dde:	f107 38ff 	add.w	r8, r7, #4294967295
 8002de2:	2b00      	cmp	r3, #0
 8002de4:	f000 8177 	beq.w	80030d6 <_dtoa_r+0xb66>
 8002de8:	4629      	mov	r1, r5
 8002dea:	2300      	movs	r3, #0
 8002dec:	220a      	movs	r2, #10
 8002dee:	4648      	mov	r0, r9
 8002df0:	f000 fa3a 	bl	8003268 <__multadd>
 8002df4:	f1bb 0f00 	cmp.w	fp, #0
 8002df8:	4605      	mov	r5, r0
 8002dfa:	dc6f      	bgt.n	8002edc <_dtoa_r+0x96c>
 8002dfc:	9b07      	ldr	r3, [sp, #28]
 8002dfe:	2b02      	cmp	r3, #2
 8002e00:	dc49      	bgt.n	8002e96 <_dtoa_r+0x926>
 8002e02:	e06b      	b.n	8002edc <_dtoa_r+0x96c>
 8002e04:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002e06:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002e0a:	e73c      	b.n	8002c86 <_dtoa_r+0x716>
 8002e0c:	3fe00000 	.word	0x3fe00000
 8002e10:	40240000 	.word	0x40240000
 8002e14:	9b03      	ldr	r3, [sp, #12]
 8002e16:	1e5c      	subs	r4, r3, #1
 8002e18:	9b08      	ldr	r3, [sp, #32]
 8002e1a:	42a3      	cmp	r3, r4
 8002e1c:	db09      	blt.n	8002e32 <_dtoa_r+0x8c2>
 8002e1e:	1b1c      	subs	r4, r3, r4
 8002e20:	9b03      	ldr	r3, [sp, #12]
 8002e22:	2b00      	cmp	r3, #0
 8002e24:	f6bf af30 	bge.w	8002c88 <_dtoa_r+0x718>
 8002e28:	9b00      	ldr	r3, [sp, #0]
 8002e2a:	9a03      	ldr	r2, [sp, #12]
 8002e2c:	1a9e      	subs	r6, r3, r2
 8002e2e:	2300      	movs	r3, #0
 8002e30:	e72b      	b.n	8002c8a <_dtoa_r+0x71a>
 8002e32:	9b08      	ldr	r3, [sp, #32]
 8002e34:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8002e36:	9408      	str	r4, [sp, #32]
 8002e38:	1ae3      	subs	r3, r4, r3
 8002e3a:	441a      	add	r2, r3
 8002e3c:	9e00      	ldr	r6, [sp, #0]
 8002e3e:	9b03      	ldr	r3, [sp, #12]
 8002e40:	920d      	str	r2, [sp, #52]	@ 0x34
 8002e42:	2400      	movs	r4, #0
 8002e44:	e721      	b.n	8002c8a <_dtoa_r+0x71a>
 8002e46:	9c08      	ldr	r4, [sp, #32]
 8002e48:	9e00      	ldr	r6, [sp, #0]
 8002e4a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8002e4c:	e728      	b.n	8002ca0 <_dtoa_r+0x730>
 8002e4e:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8002e52:	e751      	b.n	8002cf8 <_dtoa_r+0x788>
 8002e54:	9a08      	ldr	r2, [sp, #32]
 8002e56:	9902      	ldr	r1, [sp, #8]
 8002e58:	e750      	b.n	8002cfc <_dtoa_r+0x78c>
 8002e5a:	f8cd 8008 	str.w	r8, [sp, #8]
 8002e5e:	e751      	b.n	8002d04 <_dtoa_r+0x794>
 8002e60:	2300      	movs	r3, #0
 8002e62:	e779      	b.n	8002d58 <_dtoa_r+0x7e8>
 8002e64:	9b04      	ldr	r3, [sp, #16]
 8002e66:	e777      	b.n	8002d58 <_dtoa_r+0x7e8>
 8002e68:	2300      	movs	r3, #0
 8002e6a:	9308      	str	r3, [sp, #32]
 8002e6c:	e779      	b.n	8002d62 <_dtoa_r+0x7f2>
 8002e6e:	d093      	beq.n	8002d98 <_dtoa_r+0x828>
 8002e70:	9a00      	ldr	r2, [sp, #0]
 8002e72:	331c      	adds	r3, #28
 8002e74:	441a      	add	r2, r3
 8002e76:	9200      	str	r2, [sp, #0]
 8002e78:	9a06      	ldr	r2, [sp, #24]
 8002e7a:	441a      	add	r2, r3
 8002e7c:	441e      	add	r6, r3
 8002e7e:	9206      	str	r2, [sp, #24]
 8002e80:	e78a      	b.n	8002d98 <_dtoa_r+0x828>
 8002e82:	4603      	mov	r3, r0
 8002e84:	e7f4      	b.n	8002e70 <_dtoa_r+0x900>
 8002e86:	9b03      	ldr	r3, [sp, #12]
 8002e88:	2b00      	cmp	r3, #0
 8002e8a:	46b8      	mov	r8, r7
 8002e8c:	dc20      	bgt.n	8002ed0 <_dtoa_r+0x960>
 8002e8e:	469b      	mov	fp, r3
 8002e90:	9b07      	ldr	r3, [sp, #28]
 8002e92:	2b02      	cmp	r3, #2
 8002e94:	dd1e      	ble.n	8002ed4 <_dtoa_r+0x964>
 8002e96:	f1bb 0f00 	cmp.w	fp, #0
 8002e9a:	f47f adb1 	bne.w	8002a00 <_dtoa_r+0x490>
 8002e9e:	4621      	mov	r1, r4
 8002ea0:	465b      	mov	r3, fp
 8002ea2:	2205      	movs	r2, #5
 8002ea4:	4648      	mov	r0, r9
 8002ea6:	f000 f9df 	bl	8003268 <__multadd>
 8002eaa:	4601      	mov	r1, r0
 8002eac:	4604      	mov	r4, r0
 8002eae:	9802      	ldr	r0, [sp, #8]
 8002eb0:	f000 fbea 	bl	8003688 <__mcmp>
 8002eb4:	2800      	cmp	r0, #0
 8002eb6:	f77f ada3 	ble.w	8002a00 <_dtoa_r+0x490>
 8002eba:	4656      	mov	r6, sl
 8002ebc:	2331      	movs	r3, #49	@ 0x31
 8002ebe:	f806 3b01 	strb.w	r3, [r6], #1
 8002ec2:	f108 0801 	add.w	r8, r8, #1
 8002ec6:	e59f      	b.n	8002a08 <_dtoa_r+0x498>
 8002ec8:	9c03      	ldr	r4, [sp, #12]
 8002eca:	46b8      	mov	r8, r7
 8002ecc:	4625      	mov	r5, r4
 8002ece:	e7f4      	b.n	8002eba <_dtoa_r+0x94a>
 8002ed0:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8002ed4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ed6:	2b00      	cmp	r3, #0
 8002ed8:	f000 8101 	beq.w	80030de <_dtoa_r+0xb6e>
 8002edc:	2e00      	cmp	r6, #0
 8002ede:	dd05      	ble.n	8002eec <_dtoa_r+0x97c>
 8002ee0:	4629      	mov	r1, r5
 8002ee2:	4632      	mov	r2, r6
 8002ee4:	4648      	mov	r0, r9
 8002ee6:	f000 fb63 	bl	80035b0 <__lshift>
 8002eea:	4605      	mov	r5, r0
 8002eec:	9b08      	ldr	r3, [sp, #32]
 8002eee:	2b00      	cmp	r3, #0
 8002ef0:	d05c      	beq.n	8002fac <_dtoa_r+0xa3c>
 8002ef2:	6869      	ldr	r1, [r5, #4]
 8002ef4:	4648      	mov	r0, r9
 8002ef6:	f000 f955 	bl	80031a4 <_Balloc>
 8002efa:	4606      	mov	r6, r0
 8002efc:	b928      	cbnz	r0, 8002f0a <_dtoa_r+0x99a>
 8002efe:	4b82      	ldr	r3, [pc, #520]	@ (8003108 <_dtoa_r+0xb98>)
 8002f00:	4602      	mov	r2, r0
 8002f02:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002f06:	f7ff bb4a 	b.w	800259e <_dtoa_r+0x2e>
 8002f0a:	692a      	ldr	r2, [r5, #16]
 8002f0c:	3202      	adds	r2, #2
 8002f0e:	0092      	lsls	r2, r2, #2
 8002f10:	f105 010c 	add.w	r1, r5, #12
 8002f14:	300c      	adds	r0, #12
 8002f16:	f7ff fa94 	bl	8002442 <memcpy>
 8002f1a:	2201      	movs	r2, #1
 8002f1c:	4631      	mov	r1, r6
 8002f1e:	4648      	mov	r0, r9
 8002f20:	f000 fb46 	bl	80035b0 <__lshift>
 8002f24:	f10a 0301 	add.w	r3, sl, #1
 8002f28:	9300      	str	r3, [sp, #0]
 8002f2a:	eb0a 030b 	add.w	r3, sl, fp
 8002f2e:	9308      	str	r3, [sp, #32]
 8002f30:	9b04      	ldr	r3, [sp, #16]
 8002f32:	f003 0301 	and.w	r3, r3, #1
 8002f36:	462f      	mov	r7, r5
 8002f38:	9306      	str	r3, [sp, #24]
 8002f3a:	4605      	mov	r5, r0
 8002f3c:	9b00      	ldr	r3, [sp, #0]
 8002f3e:	9802      	ldr	r0, [sp, #8]
 8002f40:	4621      	mov	r1, r4
 8002f42:	f103 3bff 	add.w	fp, r3, #4294967295
 8002f46:	f7ff fa8a 	bl	800245e <quorem>
 8002f4a:	4603      	mov	r3, r0
 8002f4c:	3330      	adds	r3, #48	@ 0x30
 8002f4e:	9003      	str	r0, [sp, #12]
 8002f50:	4639      	mov	r1, r7
 8002f52:	9802      	ldr	r0, [sp, #8]
 8002f54:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f56:	f000 fb97 	bl	8003688 <__mcmp>
 8002f5a:	462a      	mov	r2, r5
 8002f5c:	9004      	str	r0, [sp, #16]
 8002f5e:	4621      	mov	r1, r4
 8002f60:	4648      	mov	r0, r9
 8002f62:	f000 fbad 	bl	80036c0 <__mdiff>
 8002f66:	68c2      	ldr	r2, [r0, #12]
 8002f68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f6a:	4606      	mov	r6, r0
 8002f6c:	bb02      	cbnz	r2, 8002fb0 <_dtoa_r+0xa40>
 8002f6e:	4601      	mov	r1, r0
 8002f70:	9802      	ldr	r0, [sp, #8]
 8002f72:	f000 fb89 	bl	8003688 <__mcmp>
 8002f76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f78:	4602      	mov	r2, r0
 8002f7a:	4631      	mov	r1, r6
 8002f7c:	4648      	mov	r0, r9
 8002f7e:	920c      	str	r2, [sp, #48]	@ 0x30
 8002f80:	9309      	str	r3, [sp, #36]	@ 0x24
 8002f82:	f000 f94f 	bl	8003224 <_Bfree>
 8002f86:	9b07      	ldr	r3, [sp, #28]
 8002f88:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8002f8a:	9e00      	ldr	r6, [sp, #0]
 8002f8c:	ea42 0103 	orr.w	r1, r2, r3
 8002f90:	9b06      	ldr	r3, [sp, #24]
 8002f92:	4319      	orrs	r1, r3
 8002f94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f96:	d10d      	bne.n	8002fb4 <_dtoa_r+0xa44>
 8002f98:	2b39      	cmp	r3, #57	@ 0x39
 8002f9a:	d027      	beq.n	8002fec <_dtoa_r+0xa7c>
 8002f9c:	9a04      	ldr	r2, [sp, #16]
 8002f9e:	2a00      	cmp	r2, #0
 8002fa0:	dd01      	ble.n	8002fa6 <_dtoa_r+0xa36>
 8002fa2:	9b03      	ldr	r3, [sp, #12]
 8002fa4:	3331      	adds	r3, #49	@ 0x31
 8002fa6:	f88b 3000 	strb.w	r3, [fp]
 8002faa:	e52e      	b.n	8002a0a <_dtoa_r+0x49a>
 8002fac:	4628      	mov	r0, r5
 8002fae:	e7b9      	b.n	8002f24 <_dtoa_r+0x9b4>
 8002fb0:	2201      	movs	r2, #1
 8002fb2:	e7e2      	b.n	8002f7a <_dtoa_r+0xa0a>
 8002fb4:	9904      	ldr	r1, [sp, #16]
 8002fb6:	2900      	cmp	r1, #0
 8002fb8:	db04      	blt.n	8002fc4 <_dtoa_r+0xa54>
 8002fba:	9807      	ldr	r0, [sp, #28]
 8002fbc:	4301      	orrs	r1, r0
 8002fbe:	9806      	ldr	r0, [sp, #24]
 8002fc0:	4301      	orrs	r1, r0
 8002fc2:	d120      	bne.n	8003006 <_dtoa_r+0xa96>
 8002fc4:	2a00      	cmp	r2, #0
 8002fc6:	ddee      	ble.n	8002fa6 <_dtoa_r+0xa36>
 8002fc8:	9902      	ldr	r1, [sp, #8]
 8002fca:	9300      	str	r3, [sp, #0]
 8002fcc:	2201      	movs	r2, #1
 8002fce:	4648      	mov	r0, r9
 8002fd0:	f000 faee 	bl	80035b0 <__lshift>
 8002fd4:	4621      	mov	r1, r4
 8002fd6:	9002      	str	r0, [sp, #8]
 8002fd8:	f000 fb56 	bl	8003688 <__mcmp>
 8002fdc:	2800      	cmp	r0, #0
 8002fde:	9b00      	ldr	r3, [sp, #0]
 8002fe0:	dc02      	bgt.n	8002fe8 <_dtoa_r+0xa78>
 8002fe2:	d1e0      	bne.n	8002fa6 <_dtoa_r+0xa36>
 8002fe4:	07da      	lsls	r2, r3, #31
 8002fe6:	d5de      	bpl.n	8002fa6 <_dtoa_r+0xa36>
 8002fe8:	2b39      	cmp	r3, #57	@ 0x39
 8002fea:	d1da      	bne.n	8002fa2 <_dtoa_r+0xa32>
 8002fec:	2339      	movs	r3, #57	@ 0x39
 8002fee:	f88b 3000 	strb.w	r3, [fp]
 8002ff2:	4633      	mov	r3, r6
 8002ff4:	461e      	mov	r6, r3
 8002ff6:	3b01      	subs	r3, #1
 8002ff8:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8002ffc:	2a39      	cmp	r2, #57	@ 0x39
 8002ffe:	d04e      	beq.n	800309e <_dtoa_r+0xb2e>
 8003000:	3201      	adds	r2, #1
 8003002:	701a      	strb	r2, [r3, #0]
 8003004:	e501      	b.n	8002a0a <_dtoa_r+0x49a>
 8003006:	2a00      	cmp	r2, #0
 8003008:	dd03      	ble.n	8003012 <_dtoa_r+0xaa2>
 800300a:	2b39      	cmp	r3, #57	@ 0x39
 800300c:	d0ee      	beq.n	8002fec <_dtoa_r+0xa7c>
 800300e:	3301      	adds	r3, #1
 8003010:	e7c9      	b.n	8002fa6 <_dtoa_r+0xa36>
 8003012:	9a00      	ldr	r2, [sp, #0]
 8003014:	9908      	ldr	r1, [sp, #32]
 8003016:	f802 3c01 	strb.w	r3, [r2, #-1]
 800301a:	428a      	cmp	r2, r1
 800301c:	d028      	beq.n	8003070 <_dtoa_r+0xb00>
 800301e:	9902      	ldr	r1, [sp, #8]
 8003020:	2300      	movs	r3, #0
 8003022:	220a      	movs	r2, #10
 8003024:	4648      	mov	r0, r9
 8003026:	f000 f91f 	bl	8003268 <__multadd>
 800302a:	42af      	cmp	r7, r5
 800302c:	9002      	str	r0, [sp, #8]
 800302e:	f04f 0300 	mov.w	r3, #0
 8003032:	f04f 020a 	mov.w	r2, #10
 8003036:	4639      	mov	r1, r7
 8003038:	4648      	mov	r0, r9
 800303a:	d107      	bne.n	800304c <_dtoa_r+0xadc>
 800303c:	f000 f914 	bl	8003268 <__multadd>
 8003040:	4607      	mov	r7, r0
 8003042:	4605      	mov	r5, r0
 8003044:	9b00      	ldr	r3, [sp, #0]
 8003046:	3301      	adds	r3, #1
 8003048:	9300      	str	r3, [sp, #0]
 800304a:	e777      	b.n	8002f3c <_dtoa_r+0x9cc>
 800304c:	f000 f90c 	bl	8003268 <__multadd>
 8003050:	4629      	mov	r1, r5
 8003052:	4607      	mov	r7, r0
 8003054:	2300      	movs	r3, #0
 8003056:	220a      	movs	r2, #10
 8003058:	4648      	mov	r0, r9
 800305a:	f000 f905 	bl	8003268 <__multadd>
 800305e:	4605      	mov	r5, r0
 8003060:	e7f0      	b.n	8003044 <_dtoa_r+0xad4>
 8003062:	f1bb 0f00 	cmp.w	fp, #0
 8003066:	bfcc      	ite	gt
 8003068:	465e      	movgt	r6, fp
 800306a:	2601      	movle	r6, #1
 800306c:	4456      	add	r6, sl
 800306e:	2700      	movs	r7, #0
 8003070:	9902      	ldr	r1, [sp, #8]
 8003072:	9300      	str	r3, [sp, #0]
 8003074:	2201      	movs	r2, #1
 8003076:	4648      	mov	r0, r9
 8003078:	f000 fa9a 	bl	80035b0 <__lshift>
 800307c:	4621      	mov	r1, r4
 800307e:	9002      	str	r0, [sp, #8]
 8003080:	f000 fb02 	bl	8003688 <__mcmp>
 8003084:	2800      	cmp	r0, #0
 8003086:	dcb4      	bgt.n	8002ff2 <_dtoa_r+0xa82>
 8003088:	d102      	bne.n	8003090 <_dtoa_r+0xb20>
 800308a:	9b00      	ldr	r3, [sp, #0]
 800308c:	07db      	lsls	r3, r3, #31
 800308e:	d4b0      	bmi.n	8002ff2 <_dtoa_r+0xa82>
 8003090:	4633      	mov	r3, r6
 8003092:	461e      	mov	r6, r3
 8003094:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003098:	2a30      	cmp	r2, #48	@ 0x30
 800309a:	d0fa      	beq.n	8003092 <_dtoa_r+0xb22>
 800309c:	e4b5      	b.n	8002a0a <_dtoa_r+0x49a>
 800309e:	459a      	cmp	sl, r3
 80030a0:	d1a8      	bne.n	8002ff4 <_dtoa_r+0xa84>
 80030a2:	2331      	movs	r3, #49	@ 0x31
 80030a4:	f108 0801 	add.w	r8, r8, #1
 80030a8:	f88a 3000 	strb.w	r3, [sl]
 80030ac:	e4ad      	b.n	8002a0a <_dtoa_r+0x49a>
 80030ae:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80030b0:	f8df a058 	ldr.w	sl, [pc, #88]	@ 800310c <_dtoa_r+0xb9c>
 80030b4:	b11b      	cbz	r3, 80030be <_dtoa_r+0xb4e>
 80030b6:	f10a 0308 	add.w	r3, sl, #8
 80030ba:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80030bc:	6013      	str	r3, [r2, #0]
 80030be:	4650      	mov	r0, sl
 80030c0:	b017      	add	sp, #92	@ 0x5c
 80030c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030c6:	9b07      	ldr	r3, [sp, #28]
 80030c8:	2b01      	cmp	r3, #1
 80030ca:	f77f ae2e 	ble.w	8002d2a <_dtoa_r+0x7ba>
 80030ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80030d0:	9308      	str	r3, [sp, #32]
 80030d2:	2001      	movs	r0, #1
 80030d4:	e64d      	b.n	8002d72 <_dtoa_r+0x802>
 80030d6:	f1bb 0f00 	cmp.w	fp, #0
 80030da:	f77f aed9 	ble.w	8002e90 <_dtoa_r+0x920>
 80030de:	4656      	mov	r6, sl
 80030e0:	9802      	ldr	r0, [sp, #8]
 80030e2:	4621      	mov	r1, r4
 80030e4:	f7ff f9bb 	bl	800245e <quorem>
 80030e8:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 80030ec:	f806 3b01 	strb.w	r3, [r6], #1
 80030f0:	eba6 020a 	sub.w	r2, r6, sl
 80030f4:	4593      	cmp	fp, r2
 80030f6:	ddb4      	ble.n	8003062 <_dtoa_r+0xaf2>
 80030f8:	9902      	ldr	r1, [sp, #8]
 80030fa:	2300      	movs	r3, #0
 80030fc:	220a      	movs	r2, #10
 80030fe:	4648      	mov	r0, r9
 8003100:	f000 f8b2 	bl	8003268 <__multadd>
 8003104:	9002      	str	r0, [sp, #8]
 8003106:	e7eb      	b.n	80030e0 <_dtoa_r+0xb70>
 8003108:	08004428 	.word	0x08004428
 800310c:	080043ac 	.word	0x080043ac

08003110 <_free_r>:
 8003110:	b538      	push	{r3, r4, r5, lr}
 8003112:	4605      	mov	r5, r0
 8003114:	2900      	cmp	r1, #0
 8003116:	d041      	beq.n	800319c <_free_r+0x8c>
 8003118:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800311c:	1f0c      	subs	r4, r1, #4
 800311e:	2b00      	cmp	r3, #0
 8003120:	bfb8      	it	lt
 8003122:	18e4      	addlt	r4, r4, r3
 8003124:	f7fe fb74 	bl	8001810 <__malloc_lock>
 8003128:	4a1d      	ldr	r2, [pc, #116]	@ (80031a0 <_free_r+0x90>)
 800312a:	6813      	ldr	r3, [r2, #0]
 800312c:	b933      	cbnz	r3, 800313c <_free_r+0x2c>
 800312e:	6063      	str	r3, [r4, #4]
 8003130:	6014      	str	r4, [r2, #0]
 8003132:	4628      	mov	r0, r5
 8003134:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003138:	f7fe bb70 	b.w	800181c <__malloc_unlock>
 800313c:	42a3      	cmp	r3, r4
 800313e:	d908      	bls.n	8003152 <_free_r+0x42>
 8003140:	6820      	ldr	r0, [r4, #0]
 8003142:	1821      	adds	r1, r4, r0
 8003144:	428b      	cmp	r3, r1
 8003146:	bf01      	itttt	eq
 8003148:	6819      	ldreq	r1, [r3, #0]
 800314a:	685b      	ldreq	r3, [r3, #4]
 800314c:	1809      	addeq	r1, r1, r0
 800314e:	6021      	streq	r1, [r4, #0]
 8003150:	e7ed      	b.n	800312e <_free_r+0x1e>
 8003152:	461a      	mov	r2, r3
 8003154:	685b      	ldr	r3, [r3, #4]
 8003156:	b10b      	cbz	r3, 800315c <_free_r+0x4c>
 8003158:	42a3      	cmp	r3, r4
 800315a:	d9fa      	bls.n	8003152 <_free_r+0x42>
 800315c:	6811      	ldr	r1, [r2, #0]
 800315e:	1850      	adds	r0, r2, r1
 8003160:	42a0      	cmp	r0, r4
 8003162:	d10b      	bne.n	800317c <_free_r+0x6c>
 8003164:	6820      	ldr	r0, [r4, #0]
 8003166:	4401      	add	r1, r0
 8003168:	1850      	adds	r0, r2, r1
 800316a:	4283      	cmp	r3, r0
 800316c:	6011      	str	r1, [r2, #0]
 800316e:	d1e0      	bne.n	8003132 <_free_r+0x22>
 8003170:	6818      	ldr	r0, [r3, #0]
 8003172:	685b      	ldr	r3, [r3, #4]
 8003174:	6053      	str	r3, [r2, #4]
 8003176:	4408      	add	r0, r1
 8003178:	6010      	str	r0, [r2, #0]
 800317a:	e7da      	b.n	8003132 <_free_r+0x22>
 800317c:	d902      	bls.n	8003184 <_free_r+0x74>
 800317e:	230c      	movs	r3, #12
 8003180:	602b      	str	r3, [r5, #0]
 8003182:	e7d6      	b.n	8003132 <_free_r+0x22>
 8003184:	6820      	ldr	r0, [r4, #0]
 8003186:	1821      	adds	r1, r4, r0
 8003188:	428b      	cmp	r3, r1
 800318a:	bf04      	itt	eq
 800318c:	6819      	ldreq	r1, [r3, #0]
 800318e:	685b      	ldreq	r3, [r3, #4]
 8003190:	6063      	str	r3, [r4, #4]
 8003192:	bf04      	itt	eq
 8003194:	1809      	addeq	r1, r1, r0
 8003196:	6021      	streq	r1, [r4, #0]
 8003198:	6054      	str	r4, [r2, #4]
 800319a:	e7ca      	b.n	8003132 <_free_r+0x22>
 800319c:	bd38      	pop	{r3, r4, r5, pc}
 800319e:	bf00      	nop
 80031a0:	20000214 	.word	0x20000214

080031a4 <_Balloc>:
 80031a4:	b570      	push	{r4, r5, r6, lr}
 80031a6:	69c6      	ldr	r6, [r0, #28]
 80031a8:	4604      	mov	r4, r0
 80031aa:	460d      	mov	r5, r1
 80031ac:	b976      	cbnz	r6, 80031cc <_Balloc+0x28>
 80031ae:	2010      	movs	r0, #16
 80031b0:	f7fe fa84 	bl	80016bc <malloc>
 80031b4:	4602      	mov	r2, r0
 80031b6:	61e0      	str	r0, [r4, #28]
 80031b8:	b920      	cbnz	r0, 80031c4 <_Balloc+0x20>
 80031ba:	4b18      	ldr	r3, [pc, #96]	@ (800321c <_Balloc+0x78>)
 80031bc:	4818      	ldr	r0, [pc, #96]	@ (8003220 <_Balloc+0x7c>)
 80031be:	216b      	movs	r1, #107	@ 0x6b
 80031c0:	f000 fd88 	bl	8003cd4 <__assert_func>
 80031c4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80031c8:	6006      	str	r6, [r0, #0]
 80031ca:	60c6      	str	r6, [r0, #12]
 80031cc:	69e6      	ldr	r6, [r4, #28]
 80031ce:	68f3      	ldr	r3, [r6, #12]
 80031d0:	b183      	cbz	r3, 80031f4 <_Balloc+0x50>
 80031d2:	69e3      	ldr	r3, [r4, #28]
 80031d4:	68db      	ldr	r3, [r3, #12]
 80031d6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80031da:	b9b8      	cbnz	r0, 800320c <_Balloc+0x68>
 80031dc:	2101      	movs	r1, #1
 80031de:	fa01 f605 	lsl.w	r6, r1, r5
 80031e2:	1d72      	adds	r2, r6, #5
 80031e4:	0092      	lsls	r2, r2, #2
 80031e6:	4620      	mov	r0, r4
 80031e8:	f000 fd92 	bl	8003d10 <_calloc_r>
 80031ec:	b160      	cbz	r0, 8003208 <_Balloc+0x64>
 80031ee:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80031f2:	e00e      	b.n	8003212 <_Balloc+0x6e>
 80031f4:	2221      	movs	r2, #33	@ 0x21
 80031f6:	2104      	movs	r1, #4
 80031f8:	4620      	mov	r0, r4
 80031fa:	f000 fd89 	bl	8003d10 <_calloc_r>
 80031fe:	69e3      	ldr	r3, [r4, #28]
 8003200:	60f0      	str	r0, [r6, #12]
 8003202:	68db      	ldr	r3, [r3, #12]
 8003204:	2b00      	cmp	r3, #0
 8003206:	d1e4      	bne.n	80031d2 <_Balloc+0x2e>
 8003208:	2000      	movs	r0, #0
 800320a:	bd70      	pop	{r4, r5, r6, pc}
 800320c:	6802      	ldr	r2, [r0, #0]
 800320e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003212:	2300      	movs	r3, #0
 8003214:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003218:	e7f7      	b.n	800320a <_Balloc+0x66>
 800321a:	bf00      	nop
 800321c:	080043b9 	.word	0x080043b9
 8003220:	08004439 	.word	0x08004439

08003224 <_Bfree>:
 8003224:	b570      	push	{r4, r5, r6, lr}
 8003226:	69c6      	ldr	r6, [r0, #28]
 8003228:	4605      	mov	r5, r0
 800322a:	460c      	mov	r4, r1
 800322c:	b976      	cbnz	r6, 800324c <_Bfree+0x28>
 800322e:	2010      	movs	r0, #16
 8003230:	f7fe fa44 	bl	80016bc <malloc>
 8003234:	4602      	mov	r2, r0
 8003236:	61e8      	str	r0, [r5, #28]
 8003238:	b920      	cbnz	r0, 8003244 <_Bfree+0x20>
 800323a:	4b09      	ldr	r3, [pc, #36]	@ (8003260 <_Bfree+0x3c>)
 800323c:	4809      	ldr	r0, [pc, #36]	@ (8003264 <_Bfree+0x40>)
 800323e:	218f      	movs	r1, #143	@ 0x8f
 8003240:	f000 fd48 	bl	8003cd4 <__assert_func>
 8003244:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003248:	6006      	str	r6, [r0, #0]
 800324a:	60c6      	str	r6, [r0, #12]
 800324c:	b13c      	cbz	r4, 800325e <_Bfree+0x3a>
 800324e:	69eb      	ldr	r3, [r5, #28]
 8003250:	6862      	ldr	r2, [r4, #4]
 8003252:	68db      	ldr	r3, [r3, #12]
 8003254:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003258:	6021      	str	r1, [r4, #0]
 800325a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800325e:	bd70      	pop	{r4, r5, r6, pc}
 8003260:	080043b9 	.word	0x080043b9
 8003264:	08004439 	.word	0x08004439

08003268 <__multadd>:
 8003268:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800326c:	690d      	ldr	r5, [r1, #16]
 800326e:	4607      	mov	r7, r0
 8003270:	460c      	mov	r4, r1
 8003272:	461e      	mov	r6, r3
 8003274:	f101 0c14 	add.w	ip, r1, #20
 8003278:	2000      	movs	r0, #0
 800327a:	f8dc 3000 	ldr.w	r3, [ip]
 800327e:	b299      	uxth	r1, r3
 8003280:	fb02 6101 	mla	r1, r2, r1, r6
 8003284:	0c1e      	lsrs	r6, r3, #16
 8003286:	0c0b      	lsrs	r3, r1, #16
 8003288:	fb02 3306 	mla	r3, r2, r6, r3
 800328c:	b289      	uxth	r1, r1
 800328e:	3001      	adds	r0, #1
 8003290:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003294:	4285      	cmp	r5, r0
 8003296:	f84c 1b04 	str.w	r1, [ip], #4
 800329a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800329e:	dcec      	bgt.n	800327a <__multadd+0x12>
 80032a0:	b30e      	cbz	r6, 80032e6 <__multadd+0x7e>
 80032a2:	68a3      	ldr	r3, [r4, #8]
 80032a4:	42ab      	cmp	r3, r5
 80032a6:	dc19      	bgt.n	80032dc <__multadd+0x74>
 80032a8:	6861      	ldr	r1, [r4, #4]
 80032aa:	4638      	mov	r0, r7
 80032ac:	3101      	adds	r1, #1
 80032ae:	f7ff ff79 	bl	80031a4 <_Balloc>
 80032b2:	4680      	mov	r8, r0
 80032b4:	b928      	cbnz	r0, 80032c2 <__multadd+0x5a>
 80032b6:	4602      	mov	r2, r0
 80032b8:	4b0c      	ldr	r3, [pc, #48]	@ (80032ec <__multadd+0x84>)
 80032ba:	480d      	ldr	r0, [pc, #52]	@ (80032f0 <__multadd+0x88>)
 80032bc:	21ba      	movs	r1, #186	@ 0xba
 80032be:	f000 fd09 	bl	8003cd4 <__assert_func>
 80032c2:	6922      	ldr	r2, [r4, #16]
 80032c4:	3202      	adds	r2, #2
 80032c6:	f104 010c 	add.w	r1, r4, #12
 80032ca:	0092      	lsls	r2, r2, #2
 80032cc:	300c      	adds	r0, #12
 80032ce:	f7ff f8b8 	bl	8002442 <memcpy>
 80032d2:	4621      	mov	r1, r4
 80032d4:	4638      	mov	r0, r7
 80032d6:	f7ff ffa5 	bl	8003224 <_Bfree>
 80032da:	4644      	mov	r4, r8
 80032dc:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80032e0:	3501      	adds	r5, #1
 80032e2:	615e      	str	r6, [r3, #20]
 80032e4:	6125      	str	r5, [r4, #16]
 80032e6:	4620      	mov	r0, r4
 80032e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80032ec:	08004428 	.word	0x08004428
 80032f0:	08004439 	.word	0x08004439

080032f4 <__hi0bits>:
 80032f4:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80032f8:	4603      	mov	r3, r0
 80032fa:	bf36      	itet	cc
 80032fc:	0403      	lslcc	r3, r0, #16
 80032fe:	2000      	movcs	r0, #0
 8003300:	2010      	movcc	r0, #16
 8003302:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003306:	bf3c      	itt	cc
 8003308:	021b      	lslcc	r3, r3, #8
 800330a:	3008      	addcc	r0, #8
 800330c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003310:	bf3c      	itt	cc
 8003312:	011b      	lslcc	r3, r3, #4
 8003314:	3004      	addcc	r0, #4
 8003316:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800331a:	bf3c      	itt	cc
 800331c:	009b      	lslcc	r3, r3, #2
 800331e:	3002      	addcc	r0, #2
 8003320:	2b00      	cmp	r3, #0
 8003322:	db05      	blt.n	8003330 <__hi0bits+0x3c>
 8003324:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003328:	f100 0001 	add.w	r0, r0, #1
 800332c:	bf08      	it	eq
 800332e:	2020      	moveq	r0, #32
 8003330:	4770      	bx	lr

08003332 <__lo0bits>:
 8003332:	6803      	ldr	r3, [r0, #0]
 8003334:	4602      	mov	r2, r0
 8003336:	f013 0007 	ands.w	r0, r3, #7
 800333a:	d00b      	beq.n	8003354 <__lo0bits+0x22>
 800333c:	07d9      	lsls	r1, r3, #31
 800333e:	d421      	bmi.n	8003384 <__lo0bits+0x52>
 8003340:	0798      	lsls	r0, r3, #30
 8003342:	bf49      	itett	mi
 8003344:	085b      	lsrmi	r3, r3, #1
 8003346:	089b      	lsrpl	r3, r3, #2
 8003348:	2001      	movmi	r0, #1
 800334a:	6013      	strmi	r3, [r2, #0]
 800334c:	bf5c      	itt	pl
 800334e:	6013      	strpl	r3, [r2, #0]
 8003350:	2002      	movpl	r0, #2
 8003352:	4770      	bx	lr
 8003354:	b299      	uxth	r1, r3
 8003356:	b909      	cbnz	r1, 800335c <__lo0bits+0x2a>
 8003358:	0c1b      	lsrs	r3, r3, #16
 800335a:	2010      	movs	r0, #16
 800335c:	b2d9      	uxtb	r1, r3
 800335e:	b909      	cbnz	r1, 8003364 <__lo0bits+0x32>
 8003360:	3008      	adds	r0, #8
 8003362:	0a1b      	lsrs	r3, r3, #8
 8003364:	0719      	lsls	r1, r3, #28
 8003366:	bf04      	itt	eq
 8003368:	091b      	lsreq	r3, r3, #4
 800336a:	3004      	addeq	r0, #4
 800336c:	0799      	lsls	r1, r3, #30
 800336e:	bf04      	itt	eq
 8003370:	089b      	lsreq	r3, r3, #2
 8003372:	3002      	addeq	r0, #2
 8003374:	07d9      	lsls	r1, r3, #31
 8003376:	d403      	bmi.n	8003380 <__lo0bits+0x4e>
 8003378:	085b      	lsrs	r3, r3, #1
 800337a:	f100 0001 	add.w	r0, r0, #1
 800337e:	d003      	beq.n	8003388 <__lo0bits+0x56>
 8003380:	6013      	str	r3, [r2, #0]
 8003382:	4770      	bx	lr
 8003384:	2000      	movs	r0, #0
 8003386:	4770      	bx	lr
 8003388:	2020      	movs	r0, #32
 800338a:	4770      	bx	lr

0800338c <__i2b>:
 800338c:	b510      	push	{r4, lr}
 800338e:	460c      	mov	r4, r1
 8003390:	2101      	movs	r1, #1
 8003392:	f7ff ff07 	bl	80031a4 <_Balloc>
 8003396:	4602      	mov	r2, r0
 8003398:	b928      	cbnz	r0, 80033a6 <__i2b+0x1a>
 800339a:	4b05      	ldr	r3, [pc, #20]	@ (80033b0 <__i2b+0x24>)
 800339c:	4805      	ldr	r0, [pc, #20]	@ (80033b4 <__i2b+0x28>)
 800339e:	f240 1145 	movw	r1, #325	@ 0x145
 80033a2:	f000 fc97 	bl	8003cd4 <__assert_func>
 80033a6:	2301      	movs	r3, #1
 80033a8:	6144      	str	r4, [r0, #20]
 80033aa:	6103      	str	r3, [r0, #16]
 80033ac:	bd10      	pop	{r4, pc}
 80033ae:	bf00      	nop
 80033b0:	08004428 	.word	0x08004428
 80033b4:	08004439 	.word	0x08004439

080033b8 <__multiply>:
 80033b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80033bc:	4617      	mov	r7, r2
 80033be:	690a      	ldr	r2, [r1, #16]
 80033c0:	693b      	ldr	r3, [r7, #16]
 80033c2:	429a      	cmp	r2, r3
 80033c4:	bfa8      	it	ge
 80033c6:	463b      	movge	r3, r7
 80033c8:	4689      	mov	r9, r1
 80033ca:	bfa4      	itt	ge
 80033cc:	460f      	movge	r7, r1
 80033ce:	4699      	movge	r9, r3
 80033d0:	693d      	ldr	r5, [r7, #16]
 80033d2:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80033d6:	68bb      	ldr	r3, [r7, #8]
 80033d8:	6879      	ldr	r1, [r7, #4]
 80033da:	eb05 060a 	add.w	r6, r5, sl
 80033de:	42b3      	cmp	r3, r6
 80033e0:	b085      	sub	sp, #20
 80033e2:	bfb8      	it	lt
 80033e4:	3101      	addlt	r1, #1
 80033e6:	f7ff fedd 	bl	80031a4 <_Balloc>
 80033ea:	b930      	cbnz	r0, 80033fa <__multiply+0x42>
 80033ec:	4602      	mov	r2, r0
 80033ee:	4b41      	ldr	r3, [pc, #260]	@ (80034f4 <__multiply+0x13c>)
 80033f0:	4841      	ldr	r0, [pc, #260]	@ (80034f8 <__multiply+0x140>)
 80033f2:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80033f6:	f000 fc6d 	bl	8003cd4 <__assert_func>
 80033fa:	f100 0414 	add.w	r4, r0, #20
 80033fe:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8003402:	4623      	mov	r3, r4
 8003404:	2200      	movs	r2, #0
 8003406:	4573      	cmp	r3, lr
 8003408:	d320      	bcc.n	800344c <__multiply+0x94>
 800340a:	f107 0814 	add.w	r8, r7, #20
 800340e:	f109 0114 	add.w	r1, r9, #20
 8003412:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8003416:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 800341a:	9302      	str	r3, [sp, #8]
 800341c:	1beb      	subs	r3, r5, r7
 800341e:	3b15      	subs	r3, #21
 8003420:	f023 0303 	bic.w	r3, r3, #3
 8003424:	3304      	adds	r3, #4
 8003426:	3715      	adds	r7, #21
 8003428:	42bd      	cmp	r5, r7
 800342a:	bf38      	it	cc
 800342c:	2304      	movcc	r3, #4
 800342e:	9301      	str	r3, [sp, #4]
 8003430:	9b02      	ldr	r3, [sp, #8]
 8003432:	9103      	str	r1, [sp, #12]
 8003434:	428b      	cmp	r3, r1
 8003436:	d80c      	bhi.n	8003452 <__multiply+0x9a>
 8003438:	2e00      	cmp	r6, #0
 800343a:	dd03      	ble.n	8003444 <__multiply+0x8c>
 800343c:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8003440:	2b00      	cmp	r3, #0
 8003442:	d055      	beq.n	80034f0 <__multiply+0x138>
 8003444:	6106      	str	r6, [r0, #16]
 8003446:	b005      	add	sp, #20
 8003448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800344c:	f843 2b04 	str.w	r2, [r3], #4
 8003450:	e7d9      	b.n	8003406 <__multiply+0x4e>
 8003452:	f8b1 a000 	ldrh.w	sl, [r1]
 8003456:	f1ba 0f00 	cmp.w	sl, #0
 800345a:	d01f      	beq.n	800349c <__multiply+0xe4>
 800345c:	46c4      	mov	ip, r8
 800345e:	46a1      	mov	r9, r4
 8003460:	2700      	movs	r7, #0
 8003462:	f85c 2b04 	ldr.w	r2, [ip], #4
 8003466:	f8d9 3000 	ldr.w	r3, [r9]
 800346a:	fa1f fb82 	uxth.w	fp, r2
 800346e:	b29b      	uxth	r3, r3
 8003470:	fb0a 330b 	mla	r3, sl, fp, r3
 8003474:	443b      	add	r3, r7
 8003476:	f8d9 7000 	ldr.w	r7, [r9]
 800347a:	0c12      	lsrs	r2, r2, #16
 800347c:	0c3f      	lsrs	r7, r7, #16
 800347e:	fb0a 7202 	mla	r2, sl, r2, r7
 8003482:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8003486:	b29b      	uxth	r3, r3
 8003488:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800348c:	4565      	cmp	r5, ip
 800348e:	f849 3b04 	str.w	r3, [r9], #4
 8003492:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8003496:	d8e4      	bhi.n	8003462 <__multiply+0xaa>
 8003498:	9b01      	ldr	r3, [sp, #4]
 800349a:	50e7      	str	r7, [r4, r3]
 800349c:	9b03      	ldr	r3, [sp, #12]
 800349e:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80034a2:	3104      	adds	r1, #4
 80034a4:	f1b9 0f00 	cmp.w	r9, #0
 80034a8:	d020      	beq.n	80034ec <__multiply+0x134>
 80034aa:	6823      	ldr	r3, [r4, #0]
 80034ac:	4647      	mov	r7, r8
 80034ae:	46a4      	mov	ip, r4
 80034b0:	f04f 0a00 	mov.w	sl, #0
 80034b4:	f8b7 b000 	ldrh.w	fp, [r7]
 80034b8:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 80034bc:	fb09 220b 	mla	r2, r9, fp, r2
 80034c0:	4452      	add	r2, sl
 80034c2:	b29b      	uxth	r3, r3
 80034c4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80034c8:	f84c 3b04 	str.w	r3, [ip], #4
 80034cc:	f857 3b04 	ldr.w	r3, [r7], #4
 80034d0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80034d4:	f8bc 3000 	ldrh.w	r3, [ip]
 80034d8:	fb09 330a 	mla	r3, r9, sl, r3
 80034dc:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 80034e0:	42bd      	cmp	r5, r7
 80034e2:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80034e6:	d8e5      	bhi.n	80034b4 <__multiply+0xfc>
 80034e8:	9a01      	ldr	r2, [sp, #4]
 80034ea:	50a3      	str	r3, [r4, r2]
 80034ec:	3404      	adds	r4, #4
 80034ee:	e79f      	b.n	8003430 <__multiply+0x78>
 80034f0:	3e01      	subs	r6, #1
 80034f2:	e7a1      	b.n	8003438 <__multiply+0x80>
 80034f4:	08004428 	.word	0x08004428
 80034f8:	08004439 	.word	0x08004439

080034fc <__pow5mult>:
 80034fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003500:	4615      	mov	r5, r2
 8003502:	f012 0203 	ands.w	r2, r2, #3
 8003506:	4607      	mov	r7, r0
 8003508:	460e      	mov	r6, r1
 800350a:	d007      	beq.n	800351c <__pow5mult+0x20>
 800350c:	4c25      	ldr	r4, [pc, #148]	@ (80035a4 <__pow5mult+0xa8>)
 800350e:	3a01      	subs	r2, #1
 8003510:	2300      	movs	r3, #0
 8003512:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003516:	f7ff fea7 	bl	8003268 <__multadd>
 800351a:	4606      	mov	r6, r0
 800351c:	10ad      	asrs	r5, r5, #2
 800351e:	d03d      	beq.n	800359c <__pow5mult+0xa0>
 8003520:	69fc      	ldr	r4, [r7, #28]
 8003522:	b97c      	cbnz	r4, 8003544 <__pow5mult+0x48>
 8003524:	2010      	movs	r0, #16
 8003526:	f7fe f8c9 	bl	80016bc <malloc>
 800352a:	4602      	mov	r2, r0
 800352c:	61f8      	str	r0, [r7, #28]
 800352e:	b928      	cbnz	r0, 800353c <__pow5mult+0x40>
 8003530:	4b1d      	ldr	r3, [pc, #116]	@ (80035a8 <__pow5mult+0xac>)
 8003532:	481e      	ldr	r0, [pc, #120]	@ (80035ac <__pow5mult+0xb0>)
 8003534:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003538:	f000 fbcc 	bl	8003cd4 <__assert_func>
 800353c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003540:	6004      	str	r4, [r0, #0]
 8003542:	60c4      	str	r4, [r0, #12]
 8003544:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003548:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800354c:	b94c      	cbnz	r4, 8003562 <__pow5mult+0x66>
 800354e:	f240 2171 	movw	r1, #625	@ 0x271
 8003552:	4638      	mov	r0, r7
 8003554:	f7ff ff1a 	bl	800338c <__i2b>
 8003558:	2300      	movs	r3, #0
 800355a:	f8c8 0008 	str.w	r0, [r8, #8]
 800355e:	4604      	mov	r4, r0
 8003560:	6003      	str	r3, [r0, #0]
 8003562:	f04f 0900 	mov.w	r9, #0
 8003566:	07eb      	lsls	r3, r5, #31
 8003568:	d50a      	bpl.n	8003580 <__pow5mult+0x84>
 800356a:	4631      	mov	r1, r6
 800356c:	4622      	mov	r2, r4
 800356e:	4638      	mov	r0, r7
 8003570:	f7ff ff22 	bl	80033b8 <__multiply>
 8003574:	4631      	mov	r1, r6
 8003576:	4680      	mov	r8, r0
 8003578:	4638      	mov	r0, r7
 800357a:	f7ff fe53 	bl	8003224 <_Bfree>
 800357e:	4646      	mov	r6, r8
 8003580:	106d      	asrs	r5, r5, #1
 8003582:	d00b      	beq.n	800359c <__pow5mult+0xa0>
 8003584:	6820      	ldr	r0, [r4, #0]
 8003586:	b938      	cbnz	r0, 8003598 <__pow5mult+0x9c>
 8003588:	4622      	mov	r2, r4
 800358a:	4621      	mov	r1, r4
 800358c:	4638      	mov	r0, r7
 800358e:	f7ff ff13 	bl	80033b8 <__multiply>
 8003592:	6020      	str	r0, [r4, #0]
 8003594:	f8c0 9000 	str.w	r9, [r0]
 8003598:	4604      	mov	r4, r0
 800359a:	e7e4      	b.n	8003566 <__pow5mult+0x6a>
 800359c:	4630      	mov	r0, r6
 800359e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80035a2:	bf00      	nop
 80035a4:	080044ec 	.word	0x080044ec
 80035a8:	080043b9 	.word	0x080043b9
 80035ac:	08004439 	.word	0x08004439

080035b0 <__lshift>:
 80035b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80035b4:	460c      	mov	r4, r1
 80035b6:	6849      	ldr	r1, [r1, #4]
 80035b8:	6923      	ldr	r3, [r4, #16]
 80035ba:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80035be:	68a3      	ldr	r3, [r4, #8]
 80035c0:	4607      	mov	r7, r0
 80035c2:	4691      	mov	r9, r2
 80035c4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80035c8:	f108 0601 	add.w	r6, r8, #1
 80035cc:	42b3      	cmp	r3, r6
 80035ce:	db0b      	blt.n	80035e8 <__lshift+0x38>
 80035d0:	4638      	mov	r0, r7
 80035d2:	f7ff fde7 	bl	80031a4 <_Balloc>
 80035d6:	4605      	mov	r5, r0
 80035d8:	b948      	cbnz	r0, 80035ee <__lshift+0x3e>
 80035da:	4602      	mov	r2, r0
 80035dc:	4b28      	ldr	r3, [pc, #160]	@ (8003680 <__lshift+0xd0>)
 80035de:	4829      	ldr	r0, [pc, #164]	@ (8003684 <__lshift+0xd4>)
 80035e0:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80035e4:	f000 fb76 	bl	8003cd4 <__assert_func>
 80035e8:	3101      	adds	r1, #1
 80035ea:	005b      	lsls	r3, r3, #1
 80035ec:	e7ee      	b.n	80035cc <__lshift+0x1c>
 80035ee:	2300      	movs	r3, #0
 80035f0:	f100 0114 	add.w	r1, r0, #20
 80035f4:	f100 0210 	add.w	r2, r0, #16
 80035f8:	4618      	mov	r0, r3
 80035fa:	4553      	cmp	r3, sl
 80035fc:	db33      	blt.n	8003666 <__lshift+0xb6>
 80035fe:	6920      	ldr	r0, [r4, #16]
 8003600:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003604:	f104 0314 	add.w	r3, r4, #20
 8003608:	f019 091f 	ands.w	r9, r9, #31
 800360c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003610:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003614:	d02b      	beq.n	800366e <__lshift+0xbe>
 8003616:	f1c9 0e20 	rsb	lr, r9, #32
 800361a:	468a      	mov	sl, r1
 800361c:	2200      	movs	r2, #0
 800361e:	6818      	ldr	r0, [r3, #0]
 8003620:	fa00 f009 	lsl.w	r0, r0, r9
 8003624:	4310      	orrs	r0, r2
 8003626:	f84a 0b04 	str.w	r0, [sl], #4
 800362a:	f853 2b04 	ldr.w	r2, [r3], #4
 800362e:	459c      	cmp	ip, r3
 8003630:	fa22 f20e 	lsr.w	r2, r2, lr
 8003634:	d8f3      	bhi.n	800361e <__lshift+0x6e>
 8003636:	ebac 0304 	sub.w	r3, ip, r4
 800363a:	3b15      	subs	r3, #21
 800363c:	f023 0303 	bic.w	r3, r3, #3
 8003640:	3304      	adds	r3, #4
 8003642:	f104 0015 	add.w	r0, r4, #21
 8003646:	4560      	cmp	r0, ip
 8003648:	bf88      	it	hi
 800364a:	2304      	movhi	r3, #4
 800364c:	50ca      	str	r2, [r1, r3]
 800364e:	b10a      	cbz	r2, 8003654 <__lshift+0xa4>
 8003650:	f108 0602 	add.w	r6, r8, #2
 8003654:	3e01      	subs	r6, #1
 8003656:	4638      	mov	r0, r7
 8003658:	612e      	str	r6, [r5, #16]
 800365a:	4621      	mov	r1, r4
 800365c:	f7ff fde2 	bl	8003224 <_Bfree>
 8003660:	4628      	mov	r0, r5
 8003662:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003666:	f842 0f04 	str.w	r0, [r2, #4]!
 800366a:	3301      	adds	r3, #1
 800366c:	e7c5      	b.n	80035fa <__lshift+0x4a>
 800366e:	3904      	subs	r1, #4
 8003670:	f853 2b04 	ldr.w	r2, [r3], #4
 8003674:	f841 2f04 	str.w	r2, [r1, #4]!
 8003678:	459c      	cmp	ip, r3
 800367a:	d8f9      	bhi.n	8003670 <__lshift+0xc0>
 800367c:	e7ea      	b.n	8003654 <__lshift+0xa4>
 800367e:	bf00      	nop
 8003680:	08004428 	.word	0x08004428
 8003684:	08004439 	.word	0x08004439

08003688 <__mcmp>:
 8003688:	690a      	ldr	r2, [r1, #16]
 800368a:	4603      	mov	r3, r0
 800368c:	6900      	ldr	r0, [r0, #16]
 800368e:	1a80      	subs	r0, r0, r2
 8003690:	b530      	push	{r4, r5, lr}
 8003692:	d10e      	bne.n	80036b2 <__mcmp+0x2a>
 8003694:	3314      	adds	r3, #20
 8003696:	3114      	adds	r1, #20
 8003698:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800369c:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80036a0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80036a4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80036a8:	4295      	cmp	r5, r2
 80036aa:	d003      	beq.n	80036b4 <__mcmp+0x2c>
 80036ac:	d205      	bcs.n	80036ba <__mcmp+0x32>
 80036ae:	f04f 30ff 	mov.w	r0, #4294967295
 80036b2:	bd30      	pop	{r4, r5, pc}
 80036b4:	42a3      	cmp	r3, r4
 80036b6:	d3f3      	bcc.n	80036a0 <__mcmp+0x18>
 80036b8:	e7fb      	b.n	80036b2 <__mcmp+0x2a>
 80036ba:	2001      	movs	r0, #1
 80036bc:	e7f9      	b.n	80036b2 <__mcmp+0x2a>
	...

080036c0 <__mdiff>:
 80036c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036c4:	4689      	mov	r9, r1
 80036c6:	4606      	mov	r6, r0
 80036c8:	4611      	mov	r1, r2
 80036ca:	4648      	mov	r0, r9
 80036cc:	4614      	mov	r4, r2
 80036ce:	f7ff ffdb 	bl	8003688 <__mcmp>
 80036d2:	1e05      	subs	r5, r0, #0
 80036d4:	d112      	bne.n	80036fc <__mdiff+0x3c>
 80036d6:	4629      	mov	r1, r5
 80036d8:	4630      	mov	r0, r6
 80036da:	f7ff fd63 	bl	80031a4 <_Balloc>
 80036de:	4602      	mov	r2, r0
 80036e0:	b928      	cbnz	r0, 80036ee <__mdiff+0x2e>
 80036e2:	4b3f      	ldr	r3, [pc, #252]	@ (80037e0 <__mdiff+0x120>)
 80036e4:	f240 2137 	movw	r1, #567	@ 0x237
 80036e8:	483e      	ldr	r0, [pc, #248]	@ (80037e4 <__mdiff+0x124>)
 80036ea:	f000 faf3 	bl	8003cd4 <__assert_func>
 80036ee:	2301      	movs	r3, #1
 80036f0:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80036f4:	4610      	mov	r0, r2
 80036f6:	b003      	add	sp, #12
 80036f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80036fc:	bfbc      	itt	lt
 80036fe:	464b      	movlt	r3, r9
 8003700:	46a1      	movlt	r9, r4
 8003702:	4630      	mov	r0, r6
 8003704:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003708:	bfba      	itte	lt
 800370a:	461c      	movlt	r4, r3
 800370c:	2501      	movlt	r5, #1
 800370e:	2500      	movge	r5, #0
 8003710:	f7ff fd48 	bl	80031a4 <_Balloc>
 8003714:	4602      	mov	r2, r0
 8003716:	b918      	cbnz	r0, 8003720 <__mdiff+0x60>
 8003718:	4b31      	ldr	r3, [pc, #196]	@ (80037e0 <__mdiff+0x120>)
 800371a:	f240 2145 	movw	r1, #581	@ 0x245
 800371e:	e7e3      	b.n	80036e8 <__mdiff+0x28>
 8003720:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003724:	6926      	ldr	r6, [r4, #16]
 8003726:	60c5      	str	r5, [r0, #12]
 8003728:	f109 0310 	add.w	r3, r9, #16
 800372c:	f109 0514 	add.w	r5, r9, #20
 8003730:	f104 0e14 	add.w	lr, r4, #20
 8003734:	f100 0b14 	add.w	fp, r0, #20
 8003738:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800373c:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003740:	9301      	str	r3, [sp, #4]
 8003742:	46d9      	mov	r9, fp
 8003744:	f04f 0c00 	mov.w	ip, #0
 8003748:	9b01      	ldr	r3, [sp, #4]
 800374a:	f85e 0b04 	ldr.w	r0, [lr], #4
 800374e:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003752:	9301      	str	r3, [sp, #4]
 8003754:	fa1f f38a 	uxth.w	r3, sl
 8003758:	4619      	mov	r1, r3
 800375a:	b283      	uxth	r3, r0
 800375c:	1acb      	subs	r3, r1, r3
 800375e:	0c00      	lsrs	r0, r0, #16
 8003760:	4463      	add	r3, ip
 8003762:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003766:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800376a:	b29b      	uxth	r3, r3
 800376c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003770:	4576      	cmp	r6, lr
 8003772:	f849 3b04 	str.w	r3, [r9], #4
 8003776:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800377a:	d8e5      	bhi.n	8003748 <__mdiff+0x88>
 800377c:	1b33      	subs	r3, r6, r4
 800377e:	3b15      	subs	r3, #21
 8003780:	f023 0303 	bic.w	r3, r3, #3
 8003784:	3415      	adds	r4, #21
 8003786:	3304      	adds	r3, #4
 8003788:	42a6      	cmp	r6, r4
 800378a:	bf38      	it	cc
 800378c:	2304      	movcc	r3, #4
 800378e:	441d      	add	r5, r3
 8003790:	445b      	add	r3, fp
 8003792:	461e      	mov	r6, r3
 8003794:	462c      	mov	r4, r5
 8003796:	4544      	cmp	r4, r8
 8003798:	d30e      	bcc.n	80037b8 <__mdiff+0xf8>
 800379a:	f108 0103 	add.w	r1, r8, #3
 800379e:	1b49      	subs	r1, r1, r5
 80037a0:	f021 0103 	bic.w	r1, r1, #3
 80037a4:	3d03      	subs	r5, #3
 80037a6:	45a8      	cmp	r8, r5
 80037a8:	bf38      	it	cc
 80037aa:	2100      	movcc	r1, #0
 80037ac:	440b      	add	r3, r1
 80037ae:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80037b2:	b191      	cbz	r1, 80037da <__mdiff+0x11a>
 80037b4:	6117      	str	r7, [r2, #16]
 80037b6:	e79d      	b.n	80036f4 <__mdiff+0x34>
 80037b8:	f854 1b04 	ldr.w	r1, [r4], #4
 80037bc:	46e6      	mov	lr, ip
 80037be:	0c08      	lsrs	r0, r1, #16
 80037c0:	fa1c fc81 	uxtah	ip, ip, r1
 80037c4:	4471      	add	r1, lr
 80037c6:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80037ca:	b289      	uxth	r1, r1
 80037cc:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80037d0:	f846 1b04 	str.w	r1, [r6], #4
 80037d4:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80037d8:	e7dd      	b.n	8003796 <__mdiff+0xd6>
 80037da:	3f01      	subs	r7, #1
 80037dc:	e7e7      	b.n	80037ae <__mdiff+0xee>
 80037de:	bf00      	nop
 80037e0:	08004428 	.word	0x08004428
 80037e4:	08004439 	.word	0x08004439

080037e8 <__d2b>:
 80037e8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80037ec:	460f      	mov	r7, r1
 80037ee:	2101      	movs	r1, #1
 80037f0:	ec59 8b10 	vmov	r8, r9, d0
 80037f4:	4616      	mov	r6, r2
 80037f6:	f7ff fcd5 	bl	80031a4 <_Balloc>
 80037fa:	4604      	mov	r4, r0
 80037fc:	b930      	cbnz	r0, 800380c <__d2b+0x24>
 80037fe:	4602      	mov	r2, r0
 8003800:	4b23      	ldr	r3, [pc, #140]	@ (8003890 <__d2b+0xa8>)
 8003802:	4824      	ldr	r0, [pc, #144]	@ (8003894 <__d2b+0xac>)
 8003804:	f240 310f 	movw	r1, #783	@ 0x30f
 8003808:	f000 fa64 	bl	8003cd4 <__assert_func>
 800380c:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003810:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003814:	b10d      	cbz	r5, 800381a <__d2b+0x32>
 8003816:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800381a:	9301      	str	r3, [sp, #4]
 800381c:	f1b8 0300 	subs.w	r3, r8, #0
 8003820:	d023      	beq.n	800386a <__d2b+0x82>
 8003822:	4668      	mov	r0, sp
 8003824:	9300      	str	r3, [sp, #0]
 8003826:	f7ff fd84 	bl	8003332 <__lo0bits>
 800382a:	e9dd 1200 	ldrd	r1, r2, [sp]
 800382e:	b1d0      	cbz	r0, 8003866 <__d2b+0x7e>
 8003830:	f1c0 0320 	rsb	r3, r0, #32
 8003834:	fa02 f303 	lsl.w	r3, r2, r3
 8003838:	430b      	orrs	r3, r1
 800383a:	40c2      	lsrs	r2, r0
 800383c:	6163      	str	r3, [r4, #20]
 800383e:	9201      	str	r2, [sp, #4]
 8003840:	9b01      	ldr	r3, [sp, #4]
 8003842:	61a3      	str	r3, [r4, #24]
 8003844:	2b00      	cmp	r3, #0
 8003846:	bf0c      	ite	eq
 8003848:	2201      	moveq	r2, #1
 800384a:	2202      	movne	r2, #2
 800384c:	6122      	str	r2, [r4, #16]
 800384e:	b1a5      	cbz	r5, 800387a <__d2b+0x92>
 8003850:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003854:	4405      	add	r5, r0
 8003856:	603d      	str	r5, [r7, #0]
 8003858:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800385c:	6030      	str	r0, [r6, #0]
 800385e:	4620      	mov	r0, r4
 8003860:	b003      	add	sp, #12
 8003862:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003866:	6161      	str	r1, [r4, #20]
 8003868:	e7ea      	b.n	8003840 <__d2b+0x58>
 800386a:	a801      	add	r0, sp, #4
 800386c:	f7ff fd61 	bl	8003332 <__lo0bits>
 8003870:	9b01      	ldr	r3, [sp, #4]
 8003872:	6163      	str	r3, [r4, #20]
 8003874:	3020      	adds	r0, #32
 8003876:	2201      	movs	r2, #1
 8003878:	e7e8      	b.n	800384c <__d2b+0x64>
 800387a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800387e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003882:	6038      	str	r0, [r7, #0]
 8003884:	6918      	ldr	r0, [r3, #16]
 8003886:	f7ff fd35 	bl	80032f4 <__hi0bits>
 800388a:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800388e:	e7e5      	b.n	800385c <__d2b+0x74>
 8003890:	08004428 	.word	0x08004428
 8003894:	08004439 	.word	0x08004439

08003898 <__ssputs_r>:
 8003898:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800389c:	688e      	ldr	r6, [r1, #8]
 800389e:	461f      	mov	r7, r3
 80038a0:	42be      	cmp	r6, r7
 80038a2:	680b      	ldr	r3, [r1, #0]
 80038a4:	4682      	mov	sl, r0
 80038a6:	460c      	mov	r4, r1
 80038a8:	4690      	mov	r8, r2
 80038aa:	d82d      	bhi.n	8003908 <__ssputs_r+0x70>
 80038ac:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80038b0:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80038b4:	d026      	beq.n	8003904 <__ssputs_r+0x6c>
 80038b6:	6965      	ldr	r5, [r4, #20]
 80038b8:	6909      	ldr	r1, [r1, #16]
 80038ba:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80038be:	eba3 0901 	sub.w	r9, r3, r1
 80038c2:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80038c6:	1c7b      	adds	r3, r7, #1
 80038c8:	444b      	add	r3, r9
 80038ca:	106d      	asrs	r5, r5, #1
 80038cc:	429d      	cmp	r5, r3
 80038ce:	bf38      	it	cc
 80038d0:	461d      	movcc	r5, r3
 80038d2:	0553      	lsls	r3, r2, #21
 80038d4:	d527      	bpl.n	8003926 <__ssputs_r+0x8e>
 80038d6:	4629      	mov	r1, r5
 80038d8:	f7fd ff1a 	bl	8001710 <_malloc_r>
 80038dc:	4606      	mov	r6, r0
 80038de:	b360      	cbz	r0, 800393a <__ssputs_r+0xa2>
 80038e0:	6921      	ldr	r1, [r4, #16]
 80038e2:	464a      	mov	r2, r9
 80038e4:	f7fe fdad 	bl	8002442 <memcpy>
 80038e8:	89a3      	ldrh	r3, [r4, #12]
 80038ea:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80038ee:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80038f2:	81a3      	strh	r3, [r4, #12]
 80038f4:	6126      	str	r6, [r4, #16]
 80038f6:	6165      	str	r5, [r4, #20]
 80038f8:	444e      	add	r6, r9
 80038fa:	eba5 0509 	sub.w	r5, r5, r9
 80038fe:	6026      	str	r6, [r4, #0]
 8003900:	60a5      	str	r5, [r4, #8]
 8003902:	463e      	mov	r6, r7
 8003904:	42be      	cmp	r6, r7
 8003906:	d900      	bls.n	800390a <__ssputs_r+0x72>
 8003908:	463e      	mov	r6, r7
 800390a:	6820      	ldr	r0, [r4, #0]
 800390c:	4632      	mov	r2, r6
 800390e:	4641      	mov	r1, r8
 8003910:	f000 f9c6 	bl	8003ca0 <memmove>
 8003914:	68a3      	ldr	r3, [r4, #8]
 8003916:	1b9b      	subs	r3, r3, r6
 8003918:	60a3      	str	r3, [r4, #8]
 800391a:	6823      	ldr	r3, [r4, #0]
 800391c:	4433      	add	r3, r6
 800391e:	6023      	str	r3, [r4, #0]
 8003920:	2000      	movs	r0, #0
 8003922:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003926:	462a      	mov	r2, r5
 8003928:	f000 fa18 	bl	8003d5c <_realloc_r>
 800392c:	4606      	mov	r6, r0
 800392e:	2800      	cmp	r0, #0
 8003930:	d1e0      	bne.n	80038f4 <__ssputs_r+0x5c>
 8003932:	6921      	ldr	r1, [r4, #16]
 8003934:	4650      	mov	r0, sl
 8003936:	f7ff fbeb 	bl	8003110 <_free_r>
 800393a:	230c      	movs	r3, #12
 800393c:	f8ca 3000 	str.w	r3, [sl]
 8003940:	89a3      	ldrh	r3, [r4, #12]
 8003942:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003946:	81a3      	strh	r3, [r4, #12]
 8003948:	f04f 30ff 	mov.w	r0, #4294967295
 800394c:	e7e9      	b.n	8003922 <__ssputs_r+0x8a>
	...

08003950 <_svfiprintf_r>:
 8003950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003954:	4698      	mov	r8, r3
 8003956:	898b      	ldrh	r3, [r1, #12]
 8003958:	061b      	lsls	r3, r3, #24
 800395a:	b09d      	sub	sp, #116	@ 0x74
 800395c:	4607      	mov	r7, r0
 800395e:	460d      	mov	r5, r1
 8003960:	4614      	mov	r4, r2
 8003962:	d510      	bpl.n	8003986 <_svfiprintf_r+0x36>
 8003964:	690b      	ldr	r3, [r1, #16]
 8003966:	b973      	cbnz	r3, 8003986 <_svfiprintf_r+0x36>
 8003968:	2140      	movs	r1, #64	@ 0x40
 800396a:	f7fd fed1 	bl	8001710 <_malloc_r>
 800396e:	6028      	str	r0, [r5, #0]
 8003970:	6128      	str	r0, [r5, #16]
 8003972:	b930      	cbnz	r0, 8003982 <_svfiprintf_r+0x32>
 8003974:	230c      	movs	r3, #12
 8003976:	603b      	str	r3, [r7, #0]
 8003978:	f04f 30ff 	mov.w	r0, #4294967295
 800397c:	b01d      	add	sp, #116	@ 0x74
 800397e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003982:	2340      	movs	r3, #64	@ 0x40
 8003984:	616b      	str	r3, [r5, #20]
 8003986:	2300      	movs	r3, #0
 8003988:	9309      	str	r3, [sp, #36]	@ 0x24
 800398a:	2320      	movs	r3, #32
 800398c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003990:	f8cd 800c 	str.w	r8, [sp, #12]
 8003994:	2330      	movs	r3, #48	@ 0x30
 8003996:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003b34 <_svfiprintf_r+0x1e4>
 800399a:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800399e:	f04f 0901 	mov.w	r9, #1
 80039a2:	4623      	mov	r3, r4
 80039a4:	469a      	mov	sl, r3
 80039a6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80039aa:	b10a      	cbz	r2, 80039b0 <_svfiprintf_r+0x60>
 80039ac:	2a25      	cmp	r2, #37	@ 0x25
 80039ae:	d1f9      	bne.n	80039a4 <_svfiprintf_r+0x54>
 80039b0:	ebba 0b04 	subs.w	fp, sl, r4
 80039b4:	d00b      	beq.n	80039ce <_svfiprintf_r+0x7e>
 80039b6:	465b      	mov	r3, fp
 80039b8:	4622      	mov	r2, r4
 80039ba:	4629      	mov	r1, r5
 80039bc:	4638      	mov	r0, r7
 80039be:	f7ff ff6b 	bl	8003898 <__ssputs_r>
 80039c2:	3001      	adds	r0, #1
 80039c4:	f000 80a7 	beq.w	8003b16 <_svfiprintf_r+0x1c6>
 80039c8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80039ca:	445a      	add	r2, fp
 80039cc:	9209      	str	r2, [sp, #36]	@ 0x24
 80039ce:	f89a 3000 	ldrb.w	r3, [sl]
 80039d2:	2b00      	cmp	r3, #0
 80039d4:	f000 809f 	beq.w	8003b16 <_svfiprintf_r+0x1c6>
 80039d8:	2300      	movs	r3, #0
 80039da:	f04f 32ff 	mov.w	r2, #4294967295
 80039de:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80039e2:	f10a 0a01 	add.w	sl, sl, #1
 80039e6:	9304      	str	r3, [sp, #16]
 80039e8:	9307      	str	r3, [sp, #28]
 80039ea:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80039ee:	931a      	str	r3, [sp, #104]	@ 0x68
 80039f0:	4654      	mov	r4, sl
 80039f2:	2205      	movs	r2, #5
 80039f4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80039f8:	484e      	ldr	r0, [pc, #312]	@ (8003b34 <_svfiprintf_r+0x1e4>)
 80039fa:	f7fc fbe9 	bl	80001d0 <memchr>
 80039fe:	9a04      	ldr	r2, [sp, #16]
 8003a00:	b9d8      	cbnz	r0, 8003a3a <_svfiprintf_r+0xea>
 8003a02:	06d0      	lsls	r0, r2, #27
 8003a04:	bf44      	itt	mi
 8003a06:	2320      	movmi	r3, #32
 8003a08:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003a0c:	0711      	lsls	r1, r2, #28
 8003a0e:	bf44      	itt	mi
 8003a10:	232b      	movmi	r3, #43	@ 0x2b
 8003a12:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003a16:	f89a 3000 	ldrb.w	r3, [sl]
 8003a1a:	2b2a      	cmp	r3, #42	@ 0x2a
 8003a1c:	d015      	beq.n	8003a4a <_svfiprintf_r+0xfa>
 8003a1e:	9a07      	ldr	r2, [sp, #28]
 8003a20:	4654      	mov	r4, sl
 8003a22:	2000      	movs	r0, #0
 8003a24:	f04f 0c0a 	mov.w	ip, #10
 8003a28:	4621      	mov	r1, r4
 8003a2a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003a2e:	3b30      	subs	r3, #48	@ 0x30
 8003a30:	2b09      	cmp	r3, #9
 8003a32:	d94b      	bls.n	8003acc <_svfiprintf_r+0x17c>
 8003a34:	b1b0      	cbz	r0, 8003a64 <_svfiprintf_r+0x114>
 8003a36:	9207      	str	r2, [sp, #28]
 8003a38:	e014      	b.n	8003a64 <_svfiprintf_r+0x114>
 8003a3a:	eba0 0308 	sub.w	r3, r0, r8
 8003a3e:	fa09 f303 	lsl.w	r3, r9, r3
 8003a42:	4313      	orrs	r3, r2
 8003a44:	9304      	str	r3, [sp, #16]
 8003a46:	46a2      	mov	sl, r4
 8003a48:	e7d2      	b.n	80039f0 <_svfiprintf_r+0xa0>
 8003a4a:	9b03      	ldr	r3, [sp, #12]
 8003a4c:	1d19      	adds	r1, r3, #4
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	9103      	str	r1, [sp, #12]
 8003a52:	2b00      	cmp	r3, #0
 8003a54:	bfbb      	ittet	lt
 8003a56:	425b      	neglt	r3, r3
 8003a58:	f042 0202 	orrlt.w	r2, r2, #2
 8003a5c:	9307      	strge	r3, [sp, #28]
 8003a5e:	9307      	strlt	r3, [sp, #28]
 8003a60:	bfb8      	it	lt
 8003a62:	9204      	strlt	r2, [sp, #16]
 8003a64:	7823      	ldrb	r3, [r4, #0]
 8003a66:	2b2e      	cmp	r3, #46	@ 0x2e
 8003a68:	d10a      	bne.n	8003a80 <_svfiprintf_r+0x130>
 8003a6a:	7863      	ldrb	r3, [r4, #1]
 8003a6c:	2b2a      	cmp	r3, #42	@ 0x2a
 8003a6e:	d132      	bne.n	8003ad6 <_svfiprintf_r+0x186>
 8003a70:	9b03      	ldr	r3, [sp, #12]
 8003a72:	1d1a      	adds	r2, r3, #4
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	9203      	str	r2, [sp, #12]
 8003a78:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003a7c:	3402      	adds	r4, #2
 8003a7e:	9305      	str	r3, [sp, #20]
 8003a80:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003b44 <_svfiprintf_r+0x1f4>
 8003a84:	7821      	ldrb	r1, [r4, #0]
 8003a86:	2203      	movs	r2, #3
 8003a88:	4650      	mov	r0, sl
 8003a8a:	f7fc fba1 	bl	80001d0 <memchr>
 8003a8e:	b138      	cbz	r0, 8003aa0 <_svfiprintf_r+0x150>
 8003a90:	9b04      	ldr	r3, [sp, #16]
 8003a92:	eba0 000a 	sub.w	r0, r0, sl
 8003a96:	2240      	movs	r2, #64	@ 0x40
 8003a98:	4082      	lsls	r2, r0
 8003a9a:	4313      	orrs	r3, r2
 8003a9c:	3401      	adds	r4, #1
 8003a9e:	9304      	str	r3, [sp, #16]
 8003aa0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003aa4:	4824      	ldr	r0, [pc, #144]	@ (8003b38 <_svfiprintf_r+0x1e8>)
 8003aa6:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003aaa:	2206      	movs	r2, #6
 8003aac:	f7fc fb90 	bl	80001d0 <memchr>
 8003ab0:	2800      	cmp	r0, #0
 8003ab2:	d036      	beq.n	8003b22 <_svfiprintf_r+0x1d2>
 8003ab4:	4b21      	ldr	r3, [pc, #132]	@ (8003b3c <_svfiprintf_r+0x1ec>)
 8003ab6:	bb1b      	cbnz	r3, 8003b00 <_svfiprintf_r+0x1b0>
 8003ab8:	9b03      	ldr	r3, [sp, #12]
 8003aba:	3307      	adds	r3, #7
 8003abc:	f023 0307 	bic.w	r3, r3, #7
 8003ac0:	3308      	adds	r3, #8
 8003ac2:	9303      	str	r3, [sp, #12]
 8003ac4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003ac6:	4433      	add	r3, r6
 8003ac8:	9309      	str	r3, [sp, #36]	@ 0x24
 8003aca:	e76a      	b.n	80039a2 <_svfiprintf_r+0x52>
 8003acc:	fb0c 3202 	mla	r2, ip, r2, r3
 8003ad0:	460c      	mov	r4, r1
 8003ad2:	2001      	movs	r0, #1
 8003ad4:	e7a8      	b.n	8003a28 <_svfiprintf_r+0xd8>
 8003ad6:	2300      	movs	r3, #0
 8003ad8:	3401      	adds	r4, #1
 8003ada:	9305      	str	r3, [sp, #20]
 8003adc:	4619      	mov	r1, r3
 8003ade:	f04f 0c0a 	mov.w	ip, #10
 8003ae2:	4620      	mov	r0, r4
 8003ae4:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003ae8:	3a30      	subs	r2, #48	@ 0x30
 8003aea:	2a09      	cmp	r2, #9
 8003aec:	d903      	bls.n	8003af6 <_svfiprintf_r+0x1a6>
 8003aee:	2b00      	cmp	r3, #0
 8003af0:	d0c6      	beq.n	8003a80 <_svfiprintf_r+0x130>
 8003af2:	9105      	str	r1, [sp, #20]
 8003af4:	e7c4      	b.n	8003a80 <_svfiprintf_r+0x130>
 8003af6:	fb0c 2101 	mla	r1, ip, r1, r2
 8003afa:	4604      	mov	r4, r0
 8003afc:	2301      	movs	r3, #1
 8003afe:	e7f0      	b.n	8003ae2 <_svfiprintf_r+0x192>
 8003b00:	ab03      	add	r3, sp, #12
 8003b02:	9300      	str	r3, [sp, #0]
 8003b04:	462a      	mov	r2, r5
 8003b06:	4b0e      	ldr	r3, [pc, #56]	@ (8003b40 <_svfiprintf_r+0x1f0>)
 8003b08:	a904      	add	r1, sp, #16
 8003b0a:	4638      	mov	r0, r7
 8003b0c:	f7fd ff2c 	bl	8001968 <_printf_float>
 8003b10:	1c42      	adds	r2, r0, #1
 8003b12:	4606      	mov	r6, r0
 8003b14:	d1d6      	bne.n	8003ac4 <_svfiprintf_r+0x174>
 8003b16:	89ab      	ldrh	r3, [r5, #12]
 8003b18:	065b      	lsls	r3, r3, #25
 8003b1a:	f53f af2d 	bmi.w	8003978 <_svfiprintf_r+0x28>
 8003b1e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003b20:	e72c      	b.n	800397c <_svfiprintf_r+0x2c>
 8003b22:	ab03      	add	r3, sp, #12
 8003b24:	9300      	str	r3, [sp, #0]
 8003b26:	462a      	mov	r2, r5
 8003b28:	4b05      	ldr	r3, [pc, #20]	@ (8003b40 <_svfiprintf_r+0x1f0>)
 8003b2a:	a904      	add	r1, sp, #16
 8003b2c:	4638      	mov	r0, r7
 8003b2e:	f7fe f9b3 	bl	8001e98 <_printf_i>
 8003b32:	e7ed      	b.n	8003b10 <_svfiprintf_r+0x1c0>
 8003b34:	08004492 	.word	0x08004492
 8003b38:	0800449c 	.word	0x0800449c
 8003b3c:	08001969 	.word	0x08001969
 8003b40:	08003899 	.word	0x08003899
 8003b44:	08004498 	.word	0x08004498

08003b48 <__sflush_r>:
 8003b48:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003b4c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003b50:	0716      	lsls	r6, r2, #28
 8003b52:	4605      	mov	r5, r0
 8003b54:	460c      	mov	r4, r1
 8003b56:	d454      	bmi.n	8003c02 <__sflush_r+0xba>
 8003b58:	684b      	ldr	r3, [r1, #4]
 8003b5a:	2b00      	cmp	r3, #0
 8003b5c:	dc02      	bgt.n	8003b64 <__sflush_r+0x1c>
 8003b5e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003b60:	2b00      	cmp	r3, #0
 8003b62:	dd48      	ble.n	8003bf6 <__sflush_r+0xae>
 8003b64:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003b66:	2e00      	cmp	r6, #0
 8003b68:	d045      	beq.n	8003bf6 <__sflush_r+0xae>
 8003b6a:	2300      	movs	r3, #0
 8003b6c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003b70:	682f      	ldr	r7, [r5, #0]
 8003b72:	6a21      	ldr	r1, [r4, #32]
 8003b74:	602b      	str	r3, [r5, #0]
 8003b76:	d030      	beq.n	8003bda <__sflush_r+0x92>
 8003b78:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003b7a:	89a3      	ldrh	r3, [r4, #12]
 8003b7c:	0759      	lsls	r1, r3, #29
 8003b7e:	d505      	bpl.n	8003b8c <__sflush_r+0x44>
 8003b80:	6863      	ldr	r3, [r4, #4]
 8003b82:	1ad2      	subs	r2, r2, r3
 8003b84:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003b86:	b10b      	cbz	r3, 8003b8c <__sflush_r+0x44>
 8003b88:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003b8a:	1ad2      	subs	r2, r2, r3
 8003b8c:	2300      	movs	r3, #0
 8003b8e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003b90:	6a21      	ldr	r1, [r4, #32]
 8003b92:	4628      	mov	r0, r5
 8003b94:	47b0      	blx	r6
 8003b96:	1c43      	adds	r3, r0, #1
 8003b98:	89a3      	ldrh	r3, [r4, #12]
 8003b9a:	d106      	bne.n	8003baa <__sflush_r+0x62>
 8003b9c:	6829      	ldr	r1, [r5, #0]
 8003b9e:	291d      	cmp	r1, #29
 8003ba0:	d82b      	bhi.n	8003bfa <__sflush_r+0xb2>
 8003ba2:	4a2a      	ldr	r2, [pc, #168]	@ (8003c4c <__sflush_r+0x104>)
 8003ba4:	40ca      	lsrs	r2, r1
 8003ba6:	07d6      	lsls	r6, r2, #31
 8003ba8:	d527      	bpl.n	8003bfa <__sflush_r+0xb2>
 8003baa:	2200      	movs	r2, #0
 8003bac:	6062      	str	r2, [r4, #4]
 8003bae:	04d9      	lsls	r1, r3, #19
 8003bb0:	6922      	ldr	r2, [r4, #16]
 8003bb2:	6022      	str	r2, [r4, #0]
 8003bb4:	d504      	bpl.n	8003bc0 <__sflush_r+0x78>
 8003bb6:	1c42      	adds	r2, r0, #1
 8003bb8:	d101      	bne.n	8003bbe <__sflush_r+0x76>
 8003bba:	682b      	ldr	r3, [r5, #0]
 8003bbc:	b903      	cbnz	r3, 8003bc0 <__sflush_r+0x78>
 8003bbe:	6560      	str	r0, [r4, #84]	@ 0x54
 8003bc0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003bc2:	602f      	str	r7, [r5, #0]
 8003bc4:	b1b9      	cbz	r1, 8003bf6 <__sflush_r+0xae>
 8003bc6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003bca:	4299      	cmp	r1, r3
 8003bcc:	d002      	beq.n	8003bd4 <__sflush_r+0x8c>
 8003bce:	4628      	mov	r0, r5
 8003bd0:	f7ff fa9e 	bl	8003110 <_free_r>
 8003bd4:	2300      	movs	r3, #0
 8003bd6:	6363      	str	r3, [r4, #52]	@ 0x34
 8003bd8:	e00d      	b.n	8003bf6 <__sflush_r+0xae>
 8003bda:	2301      	movs	r3, #1
 8003bdc:	4628      	mov	r0, r5
 8003bde:	47b0      	blx	r6
 8003be0:	4602      	mov	r2, r0
 8003be2:	1c50      	adds	r0, r2, #1
 8003be4:	d1c9      	bne.n	8003b7a <__sflush_r+0x32>
 8003be6:	682b      	ldr	r3, [r5, #0]
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	d0c6      	beq.n	8003b7a <__sflush_r+0x32>
 8003bec:	2b1d      	cmp	r3, #29
 8003bee:	d001      	beq.n	8003bf4 <__sflush_r+0xac>
 8003bf0:	2b16      	cmp	r3, #22
 8003bf2:	d11e      	bne.n	8003c32 <__sflush_r+0xea>
 8003bf4:	602f      	str	r7, [r5, #0]
 8003bf6:	2000      	movs	r0, #0
 8003bf8:	e022      	b.n	8003c40 <__sflush_r+0xf8>
 8003bfa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003bfe:	b21b      	sxth	r3, r3
 8003c00:	e01b      	b.n	8003c3a <__sflush_r+0xf2>
 8003c02:	690f      	ldr	r7, [r1, #16]
 8003c04:	2f00      	cmp	r7, #0
 8003c06:	d0f6      	beq.n	8003bf6 <__sflush_r+0xae>
 8003c08:	0793      	lsls	r3, r2, #30
 8003c0a:	680e      	ldr	r6, [r1, #0]
 8003c0c:	bf08      	it	eq
 8003c0e:	694b      	ldreq	r3, [r1, #20]
 8003c10:	600f      	str	r7, [r1, #0]
 8003c12:	bf18      	it	ne
 8003c14:	2300      	movne	r3, #0
 8003c16:	eba6 0807 	sub.w	r8, r6, r7
 8003c1a:	608b      	str	r3, [r1, #8]
 8003c1c:	f1b8 0f00 	cmp.w	r8, #0
 8003c20:	dde9      	ble.n	8003bf6 <__sflush_r+0xae>
 8003c22:	6a21      	ldr	r1, [r4, #32]
 8003c24:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8003c26:	4643      	mov	r3, r8
 8003c28:	463a      	mov	r2, r7
 8003c2a:	4628      	mov	r0, r5
 8003c2c:	47b0      	blx	r6
 8003c2e:	2800      	cmp	r0, #0
 8003c30:	dc08      	bgt.n	8003c44 <__sflush_r+0xfc>
 8003c32:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003c36:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003c3a:	81a3      	strh	r3, [r4, #12]
 8003c3c:	f04f 30ff 	mov.w	r0, #4294967295
 8003c40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003c44:	4407      	add	r7, r0
 8003c46:	eba8 0800 	sub.w	r8, r8, r0
 8003c4a:	e7e7      	b.n	8003c1c <__sflush_r+0xd4>
 8003c4c:	20400001 	.word	0x20400001

08003c50 <_fflush_r>:
 8003c50:	b538      	push	{r3, r4, r5, lr}
 8003c52:	690b      	ldr	r3, [r1, #16]
 8003c54:	4605      	mov	r5, r0
 8003c56:	460c      	mov	r4, r1
 8003c58:	b913      	cbnz	r3, 8003c60 <_fflush_r+0x10>
 8003c5a:	2500      	movs	r5, #0
 8003c5c:	4628      	mov	r0, r5
 8003c5e:	bd38      	pop	{r3, r4, r5, pc}
 8003c60:	b118      	cbz	r0, 8003c6a <_fflush_r+0x1a>
 8003c62:	6a03      	ldr	r3, [r0, #32]
 8003c64:	b90b      	cbnz	r3, 8003c6a <_fflush_r+0x1a>
 8003c66:	f7fe fac1 	bl	80021ec <__sinit>
 8003c6a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003c6e:	2b00      	cmp	r3, #0
 8003c70:	d0f3      	beq.n	8003c5a <_fflush_r+0xa>
 8003c72:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003c74:	07d0      	lsls	r0, r2, #31
 8003c76:	d404      	bmi.n	8003c82 <_fflush_r+0x32>
 8003c78:	0599      	lsls	r1, r3, #22
 8003c7a:	d402      	bmi.n	8003c82 <_fflush_r+0x32>
 8003c7c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003c7e:	f7fe fbde 	bl	800243e <__retarget_lock_acquire_recursive>
 8003c82:	4628      	mov	r0, r5
 8003c84:	4621      	mov	r1, r4
 8003c86:	f7ff ff5f 	bl	8003b48 <__sflush_r>
 8003c8a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003c8c:	07da      	lsls	r2, r3, #31
 8003c8e:	4605      	mov	r5, r0
 8003c90:	d4e4      	bmi.n	8003c5c <_fflush_r+0xc>
 8003c92:	89a3      	ldrh	r3, [r4, #12]
 8003c94:	059b      	lsls	r3, r3, #22
 8003c96:	d4e1      	bmi.n	8003c5c <_fflush_r+0xc>
 8003c98:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003c9a:	f7fe fbd1 	bl	8002440 <__retarget_lock_release_recursive>
 8003c9e:	e7dd      	b.n	8003c5c <_fflush_r+0xc>

08003ca0 <memmove>:
 8003ca0:	4288      	cmp	r0, r1
 8003ca2:	b510      	push	{r4, lr}
 8003ca4:	eb01 0402 	add.w	r4, r1, r2
 8003ca8:	d902      	bls.n	8003cb0 <memmove+0x10>
 8003caa:	4284      	cmp	r4, r0
 8003cac:	4623      	mov	r3, r4
 8003cae:	d807      	bhi.n	8003cc0 <memmove+0x20>
 8003cb0:	1e43      	subs	r3, r0, #1
 8003cb2:	42a1      	cmp	r1, r4
 8003cb4:	d008      	beq.n	8003cc8 <memmove+0x28>
 8003cb6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003cba:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003cbe:	e7f8      	b.n	8003cb2 <memmove+0x12>
 8003cc0:	4402      	add	r2, r0
 8003cc2:	4601      	mov	r1, r0
 8003cc4:	428a      	cmp	r2, r1
 8003cc6:	d100      	bne.n	8003cca <memmove+0x2a>
 8003cc8:	bd10      	pop	{r4, pc}
 8003cca:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003cce:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003cd2:	e7f7      	b.n	8003cc4 <memmove+0x24>

08003cd4 <__assert_func>:
 8003cd4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003cd6:	4614      	mov	r4, r2
 8003cd8:	461a      	mov	r2, r3
 8003cda:	4b09      	ldr	r3, [pc, #36]	@ (8003d00 <__assert_func+0x2c>)
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	4605      	mov	r5, r0
 8003ce0:	68d8      	ldr	r0, [r3, #12]
 8003ce2:	b14c      	cbz	r4, 8003cf8 <__assert_func+0x24>
 8003ce4:	4b07      	ldr	r3, [pc, #28]	@ (8003d04 <__assert_func+0x30>)
 8003ce6:	9100      	str	r1, [sp, #0]
 8003ce8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003cec:	4906      	ldr	r1, [pc, #24]	@ (8003d08 <__assert_func+0x34>)
 8003cee:	462b      	mov	r3, r5
 8003cf0:	f000 f870 	bl	8003dd4 <fiprintf>
 8003cf4:	f000 f880 	bl	8003df8 <abort>
 8003cf8:	4b04      	ldr	r3, [pc, #16]	@ (8003d0c <__assert_func+0x38>)
 8003cfa:	461c      	mov	r4, r3
 8003cfc:	e7f3      	b.n	8003ce6 <__assert_func+0x12>
 8003cfe:	bf00      	nop
 8003d00:	2000000c 	.word	0x2000000c
 8003d04:	080044ad 	.word	0x080044ad
 8003d08:	080044ba 	.word	0x080044ba
 8003d0c:	080044e8 	.word	0x080044e8

08003d10 <_calloc_r>:
 8003d10:	b570      	push	{r4, r5, r6, lr}
 8003d12:	fba1 5402 	umull	r5, r4, r1, r2
 8003d16:	b934      	cbnz	r4, 8003d26 <_calloc_r+0x16>
 8003d18:	4629      	mov	r1, r5
 8003d1a:	f7fd fcf9 	bl	8001710 <_malloc_r>
 8003d1e:	4606      	mov	r6, r0
 8003d20:	b928      	cbnz	r0, 8003d2e <_calloc_r+0x1e>
 8003d22:	4630      	mov	r0, r6
 8003d24:	bd70      	pop	{r4, r5, r6, pc}
 8003d26:	220c      	movs	r2, #12
 8003d28:	6002      	str	r2, [r0, #0]
 8003d2a:	2600      	movs	r6, #0
 8003d2c:	e7f9      	b.n	8003d22 <_calloc_r+0x12>
 8003d2e:	462a      	mov	r2, r5
 8003d30:	4621      	mov	r1, r4
 8003d32:	f7fe faf6 	bl	8002322 <memset>
 8003d36:	e7f4      	b.n	8003d22 <_calloc_r+0x12>

08003d38 <__ascii_mbtowc>:
 8003d38:	b082      	sub	sp, #8
 8003d3a:	b901      	cbnz	r1, 8003d3e <__ascii_mbtowc+0x6>
 8003d3c:	a901      	add	r1, sp, #4
 8003d3e:	b142      	cbz	r2, 8003d52 <__ascii_mbtowc+0x1a>
 8003d40:	b14b      	cbz	r3, 8003d56 <__ascii_mbtowc+0x1e>
 8003d42:	7813      	ldrb	r3, [r2, #0]
 8003d44:	600b      	str	r3, [r1, #0]
 8003d46:	7812      	ldrb	r2, [r2, #0]
 8003d48:	1e10      	subs	r0, r2, #0
 8003d4a:	bf18      	it	ne
 8003d4c:	2001      	movne	r0, #1
 8003d4e:	b002      	add	sp, #8
 8003d50:	4770      	bx	lr
 8003d52:	4610      	mov	r0, r2
 8003d54:	e7fb      	b.n	8003d4e <__ascii_mbtowc+0x16>
 8003d56:	f06f 0001 	mvn.w	r0, #1
 8003d5a:	e7f8      	b.n	8003d4e <__ascii_mbtowc+0x16>

08003d5c <_realloc_r>:
 8003d5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d60:	4607      	mov	r7, r0
 8003d62:	4614      	mov	r4, r2
 8003d64:	460d      	mov	r5, r1
 8003d66:	b921      	cbnz	r1, 8003d72 <_realloc_r+0x16>
 8003d68:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003d6c:	4611      	mov	r1, r2
 8003d6e:	f7fd bccf 	b.w	8001710 <_malloc_r>
 8003d72:	b92a      	cbnz	r2, 8003d80 <_realloc_r+0x24>
 8003d74:	f7ff f9cc 	bl	8003110 <_free_r>
 8003d78:	4625      	mov	r5, r4
 8003d7a:	4628      	mov	r0, r5
 8003d7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003d80:	f000 f841 	bl	8003e06 <_malloc_usable_size_r>
 8003d84:	4284      	cmp	r4, r0
 8003d86:	4606      	mov	r6, r0
 8003d88:	d802      	bhi.n	8003d90 <_realloc_r+0x34>
 8003d8a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8003d8e:	d8f4      	bhi.n	8003d7a <_realloc_r+0x1e>
 8003d90:	4621      	mov	r1, r4
 8003d92:	4638      	mov	r0, r7
 8003d94:	f7fd fcbc 	bl	8001710 <_malloc_r>
 8003d98:	4680      	mov	r8, r0
 8003d9a:	b908      	cbnz	r0, 8003da0 <_realloc_r+0x44>
 8003d9c:	4645      	mov	r5, r8
 8003d9e:	e7ec      	b.n	8003d7a <_realloc_r+0x1e>
 8003da0:	42b4      	cmp	r4, r6
 8003da2:	4622      	mov	r2, r4
 8003da4:	4629      	mov	r1, r5
 8003da6:	bf28      	it	cs
 8003da8:	4632      	movcs	r2, r6
 8003daa:	f7fe fb4a 	bl	8002442 <memcpy>
 8003dae:	4629      	mov	r1, r5
 8003db0:	4638      	mov	r0, r7
 8003db2:	f7ff f9ad 	bl	8003110 <_free_r>
 8003db6:	e7f1      	b.n	8003d9c <_realloc_r+0x40>

08003db8 <__ascii_wctomb>:
 8003db8:	4603      	mov	r3, r0
 8003dba:	4608      	mov	r0, r1
 8003dbc:	b141      	cbz	r1, 8003dd0 <__ascii_wctomb+0x18>
 8003dbe:	2aff      	cmp	r2, #255	@ 0xff
 8003dc0:	d904      	bls.n	8003dcc <__ascii_wctomb+0x14>
 8003dc2:	228a      	movs	r2, #138	@ 0x8a
 8003dc4:	601a      	str	r2, [r3, #0]
 8003dc6:	f04f 30ff 	mov.w	r0, #4294967295
 8003dca:	4770      	bx	lr
 8003dcc:	700a      	strb	r2, [r1, #0]
 8003dce:	2001      	movs	r0, #1
 8003dd0:	4770      	bx	lr
	...

08003dd4 <fiprintf>:
 8003dd4:	b40e      	push	{r1, r2, r3}
 8003dd6:	b503      	push	{r0, r1, lr}
 8003dd8:	4601      	mov	r1, r0
 8003dda:	ab03      	add	r3, sp, #12
 8003ddc:	4805      	ldr	r0, [pc, #20]	@ (8003df4 <fiprintf+0x20>)
 8003dde:	f853 2b04 	ldr.w	r2, [r3], #4
 8003de2:	6800      	ldr	r0, [r0, #0]
 8003de4:	9301      	str	r3, [sp, #4]
 8003de6:	f000 f83f 	bl	8003e68 <_vfiprintf_r>
 8003dea:	b002      	add	sp, #8
 8003dec:	f85d eb04 	ldr.w	lr, [sp], #4
 8003df0:	b003      	add	sp, #12
 8003df2:	4770      	bx	lr
 8003df4:	2000000c 	.word	0x2000000c

08003df8 <abort>:
 8003df8:	b508      	push	{r3, lr}
 8003dfa:	2006      	movs	r0, #6
 8003dfc:	f000 fa08 	bl	8004210 <raise>
 8003e00:	2001      	movs	r0, #1
 8003e02:	f7fd fb83 	bl	800150c <_exit>

08003e06 <_malloc_usable_size_r>:
 8003e06:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003e0a:	1f18      	subs	r0, r3, #4
 8003e0c:	2b00      	cmp	r3, #0
 8003e0e:	bfbc      	itt	lt
 8003e10:	580b      	ldrlt	r3, [r1, r0]
 8003e12:	18c0      	addlt	r0, r0, r3
 8003e14:	4770      	bx	lr

08003e16 <__sfputc_r>:
 8003e16:	6893      	ldr	r3, [r2, #8]
 8003e18:	3b01      	subs	r3, #1
 8003e1a:	2b00      	cmp	r3, #0
 8003e1c:	b410      	push	{r4}
 8003e1e:	6093      	str	r3, [r2, #8]
 8003e20:	da08      	bge.n	8003e34 <__sfputc_r+0x1e>
 8003e22:	6994      	ldr	r4, [r2, #24]
 8003e24:	42a3      	cmp	r3, r4
 8003e26:	db01      	blt.n	8003e2c <__sfputc_r+0x16>
 8003e28:	290a      	cmp	r1, #10
 8003e2a:	d103      	bne.n	8003e34 <__sfputc_r+0x1e>
 8003e2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003e30:	f000 b932 	b.w	8004098 <__swbuf_r>
 8003e34:	6813      	ldr	r3, [r2, #0]
 8003e36:	1c58      	adds	r0, r3, #1
 8003e38:	6010      	str	r0, [r2, #0]
 8003e3a:	7019      	strb	r1, [r3, #0]
 8003e3c:	4608      	mov	r0, r1
 8003e3e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003e42:	4770      	bx	lr

08003e44 <__sfputs_r>:
 8003e44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003e46:	4606      	mov	r6, r0
 8003e48:	460f      	mov	r7, r1
 8003e4a:	4614      	mov	r4, r2
 8003e4c:	18d5      	adds	r5, r2, r3
 8003e4e:	42ac      	cmp	r4, r5
 8003e50:	d101      	bne.n	8003e56 <__sfputs_r+0x12>
 8003e52:	2000      	movs	r0, #0
 8003e54:	e007      	b.n	8003e66 <__sfputs_r+0x22>
 8003e56:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e5a:	463a      	mov	r2, r7
 8003e5c:	4630      	mov	r0, r6
 8003e5e:	f7ff ffda 	bl	8003e16 <__sfputc_r>
 8003e62:	1c43      	adds	r3, r0, #1
 8003e64:	d1f3      	bne.n	8003e4e <__sfputs_r+0xa>
 8003e66:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08003e68 <_vfiprintf_r>:
 8003e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003e6c:	460d      	mov	r5, r1
 8003e6e:	b09d      	sub	sp, #116	@ 0x74
 8003e70:	4614      	mov	r4, r2
 8003e72:	4698      	mov	r8, r3
 8003e74:	4606      	mov	r6, r0
 8003e76:	b118      	cbz	r0, 8003e80 <_vfiprintf_r+0x18>
 8003e78:	6a03      	ldr	r3, [r0, #32]
 8003e7a:	b90b      	cbnz	r3, 8003e80 <_vfiprintf_r+0x18>
 8003e7c:	f7fe f9b6 	bl	80021ec <__sinit>
 8003e80:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003e82:	07d9      	lsls	r1, r3, #31
 8003e84:	d405      	bmi.n	8003e92 <_vfiprintf_r+0x2a>
 8003e86:	89ab      	ldrh	r3, [r5, #12]
 8003e88:	059a      	lsls	r2, r3, #22
 8003e8a:	d402      	bmi.n	8003e92 <_vfiprintf_r+0x2a>
 8003e8c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003e8e:	f7fe fad6 	bl	800243e <__retarget_lock_acquire_recursive>
 8003e92:	89ab      	ldrh	r3, [r5, #12]
 8003e94:	071b      	lsls	r3, r3, #28
 8003e96:	d501      	bpl.n	8003e9c <_vfiprintf_r+0x34>
 8003e98:	692b      	ldr	r3, [r5, #16]
 8003e9a:	b99b      	cbnz	r3, 8003ec4 <_vfiprintf_r+0x5c>
 8003e9c:	4629      	mov	r1, r5
 8003e9e:	4630      	mov	r0, r6
 8003ea0:	f000 f938 	bl	8004114 <__swsetup_r>
 8003ea4:	b170      	cbz	r0, 8003ec4 <_vfiprintf_r+0x5c>
 8003ea6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003ea8:	07dc      	lsls	r4, r3, #31
 8003eaa:	d504      	bpl.n	8003eb6 <_vfiprintf_r+0x4e>
 8003eac:	f04f 30ff 	mov.w	r0, #4294967295
 8003eb0:	b01d      	add	sp, #116	@ 0x74
 8003eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003eb6:	89ab      	ldrh	r3, [r5, #12]
 8003eb8:	0598      	lsls	r0, r3, #22
 8003eba:	d4f7      	bmi.n	8003eac <_vfiprintf_r+0x44>
 8003ebc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003ebe:	f7fe fabf 	bl	8002440 <__retarget_lock_release_recursive>
 8003ec2:	e7f3      	b.n	8003eac <_vfiprintf_r+0x44>
 8003ec4:	2300      	movs	r3, #0
 8003ec6:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ec8:	2320      	movs	r3, #32
 8003eca:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003ece:	f8cd 800c 	str.w	r8, [sp, #12]
 8003ed2:	2330      	movs	r3, #48	@ 0x30
 8003ed4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8004084 <_vfiprintf_r+0x21c>
 8003ed8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003edc:	f04f 0901 	mov.w	r9, #1
 8003ee0:	4623      	mov	r3, r4
 8003ee2:	469a      	mov	sl, r3
 8003ee4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003ee8:	b10a      	cbz	r2, 8003eee <_vfiprintf_r+0x86>
 8003eea:	2a25      	cmp	r2, #37	@ 0x25
 8003eec:	d1f9      	bne.n	8003ee2 <_vfiprintf_r+0x7a>
 8003eee:	ebba 0b04 	subs.w	fp, sl, r4
 8003ef2:	d00b      	beq.n	8003f0c <_vfiprintf_r+0xa4>
 8003ef4:	465b      	mov	r3, fp
 8003ef6:	4622      	mov	r2, r4
 8003ef8:	4629      	mov	r1, r5
 8003efa:	4630      	mov	r0, r6
 8003efc:	f7ff ffa2 	bl	8003e44 <__sfputs_r>
 8003f00:	3001      	adds	r0, #1
 8003f02:	f000 80a7 	beq.w	8004054 <_vfiprintf_r+0x1ec>
 8003f06:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003f08:	445a      	add	r2, fp
 8003f0a:	9209      	str	r2, [sp, #36]	@ 0x24
 8003f0c:	f89a 3000 	ldrb.w	r3, [sl]
 8003f10:	2b00      	cmp	r3, #0
 8003f12:	f000 809f 	beq.w	8004054 <_vfiprintf_r+0x1ec>
 8003f16:	2300      	movs	r3, #0
 8003f18:	f04f 32ff 	mov.w	r2, #4294967295
 8003f1c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003f20:	f10a 0a01 	add.w	sl, sl, #1
 8003f24:	9304      	str	r3, [sp, #16]
 8003f26:	9307      	str	r3, [sp, #28]
 8003f28:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003f2c:	931a      	str	r3, [sp, #104]	@ 0x68
 8003f2e:	4654      	mov	r4, sl
 8003f30:	2205      	movs	r2, #5
 8003f32:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f36:	4853      	ldr	r0, [pc, #332]	@ (8004084 <_vfiprintf_r+0x21c>)
 8003f38:	f7fc f94a 	bl	80001d0 <memchr>
 8003f3c:	9a04      	ldr	r2, [sp, #16]
 8003f3e:	b9d8      	cbnz	r0, 8003f78 <_vfiprintf_r+0x110>
 8003f40:	06d1      	lsls	r1, r2, #27
 8003f42:	bf44      	itt	mi
 8003f44:	2320      	movmi	r3, #32
 8003f46:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003f4a:	0713      	lsls	r3, r2, #28
 8003f4c:	bf44      	itt	mi
 8003f4e:	232b      	movmi	r3, #43	@ 0x2b
 8003f50:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003f54:	f89a 3000 	ldrb.w	r3, [sl]
 8003f58:	2b2a      	cmp	r3, #42	@ 0x2a
 8003f5a:	d015      	beq.n	8003f88 <_vfiprintf_r+0x120>
 8003f5c:	9a07      	ldr	r2, [sp, #28]
 8003f5e:	4654      	mov	r4, sl
 8003f60:	2000      	movs	r0, #0
 8003f62:	f04f 0c0a 	mov.w	ip, #10
 8003f66:	4621      	mov	r1, r4
 8003f68:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003f6c:	3b30      	subs	r3, #48	@ 0x30
 8003f6e:	2b09      	cmp	r3, #9
 8003f70:	d94b      	bls.n	800400a <_vfiprintf_r+0x1a2>
 8003f72:	b1b0      	cbz	r0, 8003fa2 <_vfiprintf_r+0x13a>
 8003f74:	9207      	str	r2, [sp, #28]
 8003f76:	e014      	b.n	8003fa2 <_vfiprintf_r+0x13a>
 8003f78:	eba0 0308 	sub.w	r3, r0, r8
 8003f7c:	fa09 f303 	lsl.w	r3, r9, r3
 8003f80:	4313      	orrs	r3, r2
 8003f82:	9304      	str	r3, [sp, #16]
 8003f84:	46a2      	mov	sl, r4
 8003f86:	e7d2      	b.n	8003f2e <_vfiprintf_r+0xc6>
 8003f88:	9b03      	ldr	r3, [sp, #12]
 8003f8a:	1d19      	adds	r1, r3, #4
 8003f8c:	681b      	ldr	r3, [r3, #0]
 8003f8e:	9103      	str	r1, [sp, #12]
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	bfbb      	ittet	lt
 8003f94:	425b      	neglt	r3, r3
 8003f96:	f042 0202 	orrlt.w	r2, r2, #2
 8003f9a:	9307      	strge	r3, [sp, #28]
 8003f9c:	9307      	strlt	r3, [sp, #28]
 8003f9e:	bfb8      	it	lt
 8003fa0:	9204      	strlt	r2, [sp, #16]
 8003fa2:	7823      	ldrb	r3, [r4, #0]
 8003fa4:	2b2e      	cmp	r3, #46	@ 0x2e
 8003fa6:	d10a      	bne.n	8003fbe <_vfiprintf_r+0x156>
 8003fa8:	7863      	ldrb	r3, [r4, #1]
 8003faa:	2b2a      	cmp	r3, #42	@ 0x2a
 8003fac:	d132      	bne.n	8004014 <_vfiprintf_r+0x1ac>
 8003fae:	9b03      	ldr	r3, [sp, #12]
 8003fb0:	1d1a      	adds	r2, r3, #4
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	9203      	str	r2, [sp, #12]
 8003fb6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003fba:	3402      	adds	r4, #2
 8003fbc:	9305      	str	r3, [sp, #20]
 8003fbe:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8004094 <_vfiprintf_r+0x22c>
 8003fc2:	7821      	ldrb	r1, [r4, #0]
 8003fc4:	2203      	movs	r2, #3
 8003fc6:	4650      	mov	r0, sl
 8003fc8:	f7fc f902 	bl	80001d0 <memchr>
 8003fcc:	b138      	cbz	r0, 8003fde <_vfiprintf_r+0x176>
 8003fce:	9b04      	ldr	r3, [sp, #16]
 8003fd0:	eba0 000a 	sub.w	r0, r0, sl
 8003fd4:	2240      	movs	r2, #64	@ 0x40
 8003fd6:	4082      	lsls	r2, r0
 8003fd8:	4313      	orrs	r3, r2
 8003fda:	3401      	adds	r4, #1
 8003fdc:	9304      	str	r3, [sp, #16]
 8003fde:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003fe2:	4829      	ldr	r0, [pc, #164]	@ (8004088 <_vfiprintf_r+0x220>)
 8003fe4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003fe8:	2206      	movs	r2, #6
 8003fea:	f7fc f8f1 	bl	80001d0 <memchr>
 8003fee:	2800      	cmp	r0, #0
 8003ff0:	d03f      	beq.n	8004072 <_vfiprintf_r+0x20a>
 8003ff2:	4b26      	ldr	r3, [pc, #152]	@ (800408c <_vfiprintf_r+0x224>)
 8003ff4:	bb1b      	cbnz	r3, 800403e <_vfiprintf_r+0x1d6>
 8003ff6:	9b03      	ldr	r3, [sp, #12]
 8003ff8:	3307      	adds	r3, #7
 8003ffa:	f023 0307 	bic.w	r3, r3, #7
 8003ffe:	3308      	adds	r3, #8
 8004000:	9303      	str	r3, [sp, #12]
 8004002:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004004:	443b      	add	r3, r7
 8004006:	9309      	str	r3, [sp, #36]	@ 0x24
 8004008:	e76a      	b.n	8003ee0 <_vfiprintf_r+0x78>
 800400a:	fb0c 3202 	mla	r2, ip, r2, r3
 800400e:	460c      	mov	r4, r1
 8004010:	2001      	movs	r0, #1
 8004012:	e7a8      	b.n	8003f66 <_vfiprintf_r+0xfe>
 8004014:	2300      	movs	r3, #0
 8004016:	3401      	adds	r4, #1
 8004018:	9305      	str	r3, [sp, #20]
 800401a:	4619      	mov	r1, r3
 800401c:	f04f 0c0a 	mov.w	ip, #10
 8004020:	4620      	mov	r0, r4
 8004022:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004026:	3a30      	subs	r2, #48	@ 0x30
 8004028:	2a09      	cmp	r2, #9
 800402a:	d903      	bls.n	8004034 <_vfiprintf_r+0x1cc>
 800402c:	2b00      	cmp	r3, #0
 800402e:	d0c6      	beq.n	8003fbe <_vfiprintf_r+0x156>
 8004030:	9105      	str	r1, [sp, #20]
 8004032:	e7c4      	b.n	8003fbe <_vfiprintf_r+0x156>
 8004034:	fb0c 2101 	mla	r1, ip, r1, r2
 8004038:	4604      	mov	r4, r0
 800403a:	2301      	movs	r3, #1
 800403c:	e7f0      	b.n	8004020 <_vfiprintf_r+0x1b8>
 800403e:	ab03      	add	r3, sp, #12
 8004040:	9300      	str	r3, [sp, #0]
 8004042:	462a      	mov	r2, r5
 8004044:	4b12      	ldr	r3, [pc, #72]	@ (8004090 <_vfiprintf_r+0x228>)
 8004046:	a904      	add	r1, sp, #16
 8004048:	4630      	mov	r0, r6
 800404a:	f7fd fc8d 	bl	8001968 <_printf_float>
 800404e:	4607      	mov	r7, r0
 8004050:	1c78      	adds	r0, r7, #1
 8004052:	d1d6      	bne.n	8004002 <_vfiprintf_r+0x19a>
 8004054:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004056:	07d9      	lsls	r1, r3, #31
 8004058:	d405      	bmi.n	8004066 <_vfiprintf_r+0x1fe>
 800405a:	89ab      	ldrh	r3, [r5, #12]
 800405c:	059a      	lsls	r2, r3, #22
 800405e:	d402      	bmi.n	8004066 <_vfiprintf_r+0x1fe>
 8004060:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004062:	f7fe f9ed 	bl	8002440 <__retarget_lock_release_recursive>
 8004066:	89ab      	ldrh	r3, [r5, #12]
 8004068:	065b      	lsls	r3, r3, #25
 800406a:	f53f af1f 	bmi.w	8003eac <_vfiprintf_r+0x44>
 800406e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004070:	e71e      	b.n	8003eb0 <_vfiprintf_r+0x48>
 8004072:	ab03      	add	r3, sp, #12
 8004074:	9300      	str	r3, [sp, #0]
 8004076:	462a      	mov	r2, r5
 8004078:	4b05      	ldr	r3, [pc, #20]	@ (8004090 <_vfiprintf_r+0x228>)
 800407a:	a904      	add	r1, sp, #16
 800407c:	4630      	mov	r0, r6
 800407e:	f7fd ff0b 	bl	8001e98 <_printf_i>
 8004082:	e7e4      	b.n	800404e <_vfiprintf_r+0x1e6>
 8004084:	08004492 	.word	0x08004492
 8004088:	0800449c 	.word	0x0800449c
 800408c:	08001969 	.word	0x08001969
 8004090:	08003e45 	.word	0x08003e45
 8004094:	08004498 	.word	0x08004498

08004098 <__swbuf_r>:
 8004098:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800409a:	460e      	mov	r6, r1
 800409c:	4614      	mov	r4, r2
 800409e:	4605      	mov	r5, r0
 80040a0:	b118      	cbz	r0, 80040aa <__swbuf_r+0x12>
 80040a2:	6a03      	ldr	r3, [r0, #32]
 80040a4:	b90b      	cbnz	r3, 80040aa <__swbuf_r+0x12>
 80040a6:	f7fe f8a1 	bl	80021ec <__sinit>
 80040aa:	69a3      	ldr	r3, [r4, #24]
 80040ac:	60a3      	str	r3, [r4, #8]
 80040ae:	89a3      	ldrh	r3, [r4, #12]
 80040b0:	071a      	lsls	r2, r3, #28
 80040b2:	d501      	bpl.n	80040b8 <__swbuf_r+0x20>
 80040b4:	6923      	ldr	r3, [r4, #16]
 80040b6:	b943      	cbnz	r3, 80040ca <__swbuf_r+0x32>
 80040b8:	4621      	mov	r1, r4
 80040ba:	4628      	mov	r0, r5
 80040bc:	f000 f82a 	bl	8004114 <__swsetup_r>
 80040c0:	b118      	cbz	r0, 80040ca <__swbuf_r+0x32>
 80040c2:	f04f 37ff 	mov.w	r7, #4294967295
 80040c6:	4638      	mov	r0, r7
 80040c8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80040ca:	6823      	ldr	r3, [r4, #0]
 80040cc:	6922      	ldr	r2, [r4, #16]
 80040ce:	1a98      	subs	r0, r3, r2
 80040d0:	6963      	ldr	r3, [r4, #20]
 80040d2:	b2f6      	uxtb	r6, r6
 80040d4:	4283      	cmp	r3, r0
 80040d6:	4637      	mov	r7, r6
 80040d8:	dc05      	bgt.n	80040e6 <__swbuf_r+0x4e>
 80040da:	4621      	mov	r1, r4
 80040dc:	4628      	mov	r0, r5
 80040de:	f7ff fdb7 	bl	8003c50 <_fflush_r>
 80040e2:	2800      	cmp	r0, #0
 80040e4:	d1ed      	bne.n	80040c2 <__swbuf_r+0x2a>
 80040e6:	68a3      	ldr	r3, [r4, #8]
 80040e8:	3b01      	subs	r3, #1
 80040ea:	60a3      	str	r3, [r4, #8]
 80040ec:	6823      	ldr	r3, [r4, #0]
 80040ee:	1c5a      	adds	r2, r3, #1
 80040f0:	6022      	str	r2, [r4, #0]
 80040f2:	701e      	strb	r6, [r3, #0]
 80040f4:	6962      	ldr	r2, [r4, #20]
 80040f6:	1c43      	adds	r3, r0, #1
 80040f8:	429a      	cmp	r2, r3
 80040fa:	d004      	beq.n	8004106 <__swbuf_r+0x6e>
 80040fc:	89a3      	ldrh	r3, [r4, #12]
 80040fe:	07db      	lsls	r3, r3, #31
 8004100:	d5e1      	bpl.n	80040c6 <__swbuf_r+0x2e>
 8004102:	2e0a      	cmp	r6, #10
 8004104:	d1df      	bne.n	80040c6 <__swbuf_r+0x2e>
 8004106:	4621      	mov	r1, r4
 8004108:	4628      	mov	r0, r5
 800410a:	f7ff fda1 	bl	8003c50 <_fflush_r>
 800410e:	2800      	cmp	r0, #0
 8004110:	d0d9      	beq.n	80040c6 <__swbuf_r+0x2e>
 8004112:	e7d6      	b.n	80040c2 <__swbuf_r+0x2a>

08004114 <__swsetup_r>:
 8004114:	b538      	push	{r3, r4, r5, lr}
 8004116:	4b29      	ldr	r3, [pc, #164]	@ (80041bc <__swsetup_r+0xa8>)
 8004118:	4605      	mov	r5, r0
 800411a:	6818      	ldr	r0, [r3, #0]
 800411c:	460c      	mov	r4, r1
 800411e:	b118      	cbz	r0, 8004128 <__swsetup_r+0x14>
 8004120:	6a03      	ldr	r3, [r0, #32]
 8004122:	b90b      	cbnz	r3, 8004128 <__swsetup_r+0x14>
 8004124:	f7fe f862 	bl	80021ec <__sinit>
 8004128:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800412c:	0719      	lsls	r1, r3, #28
 800412e:	d422      	bmi.n	8004176 <__swsetup_r+0x62>
 8004130:	06da      	lsls	r2, r3, #27
 8004132:	d407      	bmi.n	8004144 <__swsetup_r+0x30>
 8004134:	2209      	movs	r2, #9
 8004136:	602a      	str	r2, [r5, #0]
 8004138:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800413c:	81a3      	strh	r3, [r4, #12]
 800413e:	f04f 30ff 	mov.w	r0, #4294967295
 8004142:	e033      	b.n	80041ac <__swsetup_r+0x98>
 8004144:	0758      	lsls	r0, r3, #29
 8004146:	d512      	bpl.n	800416e <__swsetup_r+0x5a>
 8004148:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800414a:	b141      	cbz	r1, 800415e <__swsetup_r+0x4a>
 800414c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004150:	4299      	cmp	r1, r3
 8004152:	d002      	beq.n	800415a <__swsetup_r+0x46>
 8004154:	4628      	mov	r0, r5
 8004156:	f7fe ffdb 	bl	8003110 <_free_r>
 800415a:	2300      	movs	r3, #0
 800415c:	6363      	str	r3, [r4, #52]	@ 0x34
 800415e:	89a3      	ldrh	r3, [r4, #12]
 8004160:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8004164:	81a3      	strh	r3, [r4, #12]
 8004166:	2300      	movs	r3, #0
 8004168:	6063      	str	r3, [r4, #4]
 800416a:	6923      	ldr	r3, [r4, #16]
 800416c:	6023      	str	r3, [r4, #0]
 800416e:	89a3      	ldrh	r3, [r4, #12]
 8004170:	f043 0308 	orr.w	r3, r3, #8
 8004174:	81a3      	strh	r3, [r4, #12]
 8004176:	6923      	ldr	r3, [r4, #16]
 8004178:	b94b      	cbnz	r3, 800418e <__swsetup_r+0x7a>
 800417a:	89a3      	ldrh	r3, [r4, #12]
 800417c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8004180:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004184:	d003      	beq.n	800418e <__swsetup_r+0x7a>
 8004186:	4621      	mov	r1, r4
 8004188:	4628      	mov	r0, r5
 800418a:	f000 f883 	bl	8004294 <__smakebuf_r>
 800418e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004192:	f013 0201 	ands.w	r2, r3, #1
 8004196:	d00a      	beq.n	80041ae <__swsetup_r+0x9a>
 8004198:	2200      	movs	r2, #0
 800419a:	60a2      	str	r2, [r4, #8]
 800419c:	6962      	ldr	r2, [r4, #20]
 800419e:	4252      	negs	r2, r2
 80041a0:	61a2      	str	r2, [r4, #24]
 80041a2:	6922      	ldr	r2, [r4, #16]
 80041a4:	b942      	cbnz	r2, 80041b8 <__swsetup_r+0xa4>
 80041a6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80041aa:	d1c5      	bne.n	8004138 <__swsetup_r+0x24>
 80041ac:	bd38      	pop	{r3, r4, r5, pc}
 80041ae:	0799      	lsls	r1, r3, #30
 80041b0:	bf58      	it	pl
 80041b2:	6962      	ldrpl	r2, [r4, #20]
 80041b4:	60a2      	str	r2, [r4, #8]
 80041b6:	e7f4      	b.n	80041a2 <__swsetup_r+0x8e>
 80041b8:	2000      	movs	r0, #0
 80041ba:	e7f7      	b.n	80041ac <__swsetup_r+0x98>
 80041bc:	2000000c 	.word	0x2000000c

080041c0 <_raise_r>:
 80041c0:	291f      	cmp	r1, #31
 80041c2:	b538      	push	{r3, r4, r5, lr}
 80041c4:	4605      	mov	r5, r0
 80041c6:	460c      	mov	r4, r1
 80041c8:	d904      	bls.n	80041d4 <_raise_r+0x14>
 80041ca:	2316      	movs	r3, #22
 80041cc:	6003      	str	r3, [r0, #0]
 80041ce:	f04f 30ff 	mov.w	r0, #4294967295
 80041d2:	bd38      	pop	{r3, r4, r5, pc}
 80041d4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80041d6:	b112      	cbz	r2, 80041de <_raise_r+0x1e>
 80041d8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80041dc:	b94b      	cbnz	r3, 80041f2 <_raise_r+0x32>
 80041de:	4628      	mov	r0, r5
 80041e0:	f000 f830 	bl	8004244 <_getpid_r>
 80041e4:	4622      	mov	r2, r4
 80041e6:	4601      	mov	r1, r0
 80041e8:	4628      	mov	r0, r5
 80041ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80041ee:	f000 b817 	b.w	8004220 <_kill_r>
 80041f2:	2b01      	cmp	r3, #1
 80041f4:	d00a      	beq.n	800420c <_raise_r+0x4c>
 80041f6:	1c59      	adds	r1, r3, #1
 80041f8:	d103      	bne.n	8004202 <_raise_r+0x42>
 80041fa:	2316      	movs	r3, #22
 80041fc:	6003      	str	r3, [r0, #0]
 80041fe:	2001      	movs	r0, #1
 8004200:	e7e7      	b.n	80041d2 <_raise_r+0x12>
 8004202:	2100      	movs	r1, #0
 8004204:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004208:	4620      	mov	r0, r4
 800420a:	4798      	blx	r3
 800420c:	2000      	movs	r0, #0
 800420e:	e7e0      	b.n	80041d2 <_raise_r+0x12>

08004210 <raise>:
 8004210:	4b02      	ldr	r3, [pc, #8]	@ (800421c <raise+0xc>)
 8004212:	4601      	mov	r1, r0
 8004214:	6818      	ldr	r0, [r3, #0]
 8004216:	f7ff bfd3 	b.w	80041c0 <_raise_r>
 800421a:	bf00      	nop
 800421c:	2000000c 	.word	0x2000000c

08004220 <_kill_r>:
 8004220:	b538      	push	{r3, r4, r5, lr}
 8004222:	4d07      	ldr	r5, [pc, #28]	@ (8004240 <_kill_r+0x20>)
 8004224:	2300      	movs	r3, #0
 8004226:	4604      	mov	r4, r0
 8004228:	4608      	mov	r0, r1
 800422a:	4611      	mov	r1, r2
 800422c:	602b      	str	r3, [r5, #0]
 800422e:	f7fd f95d 	bl	80014ec <_kill>
 8004232:	1c43      	adds	r3, r0, #1
 8004234:	d102      	bne.n	800423c <_kill_r+0x1c>
 8004236:	682b      	ldr	r3, [r5, #0]
 8004238:	b103      	cbz	r3, 800423c <_kill_r+0x1c>
 800423a:	6023      	str	r3, [r4, #0]
 800423c:	bd38      	pop	{r3, r4, r5, pc}
 800423e:	bf00      	nop
 8004240:	20000354 	.word	0x20000354

08004244 <_getpid_r>:
 8004244:	f7fd b94a 	b.w	80014dc <_getpid>

08004248 <__swhatbuf_r>:
 8004248:	b570      	push	{r4, r5, r6, lr}
 800424a:	460c      	mov	r4, r1
 800424c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004250:	2900      	cmp	r1, #0
 8004252:	b096      	sub	sp, #88	@ 0x58
 8004254:	4615      	mov	r5, r2
 8004256:	461e      	mov	r6, r3
 8004258:	da0d      	bge.n	8004276 <__swhatbuf_r+0x2e>
 800425a:	89a3      	ldrh	r3, [r4, #12]
 800425c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004260:	f04f 0100 	mov.w	r1, #0
 8004264:	bf14      	ite	ne
 8004266:	2340      	movne	r3, #64	@ 0x40
 8004268:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800426c:	2000      	movs	r0, #0
 800426e:	6031      	str	r1, [r6, #0]
 8004270:	602b      	str	r3, [r5, #0]
 8004272:	b016      	add	sp, #88	@ 0x58
 8004274:	bd70      	pop	{r4, r5, r6, pc}
 8004276:	466a      	mov	r2, sp
 8004278:	f000 f848 	bl	800430c <_fstat_r>
 800427c:	2800      	cmp	r0, #0
 800427e:	dbec      	blt.n	800425a <__swhatbuf_r+0x12>
 8004280:	9901      	ldr	r1, [sp, #4]
 8004282:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8004286:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800428a:	4259      	negs	r1, r3
 800428c:	4159      	adcs	r1, r3
 800428e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8004292:	e7eb      	b.n	800426c <__swhatbuf_r+0x24>

08004294 <__smakebuf_r>:
 8004294:	898b      	ldrh	r3, [r1, #12]
 8004296:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004298:	079d      	lsls	r5, r3, #30
 800429a:	4606      	mov	r6, r0
 800429c:	460c      	mov	r4, r1
 800429e:	d507      	bpl.n	80042b0 <__smakebuf_r+0x1c>
 80042a0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80042a4:	6023      	str	r3, [r4, #0]
 80042a6:	6123      	str	r3, [r4, #16]
 80042a8:	2301      	movs	r3, #1
 80042aa:	6163      	str	r3, [r4, #20]
 80042ac:	b003      	add	sp, #12
 80042ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80042b0:	ab01      	add	r3, sp, #4
 80042b2:	466a      	mov	r2, sp
 80042b4:	f7ff ffc8 	bl	8004248 <__swhatbuf_r>
 80042b8:	9f00      	ldr	r7, [sp, #0]
 80042ba:	4605      	mov	r5, r0
 80042bc:	4639      	mov	r1, r7
 80042be:	4630      	mov	r0, r6
 80042c0:	f7fd fa26 	bl	8001710 <_malloc_r>
 80042c4:	b948      	cbnz	r0, 80042da <__smakebuf_r+0x46>
 80042c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80042ca:	059a      	lsls	r2, r3, #22
 80042cc:	d4ee      	bmi.n	80042ac <__smakebuf_r+0x18>
 80042ce:	f023 0303 	bic.w	r3, r3, #3
 80042d2:	f043 0302 	orr.w	r3, r3, #2
 80042d6:	81a3      	strh	r3, [r4, #12]
 80042d8:	e7e2      	b.n	80042a0 <__smakebuf_r+0xc>
 80042da:	89a3      	ldrh	r3, [r4, #12]
 80042dc:	6020      	str	r0, [r4, #0]
 80042de:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80042e2:	81a3      	strh	r3, [r4, #12]
 80042e4:	9b01      	ldr	r3, [sp, #4]
 80042e6:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80042ea:	b15b      	cbz	r3, 8004304 <__smakebuf_r+0x70>
 80042ec:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80042f0:	4630      	mov	r0, r6
 80042f2:	f000 f81d 	bl	8004330 <_isatty_r>
 80042f6:	b128      	cbz	r0, 8004304 <__smakebuf_r+0x70>
 80042f8:	89a3      	ldrh	r3, [r4, #12]
 80042fa:	f023 0303 	bic.w	r3, r3, #3
 80042fe:	f043 0301 	orr.w	r3, r3, #1
 8004302:	81a3      	strh	r3, [r4, #12]
 8004304:	89a3      	ldrh	r3, [r4, #12]
 8004306:	431d      	orrs	r5, r3
 8004308:	81a5      	strh	r5, [r4, #12]
 800430a:	e7cf      	b.n	80042ac <__smakebuf_r+0x18>

0800430c <_fstat_r>:
 800430c:	b538      	push	{r3, r4, r5, lr}
 800430e:	4d07      	ldr	r5, [pc, #28]	@ (800432c <_fstat_r+0x20>)
 8004310:	2300      	movs	r3, #0
 8004312:	4604      	mov	r4, r0
 8004314:	4608      	mov	r0, r1
 8004316:	4611      	mov	r1, r2
 8004318:	602b      	str	r3, [r5, #0]
 800431a:	f7fd f947 	bl	80015ac <_fstat>
 800431e:	1c43      	adds	r3, r0, #1
 8004320:	d102      	bne.n	8004328 <_fstat_r+0x1c>
 8004322:	682b      	ldr	r3, [r5, #0]
 8004324:	b103      	cbz	r3, 8004328 <_fstat_r+0x1c>
 8004326:	6023      	str	r3, [r4, #0]
 8004328:	bd38      	pop	{r3, r4, r5, pc}
 800432a:	bf00      	nop
 800432c:	20000354 	.word	0x20000354

08004330 <_isatty_r>:
 8004330:	b538      	push	{r3, r4, r5, lr}
 8004332:	4d06      	ldr	r5, [pc, #24]	@ (800434c <_isatty_r+0x1c>)
 8004334:	2300      	movs	r3, #0
 8004336:	4604      	mov	r4, r0
 8004338:	4608      	mov	r0, r1
 800433a:	602b      	str	r3, [r5, #0]
 800433c:	f7fd f946 	bl	80015cc <_isatty>
 8004340:	1c43      	adds	r3, r0, #1
 8004342:	d102      	bne.n	800434a <_isatty_r+0x1a>
 8004344:	682b      	ldr	r3, [r5, #0]
 8004346:	b103      	cbz	r3, 800434a <_isatty_r+0x1a>
 8004348:	6023      	str	r3, [r4, #0]
 800434a:	bd38      	pop	{r3, r4, r5, pc}
 800434c:	20000354 	.word	0x20000354

08004350 <_init>:
 8004350:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004352:	bf00      	nop
 8004354:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004356:	bc08      	pop	{r3}
 8004358:	469e      	mov	lr, r3
 800435a:	4770      	bx	lr

0800435c <_fini>:
 800435c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800435e:	bf00      	nop
 8004360:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004362:	bc08      	pop	{r3}
 8004364:	469e      	mov	lr, r3
 8004366:	4770      	bx	lr
