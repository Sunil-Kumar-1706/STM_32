
05_SPI_STM_ESP.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000958  0800018c  0800018c  0000118c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000ae4  08000aec  00001aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000ae4  08000ae4  00001aec  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000ae4  08000ae4  00001aec  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000ae4  08000aec  00001aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ae4  08000ae4  00001ae4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000ae8  08000ae8  00001ae8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001aec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00001aec  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00001aec  2**0
                  CONTENTS, READONLY
 13 .debug_info   000013b7  00000000  00000000  00001b16  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000426  00000000  00000000  00002ecd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000140  00000000  00000000  000032f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000e2  00000000  00000000  00003438  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000023e3  00000000  00000000  0000351a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001878  00000000  00000000  000058fd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009dce  00000000  00000000  00007175  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00010f43  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000458  00000000  00000000  00010f88  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006c  00000000  00000000  000113e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800018c <__do_global_dtors_aux>:
 800018c:	b510      	push	{r4, lr}
 800018e:	4c05      	ldr	r4, [pc, #20]	@ (80001a4 <__do_global_dtors_aux+0x18>)
 8000190:	7823      	ldrb	r3, [r4, #0]
 8000192:	b933      	cbnz	r3, 80001a2 <__do_global_dtors_aux+0x16>
 8000194:	4b04      	ldr	r3, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x1c>)
 8000196:	b113      	cbz	r3, 800019e <__do_global_dtors_aux+0x12>
 8000198:	4804      	ldr	r0, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x20>)
 800019a:	f3af 8000 	nop.w
 800019e:	2301      	movs	r3, #1
 80001a0:	7023      	strb	r3, [r4, #0]
 80001a2:	bd10      	pop	{r4, pc}
 80001a4:	20000000 	.word	0x20000000
 80001a8:	00000000 	.word	0x00000000
 80001ac:	08000acc 	.word	0x08000acc

080001b0 <frame_dummy>:
 80001b0:	b508      	push	{r3, lr}
 80001b2:	4b03      	ldr	r3, [pc, #12]	@ (80001c0 <frame_dummy+0x10>)
 80001b4:	b11b      	cbz	r3, 80001be <frame_dummy+0xe>
 80001b6:	4903      	ldr	r1, [pc, #12]	@ (80001c4 <frame_dummy+0x14>)
 80001b8:	4803      	ldr	r0, [pc, #12]	@ (80001c8 <frame_dummy+0x18>)
 80001ba:	f3af 8000 	nop.w
 80001be:	bd08      	pop	{r3, pc}
 80001c0:	00000000 	.word	0x00000000
 80001c4:	20000004 	.word	0x20000004
 80001c8:	08000acc 	.word	0x08000acc

080001cc <SPI2_GPIOInits>:

void delay(void);
void SPI2_GPIOInits(void);

void SPI2_GPIOInits(void)
{
 80001cc:	b580      	push	{r7, lr}
 80001ce:	b084      	sub	sp, #16
 80001d0:	af00      	add	r7, sp, #0
    GPIO_Handle_t SPIPins;
    SPIPins.pGPIOx = GPIOB;
 80001d2:	4b16      	ldr	r3, [pc, #88]	@ (800022c <SPI2_GPIOInits+0x60>)
 80001d4:	607b      	str	r3, [r7, #4]
    SPIPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 80001d6:	2302      	movs	r3, #2
 80001d8:	727b      	strb	r3, [r7, #9]
    SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode = 5;   // AF5 = SPI2
 80001da:	2305      	movs	r3, #5
 80001dc:	737b      	strb	r3, [r7, #13]
    SPIPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 80001de:	2300      	movs	r3, #0
 80001e0:	733b      	strb	r3, [r7, #12]
    SPIPins.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80001e2:	2300      	movs	r3, #0
 80001e4:	72fb      	strb	r3, [r7, #11]
    SPIPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_HIGH;
 80001e6:	2303      	movs	r3, #3
 80001e8:	72bb      	strb	r3, [r7, #10]
    GPIO_PeriClockControl(GPIOB, ENABLE);
 80001ea:	2101      	movs	r1, #1
 80001ec:	480f      	ldr	r0, [pc, #60]	@ (800022c <SPI2_GPIOInits+0x60>)
 80001ee:	f000 f8a1 	bl	8000334 <GPIO_PeriClockControl>

    // NSS (PB12)
    SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 80001f2:	230c      	movs	r3, #12
 80001f4:	723b      	strb	r3, [r7, #8]
    GPIO_Init(&SPIPins);
 80001f6:	1d3b      	adds	r3, r7, #4
 80001f8:	4618      	mov	r0, r3
 80001fa:	f000 f969 	bl	80004d0 <GPIO_Init>

    // SCK (PB13)
    SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80001fe:	230d      	movs	r3, #13
 8000200:	723b      	strb	r3, [r7, #8]
    GPIO_Init(&SPIPins);
 8000202:	1d3b      	adds	r3, r7, #4
 8000204:	4618      	mov	r0, r3
 8000206:	f000 f963 	bl	80004d0 <GPIO_Init>

    // MISO (PB14)
    SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 800020a:	230e      	movs	r3, #14
 800020c:	723b      	strb	r3, [r7, #8]
    GPIO_Init(&SPIPins);
 800020e:	1d3b      	adds	r3, r7, #4
 8000210:	4618      	mov	r0, r3
 8000212:	f000 f95d 	bl	80004d0 <GPIO_Init>

    // MOSI (PB15)
    SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
 8000216:	230f      	movs	r3, #15
 8000218:	723b      	strb	r3, [r7, #8]
    GPIO_Init(&SPIPins);
 800021a:	1d3b      	adds	r3, r7, #4
 800021c:	4618      	mov	r0, r3
 800021e:	f000 f957 	bl	80004d0 <GPIO_Init>
}
 8000222:	bf00      	nop
 8000224:	3710      	adds	r7, #16
 8000226:	46bd      	mov	sp, r7
 8000228:	bd80      	pop	{r7, pc}
 800022a:	bf00      	nop
 800022c:	48000400 	.word	0x48000400

08000230 <SPI2_Inits>:

void SPI2_Inits(void)
{
 8000230:	b580      	push	{r7, lr}
 8000232:	b088      	sub	sp, #32
 8000234:	af00      	add	r7, sp, #0
    SPI_Handle_t SPI2Handle;
    SPI2Handle.pSPIx = SPI2;
 8000236:	4b0c      	ldr	r3, [pc, #48]	@ (8000268 <SPI2_Inits+0x38>)
 8000238:	603b      	str	r3, [r7, #0]
    SPI2Handle.SPIConfig.SPI_DeviceMode = SPI_DEVICE_MODE_MASTER;
 800023a:	2301      	movs	r3, #1
 800023c:	713b      	strb	r3, [r7, #4]
    SPI2Handle.SPIConfig.SPI_BusConfig = SPI_BUS_CONFIG_FD;
 800023e:	2301      	movs	r3, #1
 8000240:	717b      	strb	r3, [r7, #5]
    SPI2Handle.SPIConfig.SPI_SclkSpeed = SPI_SCLK_SPEED_DIV32;
 8000242:	2304      	movs	r3, #4
 8000244:	71bb      	strb	r3, [r7, #6]
    SPI2Handle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
 8000246:	2300      	movs	r3, #0
 8000248:	71fb      	strb	r3, [r7, #7]
    SPI2Handle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
 800024a:	2300      	movs	r3, #0
 800024c:	723b      	strb	r3, [r7, #8]
    SPI2Handle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
 800024e:	2300      	movs	r3, #0
 8000250:	727b      	strb	r3, [r7, #9]
    SPI2Handle.SPIConfig.SPI_SSM = SPI_SSM_DI;  // Hardware slave management
 8000252:	2300      	movs	r3, #0
 8000254:	72bb      	strb	r3, [r7, #10]

    SPI_Init(&SPI2Handle);
 8000256:	463b      	mov	r3, r7
 8000258:	4618      	mov	r0, r3
 800025a:	f000 fb49 	bl	80008f0 <SPI_Init>
}
 800025e:	bf00      	nop
 8000260:	3720      	adds	r7, #32
 8000262:	46bd      	mov	sp, r7
 8000264:	bd80      	pop	{r7, pc}
 8000266:	bf00      	nop
 8000268:	40003800 	.word	0x40003800

0800026c <main>:

int main(void)
{
 800026c:	b580      	push	{r7, lr}
 800026e:	b082      	sub	sp, #8
 8000270:	af00      	add	r7, sp, #0
    uint8_t data=10;
 8000272:	230a      	movs	r3, #10
 8000274:	71fb      	strb	r3, [r7, #7]

    SPI2_GPIOInits();
 8000276:	f7ff ffa9 	bl	80001cc <SPI2_GPIOInits>
    SPI2_Inits();
 800027a:	f7ff ffd9 	bl	8000230 <SPI2_Inits>
    SPI_SSOEConfig(SPI2, ENABLE);
 800027e:	2101      	movs	r1, #1
 8000280:	480b      	ldr	r0, [pc, #44]	@ (80002b0 <main+0x44>)
 8000282:	f000 fbe4 	bl	8000a4e <SPI_SSOEConfig>
    SPI_PeripheralControl(SPI2, ENABLE);
 8000286:	2101      	movs	r1, #1
 8000288:	4809      	ldr	r0, [pc, #36]	@ (80002b0 <main+0x44>)
 800028a:	f000 fbc5 	bl	8000a18 <SPI_PeripheralControl>

    while(1)
    {
    	SPI_SendData(SPI2, &data, 1);
 800028e:	1dfb      	adds	r3, r7, #7
 8000290:	2201      	movs	r2, #1
 8000292:	4619      	mov	r1, r3
 8000294:	4806      	ldr	r0, [pc, #24]	@ (80002b0 <main+0x44>)
 8000296:	f000 fb89 	bl	80009ac <SPI_SendData>
        while(SPI_GetFlagStatus(SPI2, SPI_BUSY_FLAG));
 800029a:	bf00      	nop
 800029c:	2180      	movs	r1, #128	@ 0x80
 800029e:	4804      	ldr	r0, [pc, #16]	@ (80002b0 <main+0x44>)
 80002a0:	f000 fba7 	bl	80009f2 <SPI_GetFlagStatus>
 80002a4:	4603      	mov	r3, r0
 80002a6:	2b00      	cmp	r3, #0
 80002a8:	d1f8      	bne.n	800029c <main+0x30>
        delay();
 80002aa:	f000 f803 	bl	80002b4 <delay>
    	SPI_SendData(SPI2, &data, 1);
 80002ae:	e7ee      	b.n	800028e <main+0x22>
 80002b0:	40003800 	.word	0x40003800

080002b4 <delay>:
    }
}

void delay()
{
 80002b4:	b480      	push	{r7}
 80002b6:	b083      	sub	sp, #12
 80002b8:	af00      	add	r7, sp, #0
    for(volatile int i = 0; i < 500000/2; i++);
 80002ba:	2300      	movs	r3, #0
 80002bc:	607b      	str	r3, [r7, #4]
 80002be:	e002      	b.n	80002c6 <delay+0x12>
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	3301      	adds	r3, #1
 80002c4:	607b      	str	r3, [r7, #4]
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a04      	ldr	r2, [pc, #16]	@ (80002dc <delay+0x28>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	ddf8      	ble.n	80002c0 <delay+0xc>
}
 80002ce:	bf00      	nop
 80002d0:	bf00      	nop
 80002d2:	370c      	adds	r7, #12
 80002d4:	46bd      	mov	sp, r7
 80002d6:	bc80      	pop	{r7}
 80002d8:	4770      	bx	lr
 80002da:	bf00      	nop
 80002dc:	0003d08f 	.word	0x0003d08f

080002e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002e0:	480d      	ldr	r0, [pc, #52]	@ (8000318 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e8:	480c      	ldr	r0, [pc, #48]	@ (800031c <LoopForever+0x6>)
  ldr r1, =_edata
 80002ea:	490d      	ldr	r1, [pc, #52]	@ (8000320 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ec:	4a0d      	ldr	r2, [pc, #52]	@ (8000324 <LoopForever+0xe>)
  movs r3, #0
 80002ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002f0:	e002      	b.n	80002f8 <LoopCopyDataInit>

080002f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f6:	3304      	adds	r3, #4

080002f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002fc:	d3f9      	bcc.n	80002f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fe:	4a0a      	ldr	r2, [pc, #40]	@ (8000328 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000300:	4c0a      	ldr	r4, [pc, #40]	@ (800032c <LoopForever+0x16>)
  movs r3, #0
 8000302:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000304:	e001      	b.n	800030a <LoopFillZerobss>

08000306 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000306:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000308:	3204      	adds	r2, #4

0800030a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800030a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800030c:	d3fb      	bcc.n	8000306 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 800030e:	f000 fbb9 	bl	8000a84 <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 8000312:	f7ff ffab 	bl	800026c <main>

08000316 <LoopForever>:

LoopForever:
  b LoopForever
 8000316:	e7fe      	b.n	8000316 <LoopForever>
  ldr   r0, =_estack
 8000318:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800031c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000320:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000324:	08000aec 	.word	0x08000aec
  ldr r2, =_sbss
 8000328:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800032c:	2000001c 	.word	0x2000001c

08000330 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000330:	e7fe      	b.n	8000330 <ADC1_2_IRQHandler>
	...

08000334 <GPIO_PeriClockControl>:
#include "GPIO_driver.h"

/*peripheral clock setup */
void GPIO_PeriClockControl(GPIO_Regdef_t *pGPIOx , uint8_t EnorDi)
{
 8000334:	b480      	push	{r7}
 8000336:	b083      	sub	sp, #12
 8000338:	af00      	add	r7, sp, #0
 800033a:	6078      	str	r0, [r7, #4]
 800033c:	460b      	mov	r3, r1
 800033e:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000340:	78fb      	ldrb	r3, [r7, #3]
 8000342:	2b01      	cmp	r3, #1
 8000344:	d157      	bne.n	80003f6 <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800034c:	d106      	bne.n	800035c <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800034e:	4b58      	ldr	r3, [pc, #352]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000350:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000352:	4a57      	ldr	r2, [pc, #348]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000354:	f043 0301 	orr.w	r3, r3, #1
 8000358:	64d3      	str	r3, [r2, #76]	@ 0x4c
				else if(pGPIOx==GPIOH)
				{
					GPIOH_PCLK_DI();
				}
	}
}
 800035a:	e0a3      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOB)
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	4a55      	ldr	r2, [pc, #340]	@ (80004b4 <GPIO_PeriClockControl+0x180>)
 8000360:	4293      	cmp	r3, r2
 8000362:	d106      	bne.n	8000372 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000364:	4b52      	ldr	r3, [pc, #328]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000366:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000368:	4a51      	ldr	r2, [pc, #324]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 800036a:	f043 0302 	orr.w	r3, r3, #2
 800036e:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000370:	e098      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOC)
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	4a50      	ldr	r2, [pc, #320]	@ (80004b8 <GPIO_PeriClockControl+0x184>)
 8000376:	4293      	cmp	r3, r2
 8000378:	d106      	bne.n	8000388 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800037a:	4b4d      	ldr	r3, [pc, #308]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 800037c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800037e:	4a4c      	ldr	r2, [pc, #304]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000380:	f043 0304 	orr.w	r3, r3, #4
 8000384:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000386:	e08d      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOD)
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	4a4c      	ldr	r2, [pc, #304]	@ (80004bc <GPIO_PeriClockControl+0x188>)
 800038c:	4293      	cmp	r3, r2
 800038e:	d106      	bne.n	800039e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000390:	4b47      	ldr	r3, [pc, #284]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000392:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000394:	4a46      	ldr	r2, [pc, #280]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000396:	f043 0308 	orr.w	r3, r3, #8
 800039a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800039c:	e082      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOE)
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	4a47      	ldr	r2, [pc, #284]	@ (80004c0 <GPIO_PeriClockControl+0x18c>)
 80003a2:	4293      	cmp	r3, r2
 80003a4:	d106      	bne.n	80003b4 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80003a6:	4b42      	ldr	r3, [pc, #264]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 80003a8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003aa:	4a41      	ldr	r2, [pc, #260]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 80003ac:	f043 0310 	orr.w	r3, r3, #16
 80003b0:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003b2:	e077      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOF)
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	4a43      	ldr	r2, [pc, #268]	@ (80004c4 <GPIO_PeriClockControl+0x190>)
 80003b8:	4293      	cmp	r3, r2
 80003ba:	d106      	bne.n	80003ca <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003bc:	4b3c      	ldr	r3, [pc, #240]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 80003be:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003c0:	4a3b      	ldr	r2, [pc, #236]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 80003c2:	f043 0320 	orr.w	r3, r3, #32
 80003c6:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003c8:	e06c      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOG)
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	4a3e      	ldr	r2, [pc, #248]	@ (80004c8 <GPIO_PeriClockControl+0x194>)
 80003ce:	4293      	cmp	r3, r2
 80003d0:	d106      	bne.n	80003e0 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003d2:	4b37      	ldr	r3, [pc, #220]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 80003d4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003d6:	4a36      	ldr	r2, [pc, #216]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 80003d8:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003dc:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003de:	e061      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOH)
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	4a3a      	ldr	r2, [pc, #232]	@ (80004cc <GPIO_PeriClockControl+0x198>)
 80003e4:	4293      	cmp	r3, r2
 80003e6:	d15d      	bne.n	80004a4 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 80003e8:	4b31      	ldr	r3, [pc, #196]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 80003ea:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003ec:	4a30      	ldr	r2, [pc, #192]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 80003ee:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003f2:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003f4:	e056      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80003fc:	d106      	bne.n	800040c <GPIO_PeriClockControl+0xd8>
					GPIOA_PCLK_DI();
 80003fe:	4b2c      	ldr	r3, [pc, #176]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000400:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000402:	4a2b      	ldr	r2, [pc, #172]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000404:	f023 0301 	bic.w	r3, r3, #1
 8000408:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800040a:	e04b      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOB)
 800040c:	687b      	ldr	r3, [r7, #4]
 800040e:	4a29      	ldr	r2, [pc, #164]	@ (80004b4 <GPIO_PeriClockControl+0x180>)
 8000410:	4293      	cmp	r3, r2
 8000412:	d106      	bne.n	8000422 <GPIO_PeriClockControl+0xee>
					GPIOB_PCLK_DI();
 8000414:	4b26      	ldr	r3, [pc, #152]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000416:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000418:	4a25      	ldr	r2, [pc, #148]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 800041a:	f023 0302 	bic.w	r3, r3, #2
 800041e:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000420:	e040      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOC)
 8000422:	687b      	ldr	r3, [r7, #4]
 8000424:	4a24      	ldr	r2, [pc, #144]	@ (80004b8 <GPIO_PeriClockControl+0x184>)
 8000426:	4293      	cmp	r3, r2
 8000428:	d106      	bne.n	8000438 <GPIO_PeriClockControl+0x104>
					GPIOC_PCLK_DI();
 800042a:	4b21      	ldr	r3, [pc, #132]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 800042c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800042e:	4a20      	ldr	r2, [pc, #128]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000430:	f023 0304 	bic.w	r3, r3, #4
 8000434:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000436:	e035      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOD)
 8000438:	687b      	ldr	r3, [r7, #4]
 800043a:	4a20      	ldr	r2, [pc, #128]	@ (80004bc <GPIO_PeriClockControl+0x188>)
 800043c:	4293      	cmp	r3, r2
 800043e:	d106      	bne.n	800044e <GPIO_PeriClockControl+0x11a>
					GPIOD_PCLK_DI();
 8000440:	4b1b      	ldr	r3, [pc, #108]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000442:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000444:	4a1a      	ldr	r2, [pc, #104]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000446:	f023 0308 	bic.w	r3, r3, #8
 800044a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800044c:	e02a      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOE)
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	4a1b      	ldr	r2, [pc, #108]	@ (80004c0 <GPIO_PeriClockControl+0x18c>)
 8000452:	4293      	cmp	r3, r2
 8000454:	d106      	bne.n	8000464 <GPIO_PeriClockControl+0x130>
					GPIOE_PCLK_DI();
 8000456:	4b16      	ldr	r3, [pc, #88]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000458:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800045a:	4a15      	ldr	r2, [pc, #84]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 800045c:	f023 0310 	bic.w	r3, r3, #16
 8000460:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000462:	e01f      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOF)
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	4a17      	ldr	r2, [pc, #92]	@ (80004c4 <GPIO_PeriClockControl+0x190>)
 8000468:	4293      	cmp	r3, r2
 800046a:	d106      	bne.n	800047a <GPIO_PeriClockControl+0x146>
					GPIOF_PCLK_DI();
 800046c:	4b10      	ldr	r3, [pc, #64]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 800046e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000470:	4a0f      	ldr	r2, [pc, #60]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000472:	f023 0320 	bic.w	r3, r3, #32
 8000476:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000478:	e014      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOG)
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	4a12      	ldr	r2, [pc, #72]	@ (80004c8 <GPIO_PeriClockControl+0x194>)
 800047e:	4293      	cmp	r3, r2
 8000480:	d106      	bne.n	8000490 <GPIO_PeriClockControl+0x15c>
					GPIOG_PCLK_DI();
 8000482:	4b0b      	ldr	r3, [pc, #44]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000484:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000486:	4a0a      	ldr	r2, [pc, #40]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 8000488:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800048c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800048e:	e009      	b.n	80004a4 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOH)
 8000490:	687b      	ldr	r3, [r7, #4]
 8000492:	4a0e      	ldr	r2, [pc, #56]	@ (80004cc <GPIO_PeriClockControl+0x198>)
 8000494:	4293      	cmp	r3, r2
 8000496:	d105      	bne.n	80004a4 <GPIO_PeriClockControl+0x170>
					GPIOH_PCLK_DI();
 8000498:	4b05      	ldr	r3, [pc, #20]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 800049a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800049c:	4a04      	ldr	r2, [pc, #16]	@ (80004b0 <GPIO_PeriClockControl+0x17c>)
 800049e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80004a2:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80004a4:	bf00      	nop
 80004a6:	370c      	adds	r7, #12
 80004a8:	46bd      	mov	sp, r7
 80004aa:	bc80      	pop	{r7}
 80004ac:	4770      	bx	lr
 80004ae:	bf00      	nop
 80004b0:	40021000 	.word	0x40021000
 80004b4:	48000400 	.word	0x48000400
 80004b8:	48000800 	.word	0x48000800
 80004bc:	48000c00 	.word	0x48000c00
 80004c0:	48001000 	.word	0x48001000
 80004c4:	48001400 	.word	0x48001400
 80004c8:	48001800 	.word	0x48001800
 80004cc:	48001c00 	.word	0x48001c00

080004d0 <GPIO_Init>:

/*Init and Deinit */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004d0:	b480      	push	{r7}
 80004d2:	b087      	sub	sp, #28
 80004d4:	af00      	add	r7, sp, #0
 80004d6:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 80004d8:	2300      	movs	r3, #0
 80004da:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	795b      	ldrb	r3, [r3, #5]
 80004e0:	2b03      	cmp	r3, #3
 80004e2:	d822      	bhi.n	800052a <GPIO_Init+0x5a>
	{
		temp=( pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	795b      	ldrb	r3, [r3, #5]
 80004e8:	461a      	mov	r2, r3
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	791b      	ldrb	r3, [r3, #4]
 80004ee:	005b      	lsls	r3, r3, #1
 80004f0:	fa02 f303 	lsl.w	r3, r2, r3
 80004f4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	681b      	ldr	r3, [r3, #0]
 80004fa:	681a      	ldr	r2, [r3, #0]
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	791b      	ldrb	r3, [r3, #4]
 8000500:	005b      	lsls	r3, r3, #1
 8000502:	2103      	movs	r1, #3
 8000504:	fa01 f303 	lsl.w	r3, r1, r3
 8000508:	43db      	mvns	r3, r3
 800050a:	4619      	mov	r1, r3
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	400a      	ands	r2, r1
 8000512:	601a      	str	r2, [r3, #0]
		pGPIOHandle ->pGPIOx->MODER |= temp;
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	6819      	ldr	r1, [r3, #0]
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	697a      	ldr	r2, [r7, #20]
 8000520:	430a      	orrs	r2, r1
 8000522:	601a      	str	r2, [r3, #0]
		temp=0;
 8000524:	2300      	movs	r3, #0
 8000526:	617b      	str	r3, [r7, #20]
 8000528:	e0e1      	b.n	80006ee <GPIO_Init+0x21e>
	}
	else{
		temp=( pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	795b      	ldrb	r3, [r3, #5]
 800052e:	461a      	mov	r2, r3
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	791b      	ldrb	r3, [r3, #4]
 8000534:	005b      	lsls	r3, r3, #1
 8000536:	fa02 f303 	lsl.w	r3, r2, r3
 800053a:	617b      	str	r3, [r7, #20]
				pGPIOHandle->pGPIOx->MODER &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	681a      	ldr	r2, [r3, #0]
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	791b      	ldrb	r3, [r3, #4]
 8000546:	005b      	lsls	r3, r3, #1
 8000548:	2103      	movs	r1, #3
 800054a:	fa01 f303 	lsl.w	r3, r1, r3
 800054e:	43db      	mvns	r3, r3
 8000550:	4619      	mov	r1, r3
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	400a      	ands	r2, r1
 8000558:	601a      	str	r2, [r3, #0]
				pGPIOHandle ->pGPIOx->MODER |= temp;
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	6819      	ldr	r1, [r3, #0]
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	697a      	ldr	r2, [r7, #20]
 8000566:	430a      	orrs	r2, r1
 8000568:	601a      	str	r2, [r3, #0]
				temp=0;
 800056a:	2300      	movs	r3, #0
 800056c:	617b      	str	r3, [r7, #20]
		if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	795b      	ldrb	r3, [r3, #5]
 8000572:	2b04      	cmp	r3, #4
 8000574:	d117      	bne.n	80005a6 <GPIO_Init+0xd6>
		{
			EXTI->FTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000576:	4b47      	ldr	r3, [pc, #284]	@ (8000694 <GPIO_Init+0x1c4>)
 8000578:	68db      	ldr	r3, [r3, #12]
 800057a:	687a      	ldr	r2, [r7, #4]
 800057c:	7912      	ldrb	r2, [r2, #4]
 800057e:	4611      	mov	r1, r2
 8000580:	2201      	movs	r2, #1
 8000582:	408a      	lsls	r2, r1
 8000584:	4611      	mov	r1, r2
 8000586:	4a43      	ldr	r2, [pc, #268]	@ (8000694 <GPIO_Init+0x1c4>)
 8000588:	430b      	orrs	r3, r1
 800058a:	60d3      	str	r3, [r2, #12]

			EXTI->RTSR1 &=~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800058c:	4b41      	ldr	r3, [pc, #260]	@ (8000694 <GPIO_Init+0x1c4>)
 800058e:	689b      	ldr	r3, [r3, #8]
 8000590:	687a      	ldr	r2, [r7, #4]
 8000592:	7912      	ldrb	r2, [r2, #4]
 8000594:	4611      	mov	r1, r2
 8000596:	2201      	movs	r2, #1
 8000598:	408a      	lsls	r2, r1
 800059a:	43d2      	mvns	r2, r2
 800059c:	4611      	mov	r1, r2
 800059e:	4a3d      	ldr	r2, [pc, #244]	@ (8000694 <GPIO_Init+0x1c4>)
 80005a0:	400b      	ands	r3, r1
 80005a2:	6093      	str	r3, [r2, #8]
 80005a4:	e035      	b.n	8000612 <GPIO_Init+0x142>
		}
		else if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	795b      	ldrb	r3, [r3, #5]
 80005aa:	2b05      	cmp	r3, #5
 80005ac:	d117      	bne.n	80005de <GPIO_Init+0x10e>
		{
			EXTI->RTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005ae:	4b39      	ldr	r3, [pc, #228]	@ (8000694 <GPIO_Init+0x1c4>)
 80005b0:	689b      	ldr	r3, [r3, #8]
 80005b2:	687a      	ldr	r2, [r7, #4]
 80005b4:	7912      	ldrb	r2, [r2, #4]
 80005b6:	4611      	mov	r1, r2
 80005b8:	2201      	movs	r2, #1
 80005ba:	408a      	lsls	r2, r1
 80005bc:	4611      	mov	r1, r2
 80005be:	4a35      	ldr	r2, [pc, #212]	@ (8000694 <GPIO_Init+0x1c4>)
 80005c0:	430b      	orrs	r3, r1
 80005c2:	6093      	str	r3, [r2, #8]

			EXTI->FTSR1 &=~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c4:	4b33      	ldr	r3, [pc, #204]	@ (8000694 <GPIO_Init+0x1c4>)
 80005c6:	68db      	ldr	r3, [r3, #12]
 80005c8:	687a      	ldr	r2, [r7, #4]
 80005ca:	7912      	ldrb	r2, [r2, #4]
 80005cc:	4611      	mov	r1, r2
 80005ce:	2201      	movs	r2, #1
 80005d0:	408a      	lsls	r2, r1
 80005d2:	43d2      	mvns	r2, r2
 80005d4:	4611      	mov	r1, r2
 80005d6:	4a2f      	ldr	r2, [pc, #188]	@ (8000694 <GPIO_Init+0x1c4>)
 80005d8:	400b      	ands	r3, r1
 80005da:	60d3      	str	r3, [r2, #12]
 80005dc:	e019      	b.n	8000612 <GPIO_Init+0x142>

		}
		else if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	795b      	ldrb	r3, [r3, #5]
 80005e2:	2b06      	cmp	r3, #6
 80005e4:	d115      	bne.n	8000612 <GPIO_Init+0x142>
		{
			EXTI->FTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005e6:	4b2b      	ldr	r3, [pc, #172]	@ (8000694 <GPIO_Init+0x1c4>)
 80005e8:	68db      	ldr	r3, [r3, #12]
 80005ea:	687a      	ldr	r2, [r7, #4]
 80005ec:	7912      	ldrb	r2, [r2, #4]
 80005ee:	4611      	mov	r1, r2
 80005f0:	2201      	movs	r2, #1
 80005f2:	408a      	lsls	r2, r1
 80005f4:	4611      	mov	r1, r2
 80005f6:	4a27      	ldr	r2, [pc, #156]	@ (8000694 <GPIO_Init+0x1c4>)
 80005f8:	430b      	orrs	r3, r1
 80005fa:	60d3      	str	r3, [r2, #12]

			EXTI->RTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005fc:	4b25      	ldr	r3, [pc, #148]	@ (8000694 <GPIO_Init+0x1c4>)
 80005fe:	689b      	ldr	r3, [r3, #8]
 8000600:	687a      	ldr	r2, [r7, #4]
 8000602:	7912      	ldrb	r2, [r2, #4]
 8000604:	4611      	mov	r1, r2
 8000606:	2201      	movs	r2, #1
 8000608:	408a      	lsls	r2, r1
 800060a:	4611      	mov	r1, r2
 800060c:	4a21      	ldr	r2, [pc, #132]	@ (8000694 <GPIO_Init+0x1c4>)
 800060e:	430b      	orrs	r3, r1
 8000610:	6093      	str	r3, [r2, #8]
		}
	 uint8_t temp1=pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber/4;
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	791b      	ldrb	r3, [r3, #4]
 8000616:	089b      	lsrs	r3, r3, #2
 8000618:	74fb      	strb	r3, [r7, #19]
	 uint8_t temp2=pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber%4;
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	791b      	ldrb	r3, [r3, #4]
 800061e:	f003 0303 	and.w	r3, r3, #3
 8000622:	74bb      	strb	r3, [r7, #18]
	 uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800062c:	d042      	beq.n	80006b4 <GPIO_Init+0x1e4>
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	4a19      	ldr	r2, [pc, #100]	@ (8000698 <GPIO_Init+0x1c8>)
 8000634:	4293      	cmp	r3, r2
 8000636:	d02b      	beq.n	8000690 <GPIO_Init+0x1c0>
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	4a17      	ldr	r2, [pc, #92]	@ (800069c <GPIO_Init+0x1cc>)
 800063e:	4293      	cmp	r3, r2
 8000640:	d024      	beq.n	800068c <GPIO_Init+0x1bc>
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	4a16      	ldr	r2, [pc, #88]	@ (80006a0 <GPIO_Init+0x1d0>)
 8000648:	4293      	cmp	r3, r2
 800064a:	d01d      	beq.n	8000688 <GPIO_Init+0x1b8>
 800064c:	687b      	ldr	r3, [r7, #4]
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	4a14      	ldr	r2, [pc, #80]	@ (80006a4 <GPIO_Init+0x1d4>)
 8000652:	4293      	cmp	r3, r2
 8000654:	d016      	beq.n	8000684 <GPIO_Init+0x1b4>
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	681b      	ldr	r3, [r3, #0]
 800065a:	4a13      	ldr	r2, [pc, #76]	@ (80006a8 <GPIO_Init+0x1d8>)
 800065c:	4293      	cmp	r3, r2
 800065e:	d00f      	beq.n	8000680 <GPIO_Init+0x1b0>
 8000660:	687b      	ldr	r3, [r7, #4]
 8000662:	681b      	ldr	r3, [r3, #0]
 8000664:	4a11      	ldr	r2, [pc, #68]	@ (80006ac <GPIO_Init+0x1dc>)
 8000666:	4293      	cmp	r3, r2
 8000668:	d008      	beq.n	800067c <GPIO_Init+0x1ac>
 800066a:	687b      	ldr	r3, [r7, #4]
 800066c:	681b      	ldr	r3, [r3, #0]
 800066e:	4a10      	ldr	r2, [pc, #64]	@ (80006b0 <GPIO_Init+0x1e0>)
 8000670:	4293      	cmp	r3, r2
 8000672:	d101      	bne.n	8000678 <GPIO_Init+0x1a8>
 8000674:	2307      	movs	r3, #7
 8000676:	e01e      	b.n	80006b6 <GPIO_Init+0x1e6>
 8000678:	2300      	movs	r3, #0
 800067a:	e01c      	b.n	80006b6 <GPIO_Init+0x1e6>
 800067c:	2306      	movs	r3, #6
 800067e:	e01a      	b.n	80006b6 <GPIO_Init+0x1e6>
 8000680:	2305      	movs	r3, #5
 8000682:	e018      	b.n	80006b6 <GPIO_Init+0x1e6>
 8000684:	2304      	movs	r3, #4
 8000686:	e016      	b.n	80006b6 <GPIO_Init+0x1e6>
 8000688:	2303      	movs	r3, #3
 800068a:	e014      	b.n	80006b6 <GPIO_Init+0x1e6>
 800068c:	2302      	movs	r3, #2
 800068e:	e012      	b.n	80006b6 <GPIO_Init+0x1e6>
 8000690:	2301      	movs	r3, #1
 8000692:	e010      	b.n	80006b6 <GPIO_Init+0x1e6>
 8000694:	40010400 	.word	0x40010400
 8000698:	48000400 	.word	0x48000400
 800069c:	48000800 	.word	0x48000800
 80006a0:	48000c00 	.word	0x48000c00
 80006a4:	48001000 	.word	0x48001000
 80006a8:	48001400 	.word	0x48001400
 80006ac:	48001800 	.word	0x48001800
 80006b0:	48001c00 	.word	0x48001c00
 80006b4:	2300      	movs	r3, #0
 80006b6:	747b      	strb	r3, [r7, #17]
	 SYSCFG_PCLK_EN();
 80006b8:	4b5e      	ldr	r3, [pc, #376]	@ (8000834 <GPIO_Init+0x364>)
 80006ba:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80006bc:	4a5d      	ldr	r2, [pc, #372]	@ (8000834 <GPIO_Init+0x364>)
 80006be:	f043 0301 	orr.w	r3, r3, #1
 80006c2:	6613      	str	r3, [r2, #96]	@ 0x60
	 SYSCFG->EXTICR[temp1]=portcode << (temp2 * 4);
 80006c4:	7c7a      	ldrb	r2, [r7, #17]
 80006c6:	7cbb      	ldrb	r3, [r7, #18]
 80006c8:	009b      	lsls	r3, r3, #2
 80006ca:	fa02 f103 	lsl.w	r1, r2, r3
 80006ce:	4a5a      	ldr	r2, [pc, #360]	@ (8000838 <GPIO_Init+0x368>)
 80006d0:	7cfb      	ldrb	r3, [r7, #19]
 80006d2:	3302      	adds	r3, #2
 80006d4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	 EXTI -> IMR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80006d8:	4b58      	ldr	r3, [pc, #352]	@ (800083c <GPIO_Init+0x36c>)
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	687a      	ldr	r2, [r7, #4]
 80006de:	7912      	ldrb	r2, [r2, #4]
 80006e0:	4611      	mov	r1, r2
 80006e2:	2201      	movs	r2, #1
 80006e4:	408a      	lsls	r2, r1
 80006e6:	4611      	mov	r1, r2
 80006e8:	4a54      	ldr	r2, [pc, #336]	@ (800083c <GPIO_Init+0x36c>)
 80006ea:	430b      	orrs	r3, r1
 80006ec:	6013      	str	r3, [r2, #0]
	}

	temp=0;
 80006ee:	2300      	movs	r3, #0
 80006f0:	617b      	str	r3, [r7, #20]
	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	799b      	ldrb	r3, [r3, #6]
 80006f6:	461a      	mov	r2, r3
 80006f8:	687b      	ldr	r3, [r7, #4]
 80006fa:	791b      	ldrb	r3, [r3, #4]
 80006fc:	005b      	lsls	r3, r3, #1
 80006fe:	fa02 f303 	lsl.w	r3, r2, r3
 8000702:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->OSPEEDR &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	689a      	ldr	r2, [r3, #8]
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	791b      	ldrb	r3, [r3, #4]
 800070e:	005b      	lsls	r3, r3, #1
 8000710:	2103      	movs	r1, #3
 8000712:	fa01 f303 	lsl.w	r3, r1, r3
 8000716:	43db      	mvns	r3, r3
 8000718:	4619      	mov	r1, r3
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	400a      	ands	r2, r1
 8000720:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000722:	687b      	ldr	r3, [r7, #4]
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	6899      	ldr	r1, [r3, #8]
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	681b      	ldr	r3, [r3, #0]
 800072c:	697a      	ldr	r2, [r7, #20]
 800072e:	430a      	orrs	r2, r1
 8000730:	609a      	str	r2, [r3, #8]
	temp=0;
 8000732:	2300      	movs	r3, #0
 8000734:	617b      	str	r3, [r7, #20]

	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinPuPdControl<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000736:	687b      	ldr	r3, [r7, #4]
 8000738:	79db      	ldrb	r3, [r3, #7]
 800073a:	461a      	mov	r2, r3
 800073c:	687b      	ldr	r3, [r7, #4]
 800073e:	791b      	ldrb	r3, [r3, #4]
 8000740:	005b      	lsls	r3, r3, #1
 8000742:	fa02 f303 	lsl.w	r3, r2, r3
 8000746:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->PUPDR &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	68da      	ldr	r2, [r3, #12]
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	791b      	ldrb	r3, [r3, #4]
 8000752:	005b      	lsls	r3, r3, #1
 8000754:	2103      	movs	r1, #3
 8000756:	fa01 f303 	lsl.w	r3, r1, r3
 800075a:	43db      	mvns	r3, r3
 800075c:	4619      	mov	r1, r3
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	681b      	ldr	r3, [r3, #0]
 8000762:	400a      	ands	r2, r1
 8000764:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	68d9      	ldr	r1, [r3, #12]
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	697a      	ldr	r2, [r7, #20]
 8000772:	430a      	orrs	r2, r1
 8000774:	60da      	str	r2, [r3, #12]
	temp=0;
 8000776:	2300      	movs	r3, #0
 8000778:	617b      	str	r3, [r7, #20]

	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinOPType<<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	7a1b      	ldrb	r3, [r3, #8]
 800077e:	461a      	mov	r2, r3
 8000780:	687b      	ldr	r3, [r7, #4]
 8000782:	791b      	ldrb	r3, [r3, #4]
 8000784:	fa02 f303 	lsl.w	r3, r2, r3
 8000788:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->OTYPER &= ~(0X01 << ( pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	681b      	ldr	r3, [r3, #0]
 800078e:	685a      	ldr	r2, [r3, #4]
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	791b      	ldrb	r3, [r3, #4]
 8000794:	4619      	mov	r1, r3
 8000796:	2301      	movs	r3, #1
 8000798:	408b      	lsls	r3, r1
 800079a:	43db      	mvns	r3, r3
 800079c:	4619      	mov	r1, r3
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	681b      	ldr	r3, [r3, #0]
 80007a2:	400a      	ands	r2, r1
 80007a4:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 80007a6:	687b      	ldr	r3, [r7, #4]
 80007a8:	681b      	ldr	r3, [r3, #0]
 80007aa:	6859      	ldr	r1, [r3, #4]
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	681b      	ldr	r3, [r3, #0]
 80007b0:	697a      	ldr	r2, [r7, #20]
 80007b2:	430a      	orrs	r2, r1
 80007b4:	605a      	str	r2, [r3, #4]
	temp=0;
 80007b6:	2300      	movs	r3, #0
 80007b8:	617b      	str	r3, [r7, #20]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	795b      	ldrb	r3, [r3, #5]
 80007be:	2b02      	cmp	r3, #2
 80007c0:	d132      	bne.n	8000828 <GPIO_Init+0x358>
	{
		uint32_t temp1 ,temp2;
		temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 80007c2:	687b      	ldr	r3, [r7, #4]
 80007c4:	791b      	ldrb	r3, [r3, #4]
 80007c6:	08db      	lsrs	r3, r3, #3
 80007c8:	b2db      	uxtb	r3, r3
 80007ca:	60fb      	str	r3, [r7, #12]
		temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 80007cc:	687b      	ldr	r3, [r7, #4]
 80007ce:	791b      	ldrb	r3, [r3, #4]
 80007d0:	f003 0307 	and.w	r3, r3, #7
 80007d4:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0X0f<< (4*temp2));
 80007d6:	687b      	ldr	r3, [r7, #4]
 80007d8:	681b      	ldr	r3, [r3, #0]
 80007da:	68fa      	ldr	r2, [r7, #12]
 80007dc:	3208      	adds	r2, #8
 80007de:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80007e2:	68bb      	ldr	r3, [r7, #8]
 80007e4:	009b      	lsls	r3, r3, #2
 80007e6:	210f      	movs	r1, #15
 80007e8:	fa01 f303 	lsl.w	r3, r1, r3
 80007ec:	43db      	mvns	r3, r3
 80007ee:	4619      	mov	r1, r3
 80007f0:	687b      	ldr	r3, [r7, #4]
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	4011      	ands	r1, r2
 80007f6:	68fa      	ldr	r2, [r7, #12]
 80007f8:	3208      	adds	r2, #8
 80007fa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80007fe:	687b      	ldr	r3, [r7, #4]
 8000800:	681b      	ldr	r3, [r3, #0]
 8000802:	68fa      	ldr	r2, [r7, #12]
 8000804:	3208      	adds	r2, #8
 8000806:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800080a:	687b      	ldr	r3, [r7, #4]
 800080c:	7a5b      	ldrb	r3, [r3, #9]
 800080e:	4619      	mov	r1, r3
 8000810:	68bb      	ldr	r3, [r7, #8]
 8000812:	009b      	lsls	r3, r3, #2
 8000814:	fa01 f303 	lsl.w	r3, r1, r3
 8000818:	4619      	mov	r1, r3
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	681b      	ldr	r3, [r3, #0]
 800081e:	4311      	orrs	r1, r2
 8000820:	68fa      	ldr	r2, [r7, #12]
 8000822:	3208      	adds	r2, #8
 8000824:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 8000828:	bf00      	nop
 800082a:	371c      	adds	r7, #28
 800082c:	46bd      	mov	sp, r7
 800082e:	bc80      	pop	{r7}
 8000830:	4770      	bx	lr
 8000832:	bf00      	nop
 8000834:	40021000 	.word	0x40021000
 8000838:	40010000 	.word	0x40010000
 800083c:	40010400 	.word	0x40010400

08000840 <SPI_PeriClockControl>:
#include "SPI_driver.h"

/*peripheral clock setup */
void SPI_PeriClockControl(SPI_RegDef_t *pSPIx , uint8_t EnorDi)
{
 8000840:	b480      	push	{r7}
 8000842:	b083      	sub	sp, #12
 8000844:	af00      	add	r7, sp, #0
 8000846:	6078      	str	r0, [r7, #4]
 8000848:	460b      	mov	r3, r1
 800084a:	70fb      	strb	r3, [r7, #3]
		if(EnorDi == ENABLE)
 800084c:	78fb      	ldrb	r3, [r7, #3]
 800084e:	2b01      	cmp	r3, #1
 8000850:	d120      	bne.n	8000894 <SPI_PeriClockControl+0x54>
		{
			if(pSPIx == SPI1)
 8000852:	687b      	ldr	r3, [r7, #4]
 8000854:	4a22      	ldr	r2, [pc, #136]	@ (80008e0 <SPI_PeriClockControl+0xa0>)
 8000856:	4293      	cmp	r3, r2
 8000858:	d106      	bne.n	8000868 <SPI_PeriClockControl+0x28>
			{
				SPI1_PCLK_EN();
 800085a:	4b22      	ldr	r3, [pc, #136]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 800085c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800085e:	4a21      	ldr	r2, [pc, #132]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 8000860:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000864:	6613      	str	r3, [r2, #96]	@ 0x60
			else if(pSPIx==SPI3)
			{
				SPI3_PCLK_DI();
			}
		}
}
 8000866:	e035      	b.n	80008d4 <SPI_PeriClockControl+0x94>
			else if(pSPIx==SPI2)
 8000868:	687b      	ldr	r3, [r7, #4]
 800086a:	4a1f      	ldr	r2, [pc, #124]	@ (80008e8 <SPI_PeriClockControl+0xa8>)
 800086c:	4293      	cmp	r3, r2
 800086e:	d106      	bne.n	800087e <SPI_PeriClockControl+0x3e>
				SPI2_PCLK_EN();
 8000870:	4b1c      	ldr	r3, [pc, #112]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 8000872:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8000874:	4a1b      	ldr	r2, [pc, #108]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 8000876:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800087a:	6593      	str	r3, [r2, #88]	@ 0x58
}
 800087c:	e02a      	b.n	80008d4 <SPI_PeriClockControl+0x94>
			else if(pSPIx==SPI3)
 800087e:	687b      	ldr	r3, [r7, #4]
 8000880:	4a1a      	ldr	r2, [pc, #104]	@ (80008ec <SPI_PeriClockControl+0xac>)
 8000882:	4293      	cmp	r3, r2
 8000884:	d126      	bne.n	80008d4 <SPI_PeriClockControl+0x94>
				SPI3_PCLK_EN();
 8000886:	4b17      	ldr	r3, [pc, #92]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 8000888:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800088a:	4a16      	ldr	r2, [pc, #88]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 800088c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000890:	6593      	str	r3, [r2, #88]	@ 0x58
}
 8000892:	e01f      	b.n	80008d4 <SPI_PeriClockControl+0x94>
			if(pSPIx == SPI1)
 8000894:	687b      	ldr	r3, [r7, #4]
 8000896:	4a12      	ldr	r2, [pc, #72]	@ (80008e0 <SPI_PeriClockControl+0xa0>)
 8000898:	4293      	cmp	r3, r2
 800089a:	d106      	bne.n	80008aa <SPI_PeriClockControl+0x6a>
				SPI1_PCLK_DI();
 800089c:	4b11      	ldr	r3, [pc, #68]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 800089e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80008a0:	4a10      	ldr	r2, [pc, #64]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 80008a2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80008a6:	6613      	str	r3, [r2, #96]	@ 0x60
}
 80008a8:	e014      	b.n	80008d4 <SPI_PeriClockControl+0x94>
			else if(pSPIx==SPI2)
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	4a0e      	ldr	r2, [pc, #56]	@ (80008e8 <SPI_PeriClockControl+0xa8>)
 80008ae:	4293      	cmp	r3, r2
 80008b0:	d106      	bne.n	80008c0 <SPI_PeriClockControl+0x80>
				SPI2_PCLK_DI();
 80008b2:	4b0c      	ldr	r3, [pc, #48]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 80008b4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80008b6:	4a0b      	ldr	r2, [pc, #44]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 80008b8:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80008bc:	6593      	str	r3, [r2, #88]	@ 0x58
}
 80008be:	e009      	b.n	80008d4 <SPI_PeriClockControl+0x94>
			else if(pSPIx==SPI3)
 80008c0:	687b      	ldr	r3, [r7, #4]
 80008c2:	4a0a      	ldr	r2, [pc, #40]	@ (80008ec <SPI_PeriClockControl+0xac>)
 80008c4:	4293      	cmp	r3, r2
 80008c6:	d105      	bne.n	80008d4 <SPI_PeriClockControl+0x94>
				SPI3_PCLK_DI();
 80008c8:	4b06      	ldr	r3, [pc, #24]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 80008ca:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80008cc:	4a05      	ldr	r2, [pc, #20]	@ (80008e4 <SPI_PeriClockControl+0xa4>)
 80008ce:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 80008d2:	6593      	str	r3, [r2, #88]	@ 0x58
}
 80008d4:	bf00      	nop
 80008d6:	370c      	adds	r7, #12
 80008d8:	46bd      	mov	sp, r7
 80008da:	bc80      	pop	{r7}
 80008dc:	4770      	bx	lr
 80008de:	bf00      	nop
 80008e0:	40013000 	.word	0x40013000
 80008e4:	40021000 	.word	0x40021000
 80008e8:	40003800 	.word	0x40003800
 80008ec:	40003c00 	.word	0x40003c00

080008f0 <SPI_Init>:

/*Init and Deinit */
void SPI_Init(SPI_Handle_t *pSPIHANDLE)
{
 80008f0:	b580      	push	{r7, lr}
 80008f2:	b084      	sub	sp, #16
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	6078      	str	r0, [r7, #4]
	uint32_t tempreg=0;
 80008f8:	2300      	movs	r3, #0
 80008fa:	60fb      	str	r3, [r7, #12]
	SPI_PeriClockControl(pSPIHANDLE->pSPIx, ENABLE);
 80008fc:	687b      	ldr	r3, [r7, #4]
 80008fe:	681b      	ldr	r3, [r3, #0]
 8000900:	2101      	movs	r1, #1
 8000902:	4618      	mov	r0, r3
 8000904:	f7ff ff9c 	bl	8000840 <SPI_PeriClockControl>

	tempreg |=pSPIHANDLE->SPIConfig.SPI_DeviceMode<<2;
 8000908:	687b      	ldr	r3, [r7, #4]
 800090a:	791b      	ldrb	r3, [r3, #4]
 800090c:	009b      	lsls	r3, r3, #2
 800090e:	68fa      	ldr	r2, [r7, #12]
 8000910:	4313      	orrs	r3, r2
 8000912:	60fb      	str	r3, [r7, #12]


	if(pSPIHANDLE->SPIConfig.SPI_BusConfig==SPI_BUS_CONFIG_FD)
 8000914:	687b      	ldr	r3, [r7, #4]
 8000916:	795b      	ldrb	r3, [r3, #5]
 8000918:	2b01      	cmp	r3, #1
 800091a:	d104      	bne.n	8000926 <SPI_Init+0x36>
	{
		tempreg &=~(1<<15);
 800091c:	68fb      	ldr	r3, [r7, #12]
 800091e:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8000922:	60fb      	str	r3, [r7, #12]
 8000924:	e014      	b.n	8000950 <SPI_Init+0x60>
	}
	else if(pSPIHANDLE->SPIConfig.SPI_BusConfig==SPI_BUS_CONFIG_HD)
 8000926:	687b      	ldr	r3, [r7, #4]
 8000928:	795b      	ldrb	r3, [r3, #5]
 800092a:	2b02      	cmp	r3, #2
 800092c:	d104      	bne.n	8000938 <SPI_Init+0x48>
	{
		tempreg |=(1<<15);
 800092e:	68fb      	ldr	r3, [r7, #12]
 8000930:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8000934:	60fb      	str	r3, [r7, #12]
 8000936:	e00b      	b.n	8000950 <SPI_Init+0x60>
	}
	else if(pSPIHANDLE->SPIConfig.SPI_BusConfig==SPI_BUS_CONFIG_SIMPLEX_RXONLY)
 8000938:	687b      	ldr	r3, [r7, #4]
 800093a:	795b      	ldrb	r3, [r3, #5]
 800093c:	2b03      	cmp	r3, #3
 800093e:	d107      	bne.n	8000950 <SPI_Init+0x60>
	{
		tempreg &=~(1<<15);
 8000940:	68fb      	ldr	r3, [r7, #12]
 8000942:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8000946:	60fb      	str	r3, [r7, #12]
		tempreg |=(1<<10);
 8000948:	68fb      	ldr	r3, [r7, #12]
 800094a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800094e:	60fb      	str	r3, [r7, #12]
	}
	tempreg |=pSPIHANDLE->SPIConfig.SPI_SclkSpeed<<3;
 8000950:	687b      	ldr	r3, [r7, #4]
 8000952:	799b      	ldrb	r3, [r3, #6]
 8000954:	00db      	lsls	r3, r3, #3
 8000956:	68fa      	ldr	r2, [r7, #12]
 8000958:	4313      	orrs	r3, r2
 800095a:	60fb      	str	r3, [r7, #12]

	tempreg |=pSPIHANDLE->SPIConfig.SPI_CPOL<<1;
 800095c:	687b      	ldr	r3, [r7, #4]
 800095e:	7a1b      	ldrb	r3, [r3, #8]
 8000960:	005b      	lsls	r3, r3, #1
 8000962:	68fa      	ldr	r2, [r7, #12]
 8000964:	4313      	orrs	r3, r2
 8000966:	60fb      	str	r3, [r7, #12]
	tempreg |=pSPIHANDLE->SPIConfig.SPI_CPHA<<0;
 8000968:	687b      	ldr	r3, [r7, #4]
 800096a:	7a5b      	ldrb	r3, [r3, #9]
 800096c:	461a      	mov	r2, r3
 800096e:	68fb      	ldr	r3, [r7, #12]
 8000970:	4313      	orrs	r3, r2
 8000972:	60fb      	str	r3, [r7, #12]

	pSPIHANDLE->pSPIx->CR1 |=tempreg;
 8000974:	687b      	ldr	r3, [r7, #4]
 8000976:	681b      	ldr	r3, [r3, #0]
 8000978:	6819      	ldr	r1, [r3, #0]
 800097a:	687b      	ldr	r3, [r7, #4]
 800097c:	681b      	ldr	r3, [r3, #0]
 800097e:	68fa      	ldr	r2, [r7, #12]
 8000980:	430a      	orrs	r2, r1
 8000982:	601a      	str	r2, [r3, #0]

	tempreg=0;
 8000984:	2300      	movs	r3, #0
 8000986:	60fb      	str	r3, [r7, #12]
	tempreg |=pSPIHANDLE->SPIConfig.SPI_DFF<<8;
 8000988:	687b      	ldr	r3, [r7, #4]
 800098a:	79db      	ldrb	r3, [r3, #7]
 800098c:	021b      	lsls	r3, r3, #8
 800098e:	68fa      	ldr	r2, [r7, #12]
 8000990:	4313      	orrs	r3, r2
 8000992:	60fb      	str	r3, [r7, #12]
	pSPIHANDLE->pSPIx->CR2 |=tempreg;
 8000994:	687b      	ldr	r3, [r7, #4]
 8000996:	681b      	ldr	r3, [r3, #0]
 8000998:	6859      	ldr	r1, [r3, #4]
 800099a:	687b      	ldr	r3, [r7, #4]
 800099c:	681b      	ldr	r3, [r3, #0]
 800099e:	68fa      	ldr	r2, [r7, #12]
 80009a0:	430a      	orrs	r2, r1
 80009a2:	605a      	str	r2, [r3, #4]
}
 80009a4:	bf00      	nop
 80009a6:	3710      	adds	r7, #16
 80009a8:	46bd      	mov	sp, r7
 80009aa:	bd80      	pop	{r7, pc}

080009ac <SPI_SendData>:

/*read and write */
void SPI_SendData(SPI_RegDef_t *pSPIx, uint8_t *pTxBuffer,uint32_t Len)
{
 80009ac:	b480      	push	{r7}
 80009ae:	b085      	sub	sp, #20
 80009b0:	af00      	add	r7, sp, #0
 80009b2:	60f8      	str	r0, [r7, #12]
 80009b4:	60b9      	str	r1, [r7, #8]
 80009b6:	607a      	str	r2, [r7, #4]
	while(Len >0)
 80009b8:	e012      	b.n	80009e0 <SPI_SendData+0x34>
	{
		while(((pSPIx->SR >> 1)&1)==0);
 80009ba:	bf00      	nop
 80009bc:	68fb      	ldr	r3, [r7, #12]
 80009be:	689b      	ldr	r3, [r3, #8]
 80009c0:	085b      	lsrs	r3, r3, #1
 80009c2:	f003 0301 	and.w	r3, r3, #1
 80009c6:	2b00      	cmp	r3, #0
 80009c8:	d0f8      	beq.n	80009bc <SPI_SendData+0x10>

		pSPIx ->DR =*pTxBuffer;
 80009ca:	68bb      	ldr	r3, [r7, #8]
 80009cc:	781b      	ldrb	r3, [r3, #0]
 80009ce:	461a      	mov	r2, r3
 80009d0:	68fb      	ldr	r3, [r7, #12]
 80009d2:	60da      	str	r2, [r3, #12]
		Len--;
 80009d4:	687b      	ldr	r3, [r7, #4]
 80009d6:	3b01      	subs	r3, #1
 80009d8:	607b      	str	r3, [r7, #4]
		pTxBuffer++;
 80009da:	68bb      	ldr	r3, [r7, #8]
 80009dc:	3301      	adds	r3, #1
 80009de:	60bb      	str	r3, [r7, #8]
	while(Len >0)
 80009e0:	687b      	ldr	r3, [r7, #4]
 80009e2:	2b00      	cmp	r3, #0
 80009e4:	d1e9      	bne.n	80009ba <SPI_SendData+0xe>
	}
}
 80009e6:	bf00      	nop
 80009e8:	bf00      	nop
 80009ea:	3714      	adds	r7, #20
 80009ec:	46bd      	mov	sp, r7
 80009ee:	bc80      	pop	{r7}
 80009f0:	4770      	bx	lr

080009f2 <SPI_GetFlagStatus>:
		pRxBuffer++;
	}
}

uint8_t SPI_GetFlagStatus(SPI_RegDef_t*pSPIx, uint32_t FlagName)
{
 80009f2:	b480      	push	{r7}
 80009f4:	b083      	sub	sp, #12
 80009f6:	af00      	add	r7, sp, #0
 80009f8:	6078      	str	r0, [r7, #4]
 80009fa:	6039      	str	r1, [r7, #0]
	if(pSPIx -> SR &FlagName){
 80009fc:	687b      	ldr	r3, [r7, #4]
 80009fe:	689a      	ldr	r2, [r3, #8]
 8000a00:	683b      	ldr	r3, [r7, #0]
 8000a02:	4013      	ands	r3, r2
 8000a04:	2b00      	cmp	r3, #0
 8000a06:	d001      	beq.n	8000a0c <SPI_GetFlagStatus+0x1a>
		return FLAG_SET;
 8000a08:	2301      	movs	r3, #1
 8000a0a:	e000      	b.n	8000a0e <SPI_GetFlagStatus+0x1c>
	}
	return FLAG_RESET;
 8000a0c:	2300      	movs	r3, #0
}
 8000a0e:	4618      	mov	r0, r3
 8000a10:	370c      	adds	r7, #12
 8000a12:	46bd      	mov	sp, r7
 8000a14:	bc80      	pop	{r7}
 8000a16:	4770      	bx	lr

08000a18 <SPI_PeripheralControl>:

void SPI_PeripheralControl(SPI_RegDef_t *pSPIx, uint8_t EnOrDi)
{
 8000a18:	b480      	push	{r7}
 8000a1a:	b083      	sub	sp, #12
 8000a1c:	af00      	add	r7, sp, #0
 8000a1e:	6078      	str	r0, [r7, #4]
 8000a20:	460b      	mov	r3, r1
 8000a22:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 8000a24:	78fb      	ldrb	r3, [r7, #3]
 8000a26:	2b01      	cmp	r3, #1
 8000a28:	d106      	bne.n	8000a38 <SPI_PeripheralControl+0x20>
	{
		pSPIx->CR1 |=  (1 << 6);
 8000a2a:	687b      	ldr	r3, [r7, #4]
 8000a2c:	681b      	ldr	r3, [r3, #0]
 8000a2e:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8000a32:	687b      	ldr	r3, [r7, #4]
 8000a34:	601a      	str	r2, [r3, #0]
	}else
	{
		pSPIx->CR1 &=  ~(1 << 6);
	}
}
 8000a36:	e005      	b.n	8000a44 <SPI_PeripheralControl+0x2c>
		pSPIx->CR1 &=  ~(1 << 6);
 8000a38:	687b      	ldr	r3, [r7, #4]
 8000a3a:	681b      	ldr	r3, [r3, #0]
 8000a3c:	f023 0240 	bic.w	r2, r3, #64	@ 0x40
 8000a40:	687b      	ldr	r3, [r7, #4]
 8000a42:	601a      	str	r2, [r3, #0]
}
 8000a44:	bf00      	nop
 8000a46:	370c      	adds	r7, #12
 8000a48:	46bd      	mov	sp, r7
 8000a4a:	bc80      	pop	{r7}
 8000a4c:	4770      	bx	lr

08000a4e <SPI_SSOEConfig>:
		pSPIx->CR1 &=  ~(1 << 8);
	}
}

void  SPI_SSOEConfig(SPI_RegDef_t *pSPIx, uint8_t EnOrDi)
{
 8000a4e:	b480      	push	{r7}
 8000a50:	b083      	sub	sp, #12
 8000a52:	af00      	add	r7, sp, #0
 8000a54:	6078      	str	r0, [r7, #4]
 8000a56:	460b      	mov	r3, r1
 8000a58:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 8000a5a:	78fb      	ldrb	r3, [r7, #3]
 8000a5c:	2b01      	cmp	r3, #1
 8000a5e:	d106      	bne.n	8000a6e <SPI_SSOEConfig+0x20>
	{
		pSPIx->CR2 |=  (1 << 2);
 8000a60:	687b      	ldr	r3, [r7, #4]
 8000a62:	685b      	ldr	r3, [r3, #4]
 8000a64:	f043 0204 	orr.w	r2, r3, #4
 8000a68:	687b      	ldr	r3, [r7, #4]
 8000a6a:	605a      	str	r2, [r3, #4]
	}else
	{
		pSPIx->CR2 &=  ~(1 << 2);
	}
}
 8000a6c:	e005      	b.n	8000a7a <SPI_SSOEConfig+0x2c>
		pSPIx->CR2 &=  ~(1 << 2);
 8000a6e:	687b      	ldr	r3, [r7, #4]
 8000a70:	685b      	ldr	r3, [r3, #4]
 8000a72:	f023 0204 	bic.w	r2, r3, #4
 8000a76:	687b      	ldr	r3, [r7, #4]
 8000a78:	605a      	str	r2, [r3, #4]
}
 8000a7a:	bf00      	nop
 8000a7c:	370c      	adds	r7, #12
 8000a7e:	46bd      	mov	sp, r7
 8000a80:	bc80      	pop	{r7}
 8000a82:	4770      	bx	lr

08000a84 <__libc_init_array>:
 8000a84:	b570      	push	{r4, r5, r6, lr}
 8000a86:	4d0d      	ldr	r5, [pc, #52]	@ (8000abc <__libc_init_array+0x38>)
 8000a88:	4c0d      	ldr	r4, [pc, #52]	@ (8000ac0 <__libc_init_array+0x3c>)
 8000a8a:	1b64      	subs	r4, r4, r5
 8000a8c:	10a4      	asrs	r4, r4, #2
 8000a8e:	2600      	movs	r6, #0
 8000a90:	42a6      	cmp	r6, r4
 8000a92:	d109      	bne.n	8000aa8 <__libc_init_array+0x24>
 8000a94:	4d0b      	ldr	r5, [pc, #44]	@ (8000ac4 <__libc_init_array+0x40>)
 8000a96:	4c0c      	ldr	r4, [pc, #48]	@ (8000ac8 <__libc_init_array+0x44>)
 8000a98:	f000 f818 	bl	8000acc <_init>
 8000a9c:	1b64      	subs	r4, r4, r5
 8000a9e:	10a4      	asrs	r4, r4, #2
 8000aa0:	2600      	movs	r6, #0
 8000aa2:	42a6      	cmp	r6, r4
 8000aa4:	d105      	bne.n	8000ab2 <__libc_init_array+0x2e>
 8000aa6:	bd70      	pop	{r4, r5, r6, pc}
 8000aa8:	f855 3b04 	ldr.w	r3, [r5], #4
 8000aac:	4798      	blx	r3
 8000aae:	3601      	adds	r6, #1
 8000ab0:	e7ee      	b.n	8000a90 <__libc_init_array+0xc>
 8000ab2:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ab6:	4798      	blx	r3
 8000ab8:	3601      	adds	r6, #1
 8000aba:	e7f2      	b.n	8000aa2 <__libc_init_array+0x1e>
 8000abc:	08000ae4 	.word	0x08000ae4
 8000ac0:	08000ae4 	.word	0x08000ae4
 8000ac4:	08000ae4 	.word	0x08000ae4
 8000ac8:	08000ae8 	.word	0x08000ae8

08000acc <_init>:
 8000acc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ace:	bf00      	nop
 8000ad0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ad2:	bc08      	pop	{r3}
 8000ad4:	469e      	mov	lr, r3
 8000ad6:	4770      	bx	lr

08000ad8 <_fini>:
 8000ad8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ada:	bf00      	nop
 8000adc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ade:	bc08      	pop	{r3}
 8000ae0:	469e      	mov	lr, r3
 8000ae2:	4770      	bx	lr
