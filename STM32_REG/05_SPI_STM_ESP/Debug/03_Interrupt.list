
03_Interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000018c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008b0  0800018c  0800018c  0000118c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a3c  08000a44  00001a44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a3c  08000a3c  00001a44  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000a3c  08000a3c  00001a44  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000a3c  08000a44  00001a44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a3c  08000a3c  00001a3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000a40  08000a40  00001a40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001a44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00001a44  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00001a44  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000b75  00000000  00000000  00001a6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002c8  00000000  00000000  000025e3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  000028b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00002978  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002195  00000000  00000000  00002a04  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001112  00000000  00000000  00004b99  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000988b  00000000  00000000  00005cab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000f536  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000288  00000000  00000000  0000f57c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000005a  00000000  00000000  0000f804  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

0800018c <__do_global_dtors_aux>:
 800018c:	b510      	push	{r4, lr}
 800018e:	4c05      	ldr	r4, [pc, #20]	@ (80001a4 <__do_global_dtors_aux+0x18>)
 8000190:	7823      	ldrb	r3, [r4, #0]
 8000192:	b933      	cbnz	r3, 80001a2 <__do_global_dtors_aux+0x16>
 8000194:	4b04      	ldr	r3, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x1c>)
 8000196:	b113      	cbz	r3, 800019e <__do_global_dtors_aux+0x12>
 8000198:	4804      	ldr	r0, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x20>)
 800019a:	f3af 8000 	nop.w
 800019e:	2301      	movs	r3, #1
 80001a0:	7023      	strb	r3, [r4, #0]
 80001a2:	bd10      	pop	{r4, pc}
 80001a4:	20000000 	.word	0x20000000
 80001a8:	00000000 	.word	0x00000000
 80001ac:	08000a24 	.word	0x08000a24

080001b0 <frame_dummy>:
 80001b0:	b508      	push	{r3, lr}
 80001b2:	4b03      	ldr	r3, [pc, #12]	@ (80001c0 <frame_dummy+0x10>)
 80001b4:	b11b      	cbz	r3, 80001be <frame_dummy+0xe>
 80001b6:	4903      	ldr	r1, [pc, #12]	@ (80001c4 <frame_dummy+0x14>)
 80001b8:	4803      	ldr	r0, [pc, #12]	@ (80001c8 <frame_dummy+0x18>)
 80001ba:	f3af 8000 	nop.w
 80001be:	bd08      	pop	{r3, pc}
 80001c0:	00000000 	.word	0x00000000
 80001c4:	20000004 	.word	0x20000004
 80001c8:	08000a24 	.word	0x08000a24

080001cc <delay>:
#include"stm32l4xx.h"
#include"stm32l4xx_gpio_driver.h"

// Simple delay function (used for debouncing)
void delay()
{
 80001cc:	b480      	push	{r7}
 80001ce:	b083      	sub	sp, #12
 80001d0:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i<250000; i++);
 80001d2:	2300      	movs	r3, #0
 80001d4:	607b      	str	r3, [r7, #4]
 80001d6:	e002      	b.n	80001de <delay+0x12>
 80001d8:	687b      	ldr	r3, [r7, #4]
 80001da:	3301      	adds	r3, #1
 80001dc:	607b      	str	r3, [r7, #4]
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	4a04      	ldr	r2, [pc, #16]	@ (80001f4 <delay+0x28>)
 80001e2:	4293      	cmp	r3, r2
 80001e4:	d9f8      	bls.n	80001d8 <delay+0xc>
}
 80001e6:	bf00      	nop
 80001e8:	bf00      	nop
 80001ea:	370c      	adds	r7, #12
 80001ec:	46bd      	mov	sp, r7
 80001ee:	bc80      	pop	{r7}
 80001f0:	4770      	bx	lr
 80001f2:	bf00      	nop
 80001f4:	0003d08f 	.word	0x0003d08f

080001f8 <main>:

int main(void)
{
 80001f8:	b580      	push	{r7, lr}
 80001fa:	b086      	sub	sp, #24
 80001fc:	af00      	add	r7, sp, #0
    /* Declare handles for LED and Button */
	GPIO_Handle_t GpioLed, GpioBtn;

    // Clear structures (avoid garbage values)
	memset(&GpioLed, 0, sizeof(GpioLed));
 80001fe:	f107 030c 	add.w	r3, r7, #12
 8000202:	220c      	movs	r2, #12
 8000204:	2100      	movs	r1, #0
 8000206:	4618      	mov	r0, r3
 8000208:	f000 fbe0 	bl	80009cc <memset>
	memset(&GpioBtn, 0, sizeof(GpioBtn));
 800020c:	463b      	mov	r3, r7
 800020e:	220c      	movs	r2, #12
 8000210:	2100      	movs	r1, #0
 8000212:	4618      	mov	r0, r3
 8000214:	f000 fbda 	bl	80009cc <memset>

    // --- LED Setup ---
	GpioLed.pGPIOx = GPIOA;                          // LED is on Port A
 8000218:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800021c:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;  // Pin A5
 800021e:	2305      	movs	r3, #5
 8000220:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;    // Set as output
 8000222:	2301      	movs	r3, #1
 8000224:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST; // Fast speed
 8000226:	2302      	movs	r3, #2
 8000228:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP; // Push-pull
 800022a:	2300      	movs	r3, #0
 800022c:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU; // Pull-up
 800022e:	2301      	movs	r3, #1
 8000230:	74fb      	strb	r3, [r7, #19]
	GPIO_PeriClockControl(GPIOA, ENABLE);            // Enable Port A clock
 8000232:	2101      	movs	r1, #1
 8000234:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000238:	f000 f85c 	bl	80002f4 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);                             // Initialize LED pin
 800023c:	f107 030c 	add.w	r3, r7, #12
 8000240:	4618      	mov	r0, r3
 8000242:	f000 f925 	bl	8000490 <GPIO_Init>

    // --- Button Setup ---
	GpioBtn.pGPIOx = GPIOC;                          // Button is on Port C
 8000246:	4b0e      	ldr	r3, [pc, #56]	@ (8000280 <main+0x88>)
 8000248:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;  // Pin C13
 800024a:	230d      	movs	r3, #13
 800024c:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;   // Interrupt on falling edge
 800024e:	2304      	movs	r3, #4
 8000250:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;  // Fast speed
 8000252:	2302      	movs	r3, #2
 8000254:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU; // Pull-up
 8000256:	2301      	movs	r3, #1
 8000258:	71fb      	strb	r3, [r7, #7]
	GPIO_PeriClockControl(GPIOC, ENABLE);            // Enable Port C clock
 800025a:	2101      	movs	r1, #1
 800025c:	4808      	ldr	r0, [pc, #32]	@ (8000280 <main+0x88>)
 800025e:	f000 f849 	bl	80002f4 <GPIO_PeriClockControl>
	GPIO_Init(&GpioBtn);                             // Initialize button pin
 8000262:	463b      	mov	r3, r7
 8000264:	4618      	mov	r0, r3
 8000266:	f000 f913 	bl	8000490 <GPIO_Init>

    // --- NVIC Configuration ---
	GPIO_PRIORITY_CONFIG(IRQ_NO_EXTI15_10, 15);     // Set EXTI15_10 priority
 800026a:	210f      	movs	r1, #15
 800026c:	2028      	movs	r0, #40	@ 0x28
 800026e:	f000 fb5f 	bl	8000930 <GPIO_PRIORITY_CONFIG>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI15_10, ENABLE); // Enable EXTI15_10 interrupt
 8000272:	2101      	movs	r1, #1
 8000274:	2028      	movs	r0, #40	@ 0x28
 8000276:	f000 fad7 	bl	8000828 <GPIO_IRQInterruptConfig>

	while(1); // Wait here, actions happen in ISR
 800027a:	bf00      	nop
 800027c:	e7fd      	b.n	800027a <main+0x82>
 800027e:	bf00      	nop
 8000280:	48000800 	.word	0x48000800

08000284 <EXTI15_10_IRQHandler>:
}

// --- Interrupt Service Routine for PC13 ---
void EXTI15_10_IRQHandler(void)
{
 8000284:	b580      	push	{r7, lr}
 8000286:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_13);               // Clear EXTI flag
 8000288:	200d      	movs	r0, #13
 800028a:	f000 fb7f 	bl	800098c <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOA, GPIO_PIN_NO_5);    // Toggle LED
 800028e:	2105      	movs	r1, #5
 8000290:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8000294:	f000 fab4 	bl	8000800 <GPIO_ToggleOutputPin>
	delay();                                        // Debounce
 8000298:	f7ff ff98 	bl	80001cc <delay>
}
 800029c:	bf00      	nop
 800029e:	bd80      	pop	{r7, pc}

080002a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002a0:	480d      	ldr	r0, [pc, #52]	@ (80002d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002a2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002a4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a8:	480c      	ldr	r0, [pc, #48]	@ (80002dc <LoopForever+0x6>)
  ldr r1, =_edata
 80002aa:	490d      	ldr	r1, [pc, #52]	@ (80002e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002ac:	4a0d      	ldr	r2, [pc, #52]	@ (80002e4 <LoopForever+0xe>)
  movs r3, #0
 80002ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002b0:	e002      	b.n	80002b8 <LoopCopyDataInit>

080002b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002b6:	3304      	adds	r3, #4

080002b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002bc:	d3f9      	bcc.n	80002b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002be:	4a0a      	ldr	r2, [pc, #40]	@ (80002e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002c0:	4c0a      	ldr	r4, [pc, #40]	@ (80002ec <LoopForever+0x16>)
  movs r3, #0
 80002c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002c4:	e001      	b.n	80002ca <LoopFillZerobss>

080002c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c8:	3204      	adds	r2, #4

080002ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002cc:	d3fb      	bcc.n	80002c6 <FillZerobss>


/* Call static constructors */
  bl __libc_init_array
 80002ce:	f000 fb85 	bl	80009dc <__libc_init_array>
/* Call the application's entry point.*/

  bl main
 80002d2:	f7ff ff91 	bl	80001f8 <main>

080002d6 <LoopForever>:

LoopForever:
  b LoopForever
 80002d6:	e7fe      	b.n	80002d6 <LoopForever>
  ldr   r0, =_estack
 80002d8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80002dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002e0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002e4:	08000a44 	.word	0x08000a44
  ldr r2, =_sbss
 80002e8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002ec:	2000001c 	.word	0x2000001c

080002f0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002f0:	e7fe      	b.n	80002f0 <ADC1_2_IRQHandler>
	...

080002f4 <GPIO_PeriClockControl>:
#include"stm32l4xx_gpio_driver.h"


/*peripheral clock setup */
void GPIO_PeriClockControl(GPIO_Regdef_t *pGPIOx , uint8_t EnorDi)
{
 80002f4:	b480      	push	{r7}
 80002f6:	b083      	sub	sp, #12
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	6078      	str	r0, [r7, #4]
 80002fc:	460b      	mov	r3, r1
 80002fe:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000300:	78fb      	ldrb	r3, [r7, #3]
 8000302:	2b01      	cmp	r3, #1
 8000304:	d157      	bne.n	80003b6 <GPIO_PeriClockControl+0xc2>
	{
		if(pGPIOx == GPIOA)
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800030c:	d106      	bne.n	800031c <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 800030e:	4b58      	ldr	r3, [pc, #352]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000310:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000312:	4a57      	ldr	r2, [pc, #348]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000314:	f043 0301 	orr.w	r3, r3, #1
 8000318:	64d3      	str	r3, [r2, #76]	@ 0x4c
				else if(pGPIOx==GPIOH)
				{
					GPIOH_PCLK_DI();
				}
	}
}
 800031a:	e0a3      	b.n	8000464 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOB)
 800031c:	687b      	ldr	r3, [r7, #4]
 800031e:	4a55      	ldr	r2, [pc, #340]	@ (8000474 <GPIO_PeriClockControl+0x180>)
 8000320:	4293      	cmp	r3, r2
 8000322:	d106      	bne.n	8000332 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000324:	4b52      	ldr	r3, [pc, #328]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000326:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000328:	4a51      	ldr	r2, [pc, #324]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 800032a:	f043 0302 	orr.w	r3, r3, #2
 800032e:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000330:	e098      	b.n	8000464 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOC)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	4a50      	ldr	r2, [pc, #320]	@ (8000478 <GPIO_PeriClockControl+0x184>)
 8000336:	4293      	cmp	r3, r2
 8000338:	d106      	bne.n	8000348 <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800033a:	4b4d      	ldr	r3, [pc, #308]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 800033c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800033e:	4a4c      	ldr	r2, [pc, #304]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000340:	f043 0304 	orr.w	r3, r3, #4
 8000344:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000346:	e08d      	b.n	8000464 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOD)
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	4a4c      	ldr	r2, [pc, #304]	@ (800047c <GPIO_PeriClockControl+0x188>)
 800034c:	4293      	cmp	r3, r2
 800034e:	d106      	bne.n	800035e <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000350:	4b47      	ldr	r3, [pc, #284]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000352:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000354:	4a46      	ldr	r2, [pc, #280]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000356:	f043 0308 	orr.w	r3, r3, #8
 800035a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800035c:	e082      	b.n	8000464 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOE)
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4a47      	ldr	r2, [pc, #284]	@ (8000480 <GPIO_PeriClockControl+0x18c>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d106      	bne.n	8000374 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 8000366:	4b42      	ldr	r3, [pc, #264]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000368:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800036a:	4a41      	ldr	r2, [pc, #260]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 800036c:	f043 0310 	orr.w	r3, r3, #16
 8000370:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000372:	e077      	b.n	8000464 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOF)
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a43      	ldr	r2, [pc, #268]	@ (8000484 <GPIO_PeriClockControl+0x190>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d106      	bne.n	800038a <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 800037c:	4b3c      	ldr	r3, [pc, #240]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 800037e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000380:	4a3b      	ldr	r2, [pc, #236]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000382:	f043 0320 	orr.w	r3, r3, #32
 8000386:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000388:	e06c      	b.n	8000464 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOG)
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	4a3e      	ldr	r2, [pc, #248]	@ (8000488 <GPIO_PeriClockControl+0x194>)
 800038e:	4293      	cmp	r3, r2
 8000390:	d106      	bne.n	80003a0 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000392:	4b37      	ldr	r3, [pc, #220]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000394:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000396:	4a36      	ldr	r2, [pc, #216]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000398:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800039c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800039e:	e061      	b.n	8000464 <GPIO_PeriClockControl+0x170>
		else if(pGPIOx==GPIOH)
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a3a      	ldr	r2, [pc, #232]	@ (800048c <GPIO_PeriClockControl+0x198>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d15d      	bne.n	8000464 <GPIO_PeriClockControl+0x170>
			GPIOH_PCLK_EN();
 80003a8:	4b31      	ldr	r3, [pc, #196]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 80003aa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003ac:	4a30      	ldr	r2, [pc, #192]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 80003ae:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003b2:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003b4:	e056      	b.n	8000464 <GPIO_PeriClockControl+0x170>
		if(pGPIOx == GPIOA)
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80003bc:	d106      	bne.n	80003cc <GPIO_PeriClockControl+0xd8>
					GPIOA_PCLK_DI();
 80003be:	4b2c      	ldr	r3, [pc, #176]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 80003c0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003c2:	4a2b      	ldr	r2, [pc, #172]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 80003c4:	f023 0301 	bic.w	r3, r3, #1
 80003c8:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003ca:	e04b      	b.n	8000464 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOB)
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	4a29      	ldr	r2, [pc, #164]	@ (8000474 <GPIO_PeriClockControl+0x180>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d106      	bne.n	80003e2 <GPIO_PeriClockControl+0xee>
					GPIOB_PCLK_DI();
 80003d4:	4b26      	ldr	r3, [pc, #152]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 80003d6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003d8:	4a25      	ldr	r2, [pc, #148]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 80003da:	f023 0302 	bic.w	r3, r3, #2
 80003de:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003e0:	e040      	b.n	8000464 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOC)
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4a24      	ldr	r2, [pc, #144]	@ (8000478 <GPIO_PeriClockControl+0x184>)
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d106      	bne.n	80003f8 <GPIO_PeriClockControl+0x104>
					GPIOC_PCLK_DI();
 80003ea:	4b21      	ldr	r3, [pc, #132]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 80003ec:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80003ee:	4a20      	ldr	r2, [pc, #128]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 80003f0:	f023 0304 	bic.w	r3, r3, #4
 80003f4:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 80003f6:	e035      	b.n	8000464 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOD)
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a20      	ldr	r2, [pc, #128]	@ (800047c <GPIO_PeriClockControl+0x188>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d106      	bne.n	800040e <GPIO_PeriClockControl+0x11a>
					GPIOD_PCLK_DI();
 8000400:	4b1b      	ldr	r3, [pc, #108]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000402:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000404:	4a1a      	ldr	r2, [pc, #104]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000406:	f023 0308 	bic.w	r3, r3, #8
 800040a:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800040c:	e02a      	b.n	8000464 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOE)
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4a1b      	ldr	r2, [pc, #108]	@ (8000480 <GPIO_PeriClockControl+0x18c>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d106      	bne.n	8000424 <GPIO_PeriClockControl+0x130>
					GPIOE_PCLK_DI();
 8000416:	4b16      	ldr	r3, [pc, #88]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000418:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800041a:	4a15      	ldr	r2, [pc, #84]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 800041c:	f023 0310 	bic.w	r3, r3, #16
 8000420:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000422:	e01f      	b.n	8000464 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOF)
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	4a17      	ldr	r2, [pc, #92]	@ (8000484 <GPIO_PeriClockControl+0x190>)
 8000428:	4293      	cmp	r3, r2
 800042a:	d106      	bne.n	800043a <GPIO_PeriClockControl+0x146>
					GPIOF_PCLK_DI();
 800042c:	4b10      	ldr	r3, [pc, #64]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 800042e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000430:	4a0f      	ldr	r2, [pc, #60]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000432:	f023 0320 	bic.w	r3, r3, #32
 8000436:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000438:	e014      	b.n	8000464 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOG)
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	4a12      	ldr	r2, [pc, #72]	@ (8000488 <GPIO_PeriClockControl+0x194>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d106      	bne.n	8000450 <GPIO_PeriClockControl+0x15c>
					GPIOG_PCLK_DI();
 8000442:	4b0b      	ldr	r3, [pc, #44]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000444:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000446:	4a0a      	ldr	r2, [pc, #40]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 8000448:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800044c:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 800044e:	e009      	b.n	8000464 <GPIO_PeriClockControl+0x170>
				else if(pGPIOx==GPIOH)
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	4a0e      	ldr	r2, [pc, #56]	@ (800048c <GPIO_PeriClockControl+0x198>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d105      	bne.n	8000464 <GPIO_PeriClockControl+0x170>
					GPIOH_PCLK_DI();
 8000458:	4b05      	ldr	r3, [pc, #20]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 800045a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800045c:	4a04      	ldr	r2, [pc, #16]	@ (8000470 <GPIO_PeriClockControl+0x17c>)
 800045e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000462:	64d3      	str	r3, [r2, #76]	@ 0x4c
}
 8000464:	bf00      	nop
 8000466:	370c      	adds	r7, #12
 8000468:	46bd      	mov	sp, r7
 800046a:	bc80      	pop	{r7}
 800046c:	4770      	bx	lr
 800046e:	bf00      	nop
 8000470:	40021000 	.word	0x40021000
 8000474:	48000400 	.word	0x48000400
 8000478:	48000800 	.word	0x48000800
 800047c:	48000c00 	.word	0x48000c00
 8000480:	48001000 	.word	0x48001000
 8000484:	48001400 	.word	0x48001400
 8000488:	48001800 	.word	0x48001800
 800048c:	48001c00 	.word	0x48001c00

08000490 <GPIO_Init>:

/*init and deint */

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000490:	b480      	push	{r7}
 8000492:	b087      	sub	sp, #28
 8000494:	af00      	add	r7, sp, #0
 8000496:	6078      	str	r0, [r7, #4]
	uint32_t temp=0;
 8000498:	2300      	movs	r3, #0
 800049a:	617b      	str	r3, [r7, #20]
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	795b      	ldrb	r3, [r3, #5]
 80004a0:	2b03      	cmp	r3, #3
 80004a2:	d822      	bhi.n	80004ea <GPIO_Init+0x5a>
	{
		temp=( pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	795b      	ldrb	r3, [r3, #5]
 80004a8:	461a      	mov	r2, r3
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	791b      	ldrb	r3, [r3, #4]
 80004ae:	005b      	lsls	r3, r3, #1
 80004b0:	fa02 f303 	lsl.w	r3, r2, r3
 80004b4:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	681a      	ldr	r2, [r3, #0]
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	791b      	ldrb	r3, [r3, #4]
 80004c0:	005b      	lsls	r3, r3, #1
 80004c2:	2103      	movs	r1, #3
 80004c4:	fa01 f303 	lsl.w	r3, r1, r3
 80004c8:	43db      	mvns	r3, r3
 80004ca:	4619      	mov	r1, r3
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	400a      	ands	r2, r1
 80004d2:	601a      	str	r2, [r3, #0]
		pGPIOHandle ->pGPIOx->MODER |= temp;
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	6819      	ldr	r1, [r3, #0]
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	681b      	ldr	r3, [r3, #0]
 80004de:	697a      	ldr	r2, [r7, #20]
 80004e0:	430a      	orrs	r2, r1
 80004e2:	601a      	str	r2, [r3, #0]
		temp=0;
 80004e4:	2300      	movs	r3, #0
 80004e6:	617b      	str	r3, [r7, #20]
 80004e8:	e0e1      	b.n	80006ae <GPIO_Init+0x21e>
	}
	else{
		temp=( pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	795b      	ldrb	r3, [r3, #5]
 80004ee:	461a      	mov	r2, r3
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	791b      	ldrb	r3, [r3, #4]
 80004f4:	005b      	lsls	r3, r3, #1
 80004f6:	fa02 f303 	lsl.w	r3, r2, r3
 80004fa:	617b      	str	r3, [r7, #20]
				pGPIOHandle->pGPIOx->MODER &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	681a      	ldr	r2, [r3, #0]
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	791b      	ldrb	r3, [r3, #4]
 8000506:	005b      	lsls	r3, r3, #1
 8000508:	2103      	movs	r1, #3
 800050a:	fa01 f303 	lsl.w	r3, r1, r3
 800050e:	43db      	mvns	r3, r3
 8000510:	4619      	mov	r1, r3
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	400a      	ands	r2, r1
 8000518:	601a      	str	r2, [r3, #0]
				pGPIOHandle ->pGPIOx->MODER |= temp;
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	6819      	ldr	r1, [r3, #0]
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	697a      	ldr	r2, [r7, #20]
 8000526:	430a      	orrs	r2, r1
 8000528:	601a      	str	r2, [r3, #0]
				temp=0;
 800052a:	2300      	movs	r3, #0
 800052c:	617b      	str	r3, [r7, #20]
		if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	795b      	ldrb	r3, [r3, #5]
 8000532:	2b04      	cmp	r3, #4
 8000534:	d117      	bne.n	8000566 <GPIO_Init+0xd6>
		{
			EXTI->FTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000536:	4b47      	ldr	r3, [pc, #284]	@ (8000654 <GPIO_Init+0x1c4>)
 8000538:	68db      	ldr	r3, [r3, #12]
 800053a:	687a      	ldr	r2, [r7, #4]
 800053c:	7912      	ldrb	r2, [r2, #4]
 800053e:	4611      	mov	r1, r2
 8000540:	2201      	movs	r2, #1
 8000542:	408a      	lsls	r2, r1
 8000544:	4611      	mov	r1, r2
 8000546:	4a43      	ldr	r2, [pc, #268]	@ (8000654 <GPIO_Init+0x1c4>)
 8000548:	430b      	orrs	r3, r1
 800054a:	60d3      	str	r3, [r2, #12]

			EXTI->RTSR1 &=~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800054c:	4b41      	ldr	r3, [pc, #260]	@ (8000654 <GPIO_Init+0x1c4>)
 800054e:	689b      	ldr	r3, [r3, #8]
 8000550:	687a      	ldr	r2, [r7, #4]
 8000552:	7912      	ldrb	r2, [r2, #4]
 8000554:	4611      	mov	r1, r2
 8000556:	2201      	movs	r2, #1
 8000558:	408a      	lsls	r2, r1
 800055a:	43d2      	mvns	r2, r2
 800055c:	4611      	mov	r1, r2
 800055e:	4a3d      	ldr	r2, [pc, #244]	@ (8000654 <GPIO_Init+0x1c4>)
 8000560:	400b      	ands	r3, r1
 8000562:	6093      	str	r3, [r2, #8]
 8000564:	e035      	b.n	80005d2 <GPIO_Init+0x142>
		}
		else if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	795b      	ldrb	r3, [r3, #5]
 800056a:	2b05      	cmp	r3, #5
 800056c:	d117      	bne.n	800059e <GPIO_Init+0x10e>
		{
			EXTI->RTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 800056e:	4b39      	ldr	r3, [pc, #228]	@ (8000654 <GPIO_Init+0x1c4>)
 8000570:	689b      	ldr	r3, [r3, #8]
 8000572:	687a      	ldr	r2, [r7, #4]
 8000574:	7912      	ldrb	r2, [r2, #4]
 8000576:	4611      	mov	r1, r2
 8000578:	2201      	movs	r2, #1
 800057a:	408a      	lsls	r2, r1
 800057c:	4611      	mov	r1, r2
 800057e:	4a35      	ldr	r2, [pc, #212]	@ (8000654 <GPIO_Init+0x1c4>)
 8000580:	430b      	orrs	r3, r1
 8000582:	6093      	str	r3, [r2, #8]

			EXTI->FTSR1 &=~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000584:	4b33      	ldr	r3, [pc, #204]	@ (8000654 <GPIO_Init+0x1c4>)
 8000586:	68db      	ldr	r3, [r3, #12]
 8000588:	687a      	ldr	r2, [r7, #4]
 800058a:	7912      	ldrb	r2, [r2, #4]
 800058c:	4611      	mov	r1, r2
 800058e:	2201      	movs	r2, #1
 8000590:	408a      	lsls	r2, r1
 8000592:	43d2      	mvns	r2, r2
 8000594:	4611      	mov	r1, r2
 8000596:	4a2f      	ldr	r2, [pc, #188]	@ (8000654 <GPIO_Init+0x1c4>)
 8000598:	400b      	ands	r3, r1
 800059a:	60d3      	str	r3, [r2, #12]
 800059c:	e019      	b.n	80005d2 <GPIO_Init+0x142>

		}
		else if(pGPIOHandle -> GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 800059e:	687b      	ldr	r3, [r7, #4]
 80005a0:	795b      	ldrb	r3, [r3, #5]
 80005a2:	2b06      	cmp	r3, #6
 80005a4:	d115      	bne.n	80005d2 <GPIO_Init+0x142>
		{
			EXTI->FTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005a6:	4b2b      	ldr	r3, [pc, #172]	@ (8000654 <GPIO_Init+0x1c4>)
 80005a8:	68db      	ldr	r3, [r3, #12]
 80005aa:	687a      	ldr	r2, [r7, #4]
 80005ac:	7912      	ldrb	r2, [r2, #4]
 80005ae:	4611      	mov	r1, r2
 80005b0:	2201      	movs	r2, #1
 80005b2:	408a      	lsls	r2, r1
 80005b4:	4611      	mov	r1, r2
 80005b6:	4a27      	ldr	r2, [pc, #156]	@ (8000654 <GPIO_Init+0x1c4>)
 80005b8:	430b      	orrs	r3, r1
 80005ba:	60d3      	str	r3, [r2, #12]

			EXTI->RTSR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 80005bc:	4b25      	ldr	r3, [pc, #148]	@ (8000654 <GPIO_Init+0x1c4>)
 80005be:	689b      	ldr	r3, [r3, #8]
 80005c0:	687a      	ldr	r2, [r7, #4]
 80005c2:	7912      	ldrb	r2, [r2, #4]
 80005c4:	4611      	mov	r1, r2
 80005c6:	2201      	movs	r2, #1
 80005c8:	408a      	lsls	r2, r1
 80005ca:	4611      	mov	r1, r2
 80005cc:	4a21      	ldr	r2, [pc, #132]	@ (8000654 <GPIO_Init+0x1c4>)
 80005ce:	430b      	orrs	r3, r1
 80005d0:	6093      	str	r3, [r2, #8]
		}
	 uint8_t temp1=pGPIOHandle ->GPIO_PinConfig.GPIO_PinNumber/4;
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	791b      	ldrb	r3, [r3, #4]
 80005d6:	089b      	lsrs	r3, r3, #2
 80005d8:	74fb      	strb	r3, [r7, #19]
	 uint8_t temp2=pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber%4;
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	791b      	ldrb	r3, [r3, #4]
 80005de:	f003 0303 	and.w	r3, r3, #3
 80005e2:	74bb      	strb	r3, [r7, #18]
	 uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 80005ec:	d042      	beq.n	8000674 <GPIO_Init+0x1e4>
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	4a19      	ldr	r2, [pc, #100]	@ (8000658 <GPIO_Init+0x1c8>)
 80005f4:	4293      	cmp	r3, r2
 80005f6:	d02b      	beq.n	8000650 <GPIO_Init+0x1c0>
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	4a17      	ldr	r2, [pc, #92]	@ (800065c <GPIO_Init+0x1cc>)
 80005fe:	4293      	cmp	r3, r2
 8000600:	d024      	beq.n	800064c <GPIO_Init+0x1bc>
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	4a16      	ldr	r2, [pc, #88]	@ (8000660 <GPIO_Init+0x1d0>)
 8000608:	4293      	cmp	r3, r2
 800060a:	d01d      	beq.n	8000648 <GPIO_Init+0x1b8>
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	4a14      	ldr	r2, [pc, #80]	@ (8000664 <GPIO_Init+0x1d4>)
 8000612:	4293      	cmp	r3, r2
 8000614:	d016      	beq.n	8000644 <GPIO_Init+0x1b4>
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	681b      	ldr	r3, [r3, #0]
 800061a:	4a13      	ldr	r2, [pc, #76]	@ (8000668 <GPIO_Init+0x1d8>)
 800061c:	4293      	cmp	r3, r2
 800061e:	d00f      	beq.n	8000640 <GPIO_Init+0x1b0>
 8000620:	687b      	ldr	r3, [r7, #4]
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	4a11      	ldr	r2, [pc, #68]	@ (800066c <GPIO_Init+0x1dc>)
 8000626:	4293      	cmp	r3, r2
 8000628:	d008      	beq.n	800063c <GPIO_Init+0x1ac>
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	681b      	ldr	r3, [r3, #0]
 800062e:	4a10      	ldr	r2, [pc, #64]	@ (8000670 <GPIO_Init+0x1e0>)
 8000630:	4293      	cmp	r3, r2
 8000632:	d101      	bne.n	8000638 <GPIO_Init+0x1a8>
 8000634:	2307      	movs	r3, #7
 8000636:	e01e      	b.n	8000676 <GPIO_Init+0x1e6>
 8000638:	2300      	movs	r3, #0
 800063a:	e01c      	b.n	8000676 <GPIO_Init+0x1e6>
 800063c:	2306      	movs	r3, #6
 800063e:	e01a      	b.n	8000676 <GPIO_Init+0x1e6>
 8000640:	2305      	movs	r3, #5
 8000642:	e018      	b.n	8000676 <GPIO_Init+0x1e6>
 8000644:	2304      	movs	r3, #4
 8000646:	e016      	b.n	8000676 <GPIO_Init+0x1e6>
 8000648:	2303      	movs	r3, #3
 800064a:	e014      	b.n	8000676 <GPIO_Init+0x1e6>
 800064c:	2302      	movs	r3, #2
 800064e:	e012      	b.n	8000676 <GPIO_Init+0x1e6>
 8000650:	2301      	movs	r3, #1
 8000652:	e010      	b.n	8000676 <GPIO_Init+0x1e6>
 8000654:	40010400 	.word	0x40010400
 8000658:	48000400 	.word	0x48000400
 800065c:	48000800 	.word	0x48000800
 8000660:	48000c00 	.word	0x48000c00
 8000664:	48001000 	.word	0x48001000
 8000668:	48001400 	.word	0x48001400
 800066c:	48001800 	.word	0x48001800
 8000670:	48001c00 	.word	0x48001c00
 8000674:	2300      	movs	r3, #0
 8000676:	747b      	strb	r3, [r7, #17]
	 SYSCFG_PCLK_EN();
 8000678:	4b5e      	ldr	r3, [pc, #376]	@ (80007f4 <GPIO_Init+0x364>)
 800067a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800067c:	4a5d      	ldr	r2, [pc, #372]	@ (80007f4 <GPIO_Init+0x364>)
 800067e:	f043 0301 	orr.w	r3, r3, #1
 8000682:	6613      	str	r3, [r2, #96]	@ 0x60
	 SYSCFG->EXTICR[temp1]=portcode << (temp2 * 4);
 8000684:	7c7a      	ldrb	r2, [r7, #17]
 8000686:	7cbb      	ldrb	r3, [r7, #18]
 8000688:	009b      	lsls	r3, r3, #2
 800068a:	fa02 f103 	lsl.w	r1, r2, r3
 800068e:	4a5a      	ldr	r2, [pc, #360]	@ (80007f8 <GPIO_Init+0x368>)
 8000690:	7cfb      	ldrb	r3, [r7, #19]
 8000692:	3302      	adds	r3, #2
 8000694:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	 EXTI -> IMR1 |=1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8000698:	4b58      	ldr	r3, [pc, #352]	@ (80007fc <GPIO_Init+0x36c>)
 800069a:	681b      	ldr	r3, [r3, #0]
 800069c:	687a      	ldr	r2, [r7, #4]
 800069e:	7912      	ldrb	r2, [r2, #4]
 80006a0:	4611      	mov	r1, r2
 80006a2:	2201      	movs	r2, #1
 80006a4:	408a      	lsls	r2, r1
 80006a6:	4611      	mov	r1, r2
 80006a8:	4a54      	ldr	r2, [pc, #336]	@ (80007fc <GPIO_Init+0x36c>)
 80006aa:	430b      	orrs	r3, r1
 80006ac:	6013      	str	r3, [r2, #0]
	}

	temp=0;
 80006ae:	2300      	movs	r3, #0
 80006b0:	617b      	str	r3, [r7, #20]
	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006b2:	687b      	ldr	r3, [r7, #4]
 80006b4:	799b      	ldrb	r3, [r3, #6]
 80006b6:	461a      	mov	r2, r3
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	791b      	ldrb	r3, [r3, #4]
 80006bc:	005b      	lsls	r3, r3, #1
 80006be:	fa02 f303 	lsl.w	r3, r2, r3
 80006c2:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->OSPEEDR &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	681b      	ldr	r3, [r3, #0]
 80006c8:	689a      	ldr	r2, [r3, #8]
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	791b      	ldrb	r3, [r3, #4]
 80006ce:	005b      	lsls	r3, r3, #1
 80006d0:	2103      	movs	r1, #3
 80006d2:	fa01 f303 	lsl.w	r3, r1, r3
 80006d6:	43db      	mvns	r3, r3
 80006d8:	4619      	mov	r1, r3
 80006da:	687b      	ldr	r3, [r7, #4]
 80006dc:	681b      	ldr	r3, [r3, #0]
 80006de:	400a      	ands	r2, r1
 80006e0:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80006e2:	687b      	ldr	r3, [r7, #4]
 80006e4:	681b      	ldr	r3, [r3, #0]
 80006e6:	6899      	ldr	r1, [r3, #8]
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	697a      	ldr	r2, [r7, #20]
 80006ee:	430a      	orrs	r2, r1
 80006f0:	609a      	str	r2, [r3, #8]
	temp=0;
 80006f2:	2300      	movs	r3, #0
 80006f4:	617b      	str	r3, [r7, #20]

	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinPuPdControl<< (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	79db      	ldrb	r3, [r3, #7]
 80006fa:	461a      	mov	r2, r3
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	791b      	ldrb	r3, [r3, #4]
 8000700:	005b      	lsls	r3, r3, #1
 8000702:	fa02 f303 	lsl.w	r3, r2, r3
 8000706:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->PUPDR &= ~(0X03 << (2* pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 8000708:	687b      	ldr	r3, [r7, #4]
 800070a:	681b      	ldr	r3, [r3, #0]
 800070c:	68da      	ldr	r2, [r3, #12]
 800070e:	687b      	ldr	r3, [r7, #4]
 8000710:	791b      	ldrb	r3, [r3, #4]
 8000712:	005b      	lsls	r3, r3, #1
 8000714:	2103      	movs	r1, #3
 8000716:	fa01 f303 	lsl.w	r3, r1, r3
 800071a:	43db      	mvns	r3, r3
 800071c:	4619      	mov	r1, r3
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	681b      	ldr	r3, [r3, #0]
 8000722:	400a      	ands	r2, r1
 8000724:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000726:	687b      	ldr	r3, [r7, #4]
 8000728:	681b      	ldr	r3, [r3, #0]
 800072a:	68d9      	ldr	r1, [r3, #12]
 800072c:	687b      	ldr	r3, [r7, #4]
 800072e:	681b      	ldr	r3, [r3, #0]
 8000730:	697a      	ldr	r2, [r7, #20]
 8000732:	430a      	orrs	r2, r1
 8000734:	60da      	str	r2, [r3, #12]
	temp=0;
 8000736:	2300      	movs	r3, #0
 8000738:	617b      	str	r3, [r7, #20]

	temp=(pGPIOHandle -> GPIO_PinConfig.GPIO_PinOPType<<  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	7a1b      	ldrb	r3, [r3, #8]
 800073e:	461a      	mov	r2, r3
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	791b      	ldrb	r3, [r3, #4]
 8000744:	fa02 f303 	lsl.w	r3, r2, r3
 8000748:	617b      	str	r3, [r7, #20]
	pGPIOHandle ->pGPIOx->OTYPER &= ~(0X01 << ( pGPIOHandle -> GPIO_PinConfig.GPIO_PinNumber));
 800074a:	687b      	ldr	r3, [r7, #4]
 800074c:	681b      	ldr	r3, [r3, #0]
 800074e:	685a      	ldr	r2, [r3, #4]
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	791b      	ldrb	r3, [r3, #4]
 8000754:	4619      	mov	r1, r3
 8000756:	2301      	movs	r3, #1
 8000758:	408b      	lsls	r3, r1
 800075a:	43db      	mvns	r3, r3
 800075c:	4619      	mov	r1, r3
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	681b      	ldr	r3, [r3, #0]
 8000762:	400a      	ands	r2, r1
 8000764:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	681b      	ldr	r3, [r3, #0]
 800076a:	6859      	ldr	r1, [r3, #4]
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	681b      	ldr	r3, [r3, #0]
 8000770:	697a      	ldr	r2, [r7, #20]
 8000772:	430a      	orrs	r2, r1
 8000774:	605a      	str	r2, [r3, #4]
	temp=0;
 8000776:	2300      	movs	r3, #0
 8000778:	617b      	str	r3, [r7, #20]

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	795b      	ldrb	r3, [r3, #5]
 800077e:	2b02      	cmp	r3, #2
 8000780:	d132      	bne.n	80007e8 <GPIO_Init+0x358>
	{
		uint32_t temp1 ,temp2;
		temp1=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	791b      	ldrb	r3, [r3, #4]
 8000786:	08db      	lsrs	r3, r3, #3
 8000788:	b2db      	uxtb	r3, r3
 800078a:	60fb      	str	r3, [r7, #12]
		temp2=pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	791b      	ldrb	r3, [r3, #4]
 8000790:	f003 0307 	and.w	r3, r3, #7
 8000794:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0X0f<< (4*temp2));
 8000796:	687b      	ldr	r3, [r7, #4]
 8000798:	681b      	ldr	r3, [r3, #0]
 800079a:	68fa      	ldr	r2, [r7, #12]
 800079c:	3208      	adds	r2, #8
 800079e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80007a2:	68bb      	ldr	r3, [r7, #8]
 80007a4:	009b      	lsls	r3, r3, #2
 80007a6:	210f      	movs	r1, #15
 80007a8:	fa01 f303 	lsl.w	r3, r1, r3
 80007ac:	43db      	mvns	r3, r3
 80007ae:	4619      	mov	r1, r3
 80007b0:	687b      	ldr	r3, [r7, #4]
 80007b2:	681b      	ldr	r3, [r3, #0]
 80007b4:	4011      	ands	r1, r2
 80007b6:	68fa      	ldr	r2, [r7, #12]
 80007b8:	3208      	adds	r2, #8
 80007ba:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*temp2));
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	681b      	ldr	r3, [r3, #0]
 80007c2:	68fa      	ldr	r2, [r7, #12]
 80007c4:	3208      	adds	r2, #8
 80007c6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80007ca:	687b      	ldr	r3, [r7, #4]
 80007cc:	7a5b      	ldrb	r3, [r3, #9]
 80007ce:	4619      	mov	r1, r3
 80007d0:	68bb      	ldr	r3, [r7, #8]
 80007d2:	009b      	lsls	r3, r3, #2
 80007d4:	fa01 f303 	lsl.w	r3, r1, r3
 80007d8:	4619      	mov	r1, r3
 80007da:	687b      	ldr	r3, [r7, #4]
 80007dc:	681b      	ldr	r3, [r3, #0]
 80007de:	4311      	orrs	r1, r2
 80007e0:	68fa      	ldr	r2, [r7, #12]
 80007e2:	3208      	adds	r2, #8
 80007e4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
}
 80007e8:	bf00      	nop
 80007ea:	371c      	adds	r7, #28
 80007ec:	46bd      	mov	sp, r7
 80007ee:	bc80      	pop	{r7}
 80007f0:	4770      	bx	lr
 80007f2:	bf00      	nop
 80007f4:	40021000 	.word	0x40021000
 80007f8:	40010000 	.word	0x40010000
 80007fc:	40010400 	.word	0x40010400

08000800 <GPIO_ToggleOutputPin>:
void GPIO_WriteToOutputPort(GPIO_Regdef_t *pGPIOx,uint16_t value)
{
	pGPIOx->ODR=value;
}
void GPIO_ToggleOutputPin(GPIO_Regdef_t *pGPIOx,uint8_t PinNumber)
{
 8000800:	b480      	push	{r7}
 8000802:	b083      	sub	sp, #12
 8000804:	af00      	add	r7, sp, #0
 8000806:	6078      	str	r0, [r7, #4]
 8000808:	460b      	mov	r3, r1
 800080a:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1<<PinNumber);
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	695b      	ldr	r3, [r3, #20]
 8000810:	78fa      	ldrb	r2, [r7, #3]
 8000812:	2101      	movs	r1, #1
 8000814:	fa01 f202 	lsl.w	r2, r1, r2
 8000818:	405a      	eors	r2, r3
 800081a:	687b      	ldr	r3, [r7, #4]
 800081c:	615a      	str	r2, [r3, #20]
}
 800081e:	bf00      	nop
 8000820:	370c      	adds	r7, #12
 8000822:	46bd      	mov	sp, r7
 8000824:	bc80      	pop	{r7}
 8000826:	4770      	bx	lr

08000828 <GPIO_IRQInterruptConfig>:

/*IRQ and ISR  configuration */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000828:	b480      	push	{r7}
 800082a:	b083      	sub	sp, #12
 800082c:	af00      	add	r7, sp, #0
 800082e:	4603      	mov	r3, r0
 8000830:	460a      	mov	r2, r1
 8000832:	71fb      	strb	r3, [r7, #7]
 8000834:	4613      	mov	r3, r2
 8000836:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8000838:	79bb      	ldrb	r3, [r7, #6]
 800083a:	2b01      	cmp	r3, #1
 800083c:	d133      	bne.n	80008a6 <GPIO_IRQInterruptConfig+0x7e>
	{
		if(IRQNumber <=31)
 800083e:	79fb      	ldrb	r3, [r7, #7]
 8000840:	2b1f      	cmp	r3, #31
 8000842:	d80a      	bhi.n	800085a <GPIO_IRQInterruptConfig+0x32>
		{
			*NVIC_ISER0 |=1<<IRQNumber;
 8000844:	4b34      	ldr	r3, [pc, #208]	@ (8000918 <GPIO_IRQInterruptConfig+0xf0>)
 8000846:	681b      	ldr	r3, [r3, #0]
 8000848:	79fa      	ldrb	r2, [r7, #7]
 800084a:	2101      	movs	r1, #1
 800084c:	fa01 f202 	lsl.w	r2, r1, r2
 8000850:	4611      	mov	r1, r2
 8000852:	4a31      	ldr	r2, [pc, #196]	@ (8000918 <GPIO_IRQInterruptConfig+0xf0>)
 8000854:	430b      	orrs	r3, r1
 8000856:	6013      	str	r3, [r2, #0]
		else if(IRQNumber >= 64 && IRQNumber <96)
		{
			*NVIC_ICER2 |=(1<<(IRQNumber %64));
		}
	}
}
 8000858:	e059      	b.n	800090e <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >32 && IRQNumber <64)
 800085a:	79fb      	ldrb	r3, [r7, #7]
 800085c:	2b20      	cmp	r3, #32
 800085e:	d90f      	bls.n	8000880 <GPIO_IRQInterruptConfig+0x58>
 8000860:	79fb      	ldrb	r3, [r7, #7]
 8000862:	2b3f      	cmp	r3, #63	@ 0x3f
 8000864:	d80c      	bhi.n	8000880 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |=(1<<(IRQNumber%32));
 8000866:	4b2d      	ldr	r3, [pc, #180]	@ (800091c <GPIO_IRQInterruptConfig+0xf4>)
 8000868:	681b      	ldr	r3, [r3, #0]
 800086a:	79fa      	ldrb	r2, [r7, #7]
 800086c:	f002 021f 	and.w	r2, r2, #31
 8000870:	2101      	movs	r1, #1
 8000872:	fa01 f202 	lsl.w	r2, r1, r2
 8000876:	4611      	mov	r1, r2
 8000878:	4a28      	ldr	r2, [pc, #160]	@ (800091c <GPIO_IRQInterruptConfig+0xf4>)
 800087a:	430b      	orrs	r3, r1
 800087c:	6013      	str	r3, [r2, #0]
 800087e:	e046      	b.n	800090e <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber <96)
 8000880:	79fb      	ldrb	r3, [r7, #7]
 8000882:	2b3f      	cmp	r3, #63	@ 0x3f
 8000884:	d943      	bls.n	800090e <GPIO_IRQInterruptConfig+0xe6>
 8000886:	79fb      	ldrb	r3, [r7, #7]
 8000888:	2b5f      	cmp	r3, #95	@ 0x5f
 800088a:	d840      	bhi.n	800090e <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ISER2 |=(1<<(IRQNumber %64));
 800088c:	4b24      	ldr	r3, [pc, #144]	@ (8000920 <GPIO_IRQInterruptConfig+0xf8>)
 800088e:	681b      	ldr	r3, [r3, #0]
 8000890:	79fa      	ldrb	r2, [r7, #7]
 8000892:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8000896:	2101      	movs	r1, #1
 8000898:	fa01 f202 	lsl.w	r2, r1, r2
 800089c:	4611      	mov	r1, r2
 800089e:	4a20      	ldr	r2, [pc, #128]	@ (8000920 <GPIO_IRQInterruptConfig+0xf8>)
 80008a0:	430b      	orrs	r3, r1
 80008a2:	6013      	str	r3, [r2, #0]
}
 80008a4:	e033      	b.n	800090e <GPIO_IRQInterruptConfig+0xe6>
		if(IRQNumber <=31)
 80008a6:	79fb      	ldrb	r3, [r7, #7]
 80008a8:	2b1f      	cmp	r3, #31
 80008aa:	d80a      	bhi.n	80008c2 <GPIO_IRQInterruptConfig+0x9a>
			*NVIC_ICER0 |=1<<IRQNumber;
 80008ac:	4b1d      	ldr	r3, [pc, #116]	@ (8000924 <GPIO_IRQInterruptConfig+0xfc>)
 80008ae:	681b      	ldr	r3, [r3, #0]
 80008b0:	79fa      	ldrb	r2, [r7, #7]
 80008b2:	2101      	movs	r1, #1
 80008b4:	fa01 f202 	lsl.w	r2, r1, r2
 80008b8:	4611      	mov	r1, r2
 80008ba:	4a1a      	ldr	r2, [pc, #104]	@ (8000924 <GPIO_IRQInterruptConfig+0xfc>)
 80008bc:	430b      	orrs	r3, r1
 80008be:	6013      	str	r3, [r2, #0]
}
 80008c0:	e025      	b.n	800090e <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >32 && IRQNumber <64)
 80008c2:	79fb      	ldrb	r3, [r7, #7]
 80008c4:	2b20      	cmp	r3, #32
 80008c6:	d90f      	bls.n	80008e8 <GPIO_IRQInterruptConfig+0xc0>
 80008c8:	79fb      	ldrb	r3, [r7, #7]
 80008ca:	2b3f      	cmp	r3, #63	@ 0x3f
 80008cc:	d80c      	bhi.n	80008e8 <GPIO_IRQInterruptConfig+0xc0>
			*NVIC_ICER1 |=(1<<(IRQNumber%32));
 80008ce:	4b16      	ldr	r3, [pc, #88]	@ (8000928 <GPIO_IRQInterruptConfig+0x100>)
 80008d0:	681b      	ldr	r3, [r3, #0]
 80008d2:	79fa      	ldrb	r2, [r7, #7]
 80008d4:	f002 021f 	and.w	r2, r2, #31
 80008d8:	2101      	movs	r1, #1
 80008da:	fa01 f202 	lsl.w	r2, r1, r2
 80008de:	4611      	mov	r1, r2
 80008e0:	4a11      	ldr	r2, [pc, #68]	@ (8000928 <GPIO_IRQInterruptConfig+0x100>)
 80008e2:	430b      	orrs	r3, r1
 80008e4:	6013      	str	r3, [r2, #0]
 80008e6:	e012      	b.n	800090e <GPIO_IRQInterruptConfig+0xe6>
		else if(IRQNumber >= 64 && IRQNumber <96)
 80008e8:	79fb      	ldrb	r3, [r7, #7]
 80008ea:	2b3f      	cmp	r3, #63	@ 0x3f
 80008ec:	d90f      	bls.n	800090e <GPIO_IRQInterruptConfig+0xe6>
 80008ee:	79fb      	ldrb	r3, [r7, #7]
 80008f0:	2b5f      	cmp	r3, #95	@ 0x5f
 80008f2:	d80c      	bhi.n	800090e <GPIO_IRQInterruptConfig+0xe6>
			*NVIC_ICER2 |=(1<<(IRQNumber %64));
 80008f4:	4b0d      	ldr	r3, [pc, #52]	@ (800092c <GPIO_IRQInterruptConfig+0x104>)
 80008f6:	681b      	ldr	r3, [r3, #0]
 80008f8:	79fa      	ldrb	r2, [r7, #7]
 80008fa:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80008fe:	2101      	movs	r1, #1
 8000900:	fa01 f202 	lsl.w	r2, r1, r2
 8000904:	4611      	mov	r1, r2
 8000906:	4a09      	ldr	r2, [pc, #36]	@ (800092c <GPIO_IRQInterruptConfig+0x104>)
 8000908:	430b      	orrs	r3, r1
 800090a:	6013      	str	r3, [r2, #0]
}
 800090c:	e7ff      	b.n	800090e <GPIO_IRQInterruptConfig+0xe6>
 800090e:	bf00      	nop
 8000910:	370c      	adds	r7, #12
 8000912:	46bd      	mov	sp, r7
 8000914:	bc80      	pop	{r7}
 8000916:	4770      	bx	lr
 8000918:	e000e100 	.word	0xe000e100
 800091c:	e000e104 	.word	0xe000e104
 8000920:	e000e108 	.word	0xe000e108
 8000924:	e000e180 	.word	0xe000e180
 8000928:	e000e184 	.word	0xe000e184
 800092c:	e000e188 	.word	0xe000e188

08000930 <GPIO_PRIORITY_CONFIG>:
void GPIO_PRIORITY_CONFIG(uint8_t IRQNumber,uint8_t IRQPriority)
{
 8000930:	b480      	push	{r7}
 8000932:	b085      	sub	sp, #20
 8000934:	af00      	add	r7, sp, #0
 8000936:	4603      	mov	r3, r0
 8000938:	460a      	mov	r2, r1
 800093a:	71fb      	strb	r3, [r7, #7]
 800093c:	4613      	mov	r3, r2
 800093e:	71bb      	strb	r3, [r7, #6]
	uint8_t iprx = IRQNumber /4;
 8000940:	79fb      	ldrb	r3, [r7, #7]
 8000942:	089b      	lsrs	r3, r3, #2
 8000944:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section =IRQNumber %4;
 8000946:	79fb      	ldrb	r3, [r7, #7]
 8000948:	f003 0303 	and.w	r3, r3, #3
 800094c:	73bb      	strb	r3, [r7, #14]

	uint8_t shift_amount = (8 * iprx_section ) + (8- NO_PR_BITS_IMPLEMENTED);
 800094e:	7bbb      	ldrb	r3, [r7, #14]
 8000950:	00db      	lsls	r3, r3, #3
 8000952:	b2db      	uxtb	r3, r3
 8000954:	3304      	adds	r3, #4
 8000956:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR+(iprx *4))|= IRQPriority <<(8* shift_amount);
 8000958:	7bfb      	ldrb	r3, [r7, #15]
 800095a:	011b      	lsls	r3, r3, #4
 800095c:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000960:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000964:	681a      	ldr	r2, [r3, #0]
 8000966:	79b9      	ldrb	r1, [r7, #6]
 8000968:	7b7b      	ldrb	r3, [r7, #13]
 800096a:	00db      	lsls	r3, r3, #3
 800096c:	fa01 f303 	lsl.w	r3, r1, r3
 8000970:	4619      	mov	r1, r3
 8000972:	7bfb      	ldrb	r3, [r7, #15]
 8000974:	011b      	lsls	r3, r3, #4
 8000976:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 800097a:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 800097e:	430a      	orrs	r2, r1
 8000980:	601a      	str	r2, [r3, #0]

}
 8000982:	bf00      	nop
 8000984:	3714      	adds	r7, #20
 8000986:	46bd      	mov	sp, r7
 8000988:	bc80      	pop	{r7}
 800098a:	4770      	bx	lr

0800098c <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber)
{
 800098c:	b480      	push	{r7}
 800098e:	b083      	sub	sp, #12
 8000990:	af00      	add	r7, sp, #0
 8000992:	4603      	mov	r3, r0
 8000994:	71fb      	strb	r3, [r7, #7]
	if(EXTI->PR1 & (1<< PinNumber))
 8000996:	4b0c      	ldr	r3, [pc, #48]	@ (80009c8 <GPIO_IRQHandling+0x3c>)
 8000998:	695b      	ldr	r3, [r3, #20]
 800099a:	79fa      	ldrb	r2, [r7, #7]
 800099c:	2101      	movs	r1, #1
 800099e:	fa01 f202 	lsl.w	r2, r1, r2
 80009a2:	4013      	ands	r3, r2
 80009a4:	2b00      	cmp	r3, #0
 80009a6:	d009      	beq.n	80009bc <GPIO_IRQHandling+0x30>
	{
		EXTI->PR1 |=(1<<PinNumber);
 80009a8:	4b07      	ldr	r3, [pc, #28]	@ (80009c8 <GPIO_IRQHandling+0x3c>)
 80009aa:	695b      	ldr	r3, [r3, #20]
 80009ac:	79fa      	ldrb	r2, [r7, #7]
 80009ae:	2101      	movs	r1, #1
 80009b0:	fa01 f202 	lsl.w	r2, r1, r2
 80009b4:	4611      	mov	r1, r2
 80009b6:	4a04      	ldr	r2, [pc, #16]	@ (80009c8 <GPIO_IRQHandling+0x3c>)
 80009b8:	430b      	orrs	r3, r1
 80009ba:	6153      	str	r3, [r2, #20]
	}
}
 80009bc:	bf00      	nop
 80009be:	370c      	adds	r7, #12
 80009c0:	46bd      	mov	sp, r7
 80009c2:	bc80      	pop	{r7}
 80009c4:	4770      	bx	lr
 80009c6:	bf00      	nop
 80009c8:	40010400 	.word	0x40010400

080009cc <memset>:
 80009cc:	4402      	add	r2, r0
 80009ce:	4603      	mov	r3, r0
 80009d0:	4293      	cmp	r3, r2
 80009d2:	d100      	bne.n	80009d6 <memset+0xa>
 80009d4:	4770      	bx	lr
 80009d6:	f803 1b01 	strb.w	r1, [r3], #1
 80009da:	e7f9      	b.n	80009d0 <memset+0x4>

080009dc <__libc_init_array>:
 80009dc:	b570      	push	{r4, r5, r6, lr}
 80009de:	4d0d      	ldr	r5, [pc, #52]	@ (8000a14 <__libc_init_array+0x38>)
 80009e0:	4c0d      	ldr	r4, [pc, #52]	@ (8000a18 <__libc_init_array+0x3c>)
 80009e2:	1b64      	subs	r4, r4, r5
 80009e4:	10a4      	asrs	r4, r4, #2
 80009e6:	2600      	movs	r6, #0
 80009e8:	42a6      	cmp	r6, r4
 80009ea:	d109      	bne.n	8000a00 <__libc_init_array+0x24>
 80009ec:	4d0b      	ldr	r5, [pc, #44]	@ (8000a1c <__libc_init_array+0x40>)
 80009ee:	4c0c      	ldr	r4, [pc, #48]	@ (8000a20 <__libc_init_array+0x44>)
 80009f0:	f000 f818 	bl	8000a24 <_init>
 80009f4:	1b64      	subs	r4, r4, r5
 80009f6:	10a4      	asrs	r4, r4, #2
 80009f8:	2600      	movs	r6, #0
 80009fa:	42a6      	cmp	r6, r4
 80009fc:	d105      	bne.n	8000a0a <__libc_init_array+0x2e>
 80009fe:	bd70      	pop	{r4, r5, r6, pc}
 8000a00:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a04:	4798      	blx	r3
 8000a06:	3601      	adds	r6, #1
 8000a08:	e7ee      	b.n	80009e8 <__libc_init_array+0xc>
 8000a0a:	f855 3b04 	ldr.w	r3, [r5], #4
 8000a0e:	4798      	blx	r3
 8000a10:	3601      	adds	r6, #1
 8000a12:	e7f2      	b.n	80009fa <__libc_init_array+0x1e>
 8000a14:	08000a3c 	.word	0x08000a3c
 8000a18:	08000a3c 	.word	0x08000a3c
 8000a1c:	08000a3c 	.word	0x08000a3c
 8000a20:	08000a40 	.word	0x08000a40

08000a24 <_init>:
 8000a24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a26:	bf00      	nop
 8000a28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a2a:	bc08      	pop	{r3}
 8000a2c:	469e      	mov	lr, r3
 8000a2e:	4770      	bx	lr

08000a30 <_fini>:
 8000a30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a32:	bf00      	nop
 8000a34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a36:	bc08      	pop	{r3}
 8000a38:	469e      	mov	lr, r3
 8000a3a:	4770      	bx	lr
